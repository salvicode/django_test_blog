{"version":3,"sources":["webpack:///./node_modules/remarkable/lib/common/utils.js","webpack:///./node_modules/remarkable/lib/ruler.js","webpack:///./node_modules/remarkable/lib/helpers/parse_link_label.js","webpack:///./node_modules/remarkable/index.js","webpack:///./node_modules/remarkable/lib/rules_inline/state_inline.js","webpack:///./node_modules/remarkable/lib/common/entities.js","webpack:///./node_modules/remarkable/lib/helpers/parse_link_destination.js","webpack:///./node_modules/remarkable/lib/helpers/normalize_link.js","webpack:///./node_modules/remarkable/lib/helpers/parse_link_title.js","webpack:///./node_modules/remarkable/lib/helpers/normalize_reference.js","webpack:///./node_modules/charenc/charenc.js","webpack:///./node_modules/md5/md5.js","webpack:///./node_modules/remarkable/lib/index.js","webpack:///./node_modules/remarkable/lib/renderer.js","webpack:///./node_modules/remarkable/lib/rules.js","webpack:///./node_modules/remarkable/lib/parser_core.js","webpack:///./node_modules/remarkable/lib/rules_core/block.js","webpack:///./node_modules/remarkable/lib/rules_core/abbr.js","webpack:///./node_modules/remarkable/lib/rules_core/references.js","webpack:///./node_modules/remarkable/lib/rules_core/inline.js","webpack:///./node_modules/remarkable/lib/rules_core/footnote_tail.js","webpack:///./node_modules/remarkable/lib/rules_core/abbr2.js","webpack:///./node_modules/remarkable/lib/rules_core/replacements.js","webpack:///./node_modules/remarkable/lib/rules_core/smartquotes.js","webpack:///./node_modules/remarkable/lib/rules_core/linkify.js","webpack:///./node_modules/autolinker/dist/Autolinker.js","webpack:///./node_modules/remarkable/lib/parser_block.js","webpack:///./node_modules/remarkable/lib/rules_block/state_block.js","webpack:///./node_modules/remarkable/lib/rules_block/code.js","webpack:///./node_modules/remarkable/lib/rules_block/fences.js","webpack:///./node_modules/remarkable/lib/rules_block/blockquote.js","webpack:///./node_modules/remarkable/lib/rules_block/hr.js","webpack:///./node_modules/remarkable/lib/rules_block/list.js","webpack:///./node_modules/remarkable/lib/rules_block/footnote.js","webpack:///./node_modules/remarkable/lib/rules_block/heading.js","webpack:///./node_modules/remarkable/lib/rules_block/lheading.js","webpack:///./node_modules/remarkable/lib/rules_block/htmlblock.js","webpack:///./node_modules/remarkable/lib/common/html_blocks.js","webpack:///./node_modules/remarkable/lib/rules_block/table.js","webpack:///./node_modules/remarkable/lib/rules_block/deflist.js","webpack:///./node_modules/remarkable/lib/rules_block/paragraph.js","webpack:///./node_modules/remarkable/lib/parser_inline.js","webpack:///./node_modules/remarkable/lib/rules_inline/text.js","webpack:///./node_modules/remarkable/lib/rules_inline/newline.js","webpack:///./node_modules/remarkable/lib/rules_inline/escape.js","webpack:///./node_modules/remarkable/lib/rules_inline/backticks.js","webpack:///./node_modules/remarkable/lib/rules_inline/del.js","webpack:///./node_modules/remarkable/lib/rules_inline/ins.js","webpack:///./node_modules/remarkable/lib/rules_inline/mark.js","webpack:///./node_modules/remarkable/lib/rules_inline/emphasis.js","webpack:///./node_modules/remarkable/lib/rules_inline/sub.js","webpack:///./node_modules/remarkable/lib/rules_inline/sup.js","webpack:///./node_modules/remarkable/lib/rules_inline/links.js","webpack:///./node_modules/remarkable/lib/rules_inline/footnote_inline.js","webpack:///./node_modules/remarkable/lib/rules_inline/footnote_ref.js","webpack:///./node_modules/remarkable/lib/rules_inline/autolink.js","webpack:///./node_modules/remarkable/lib/common/url_schemas.js","webpack:///./node_modules/remarkable/lib/rules_inline/htmltag.js","webpack:///./node_modules/remarkable/lib/common/html_re.js","webpack:///./node_modules/remarkable/lib/rules_inline/entity.js","webpack:///./node_modules/remarkable/lib/configs/default.js","webpack:///./node_modules/remarkable/lib/configs/full.js","webpack:///./node_modules/remarkable/lib/configs/commonmark.js","webpack:///./node_modules/crypt/crypt.js","webpack:///./node_modules/is-buffer/index.js"],"names":["hasOwn","Object","prototype","hasOwnProperty","has","object","key","call","UNESCAPE_MD_RE","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","String","fromCharCode","NAMED_ENTITY_RE","DIGITAL_ENTITY_TEST_RE","entities","replaceEntityPattern","match","name","code","charCodeAt","test","toLowerCase","parseInt","slice","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","ch","exports","assign","obj","sources","arguments","forEach","source","TypeError","keys","isString","toString","typeOf","unescapeMd","str","indexOf","replace","replaceEntities","escapeHtml","Ruler","this","__rules__","__cache__","__find__","len","length","i","__compile__","self","chains","rule","enabled","alt","altName","push","chain","fn","at","options","idx","opt","Error","before","beforeName","ruleName","splice","after","afterName","enable","list","strict","Array","isArray","disable","getRules","chainName","module","state","start","level","found","marker","labelEnd","max","posMax","oldPos","pos","oldFlag","isInLabel","labelUnmatchedScopes","src","parser","skipToken","StateInline","parserInline","env","outTokens","tokens","pending","pendingLevel","cache","linkLevel","linkContent","pushPending","type","content","token","cacheSet","val","cacheGet","normalizeLink","link","validateLink","url","normalized","decodeURI","err","encodeURI","trim","toUpperCase","charenc","utf8","stringToBytes","bin","unescape","encodeURIComponent","bytesToString","bytes","decodeURIComponent","escape","join","crypt","isBuffer","md5","message","constructor","encoding","m","bytesToWords","l","a","b","d","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","endian","x","s","t","n","_blocksize","_digestsize","digestbytes","wordsToBytes","asBytes","asString","bytesToHex","Renderer","ParserCore","ParserBlock","ParserInline","config","StateCore","instance","inlineMode","inline","block","renderer","typographer","Remarkable","preset","core","ruler","configure","set","presets","components","rules","use","plugin","parse","process","render","parseInline","renderInline","utils","getBreak","_rules","result","children","blockquote_open","blockquote_close","fence","fences","fenceName","langClass","langPrefix","params","split","fence_custom","highlight","apply","concat","heading_open","hLevel","heading_close","hr","xhtmlOut","bullet_list_open","bullet_list_close","list_item_open","list_item_close","ordered_list_open","order","ordered_list_close","paragraph_open","tight","paragraph_close","addBreak","link_open","title","target","linkTarget","href","link_close","image","table_open","table_close","thead_open","thead_close","tbody_open","tbody_close","tr_open","tr_close","th_open","align","th_close","td_open","td_close","strong_open","strong_close","em_open","em_close","del_open","del_close","ins_open","ins_close","mark_open","mark_close","sub","sup","hardbreak","softbreak","breaks","text","htmlblock","htmltag","abbr_open","abbr_close","footnote_ref","Number","id","subId","footnote_block_open","footnote_block_close","footnote_open","footnote_close","footnote_anchor","dl_open","dt_open","dd_open","dl_close","dt_close","dd_close","nextToken","Core","lines","parseLinkLabel","parseAbbr","label","abbreviations","parseLinkDestination","parseLinkTitle","normalizeReference","parseReference","references","tok","j","lastParagraph","current","currentLabel","insideRef","refTokens","footnotes","filter","pop","count","regEscape","nodes","reg","regText","blockTokens","abbrRegExp","map","substr","sort","RegExp","lastIndex","exec","index","RARE_RE","SCOPED_ABBR_RE","SCOPED_ABBR","inlineTokens","blkIdx","QUOTE_TEST_RE","QUOTE_RE","PUNCT_RE","isLetter","replaceAt","thisLevel","lastSpace","nextSpace","item","canOpen","canClose","isSingle","stack","OUTER","single","quotes","Autolinker","LINK_SCAN_RE","isLinkClose","createLinkifier","links","autolinker","stripPrefix","email","twitter","replaceFn","linker","getType","matchedText","getUrl","getEmail","ln","htmlLinkLevel","linkifier","linkify","alphaNumericChars","emailRegex","domainNameRegex","tldRegex","attrValueRegex","nameEqualsValueRegex","alphaNumericCharsStr","cfg","version","urls","normalizeUrlsCfg","phone","hashtag","newWindow","truncate","normalizeTruncateCfg","className","htmlParser","matchers","tagBuilder","textOrHtml","schemeMatches","wwwMatches","tldMatches","location","Util","defaults","POSITIVE_INFINITY","htmlNodes","getHtmlParser","anchorTagStackCount","matches","node","nodeType","getTagName","isClosing","Math","textNodeMatches","parseText","getText","getOffset","compactMatches","removeUnwantedMatches","endIdx","getMatchedText","remove","getUrlMatchType","offset","getMatchers","numMatchers","textMatches","parseMatches","numTextMatches","setOffset","newHtml","substring","createMatchReturnVal","replaceFnResult","HtmlTag","toAnchorString","buildTag","HtmlParser","matchersNs","matcher","getTagBuilder","Hashtag","serviceName","Email","Phone","Twitter","Url","AnchorTagBuilder","abstractMethod","trimRegex","dest","prop","undefined","extend","superclass","protoProps","subclass","superclassProto","F","subclassProto","ellipsis","truncateLen","ellipsisChars","arr","element","splitAndCapture","splitRegex","global","lastIdx","whitespaceRegex","innerHtml","innerHTML","setTagName","tagName","setAttr","attrName","attrValue","getAttrs","getAttr","setAttrs","attrs","tagAttrs","setClass","cssClass","addClass","newClass","classAttr","getClass","classes","newClasses","shift","removeClass","removeClasses","hasClass","setInnerHtml","html","getInnerHtml","attrsStr","buildAttrsStr","attrsArr","RegexLib","alphaCharsStr","build","createAttrs","getAnchorHref","processAnchorText","getAnchorText","matchType","anchorHref","createCssClass","anchorText","doTruncate","truncateLength","truncateLocation","TruncateSmart","TruncateMiddle","TruncateEnd","htmlRegex","htmlCharacterEntitiesRegex","currentResult","textAndEntityNodes","tagText","commentText","isClosingTag","inBetweenTagsText","parseTextAndEntityNodes","createCommentNode","createElementNode","textAndEntityTokens","textToken","entityToken","createTextNode","createEntityNode","CommentNode","comment","ElementNode","closing","EntityNode","TextNode","HtmlNode","getComment","Match","getServiceName","getHashtag","number","plusSign","getNumber","twitterHandle","getTwitterHandle","urlMatchType","protocolUrlMatch","protocolRelativeMatch","urlPrefixRegex","protocolRelativeRegex","protocolPrepended","stripProtocolRelativePrefix","stripUrlPrefix","removeTrailingSlash","charAt","Matcher","matcherRegex","nonWordCharRegex","prevChar","cleanNumber","urlSuffixRegex","wordCharRegExp","openParensRe","closeParensRe","matchStr","schemeUrlMatch","wwwUrlMatch","wwwProtocolRelativeMatch","tldProtocolRelativeMatch","UrlMatchValidator","isValid","matchHasUnbalancedClosingParen","matchHasInvalidCharAfterTld","openParensMatch","closeParensMatch","urlMatch","res","hasFullProtocolRegex","uriSchemeRegex","hasWordCharAfterProtocolRegex","ipRegex","isValidUriScheme","urlMatchDoesNotHaveProtocolOrDot","urlMatchDoesNotHaveAtLeastOneWordChar","isValidIpAddress","uriSchemeMatch","newRegex","uriScheme","availableLength","end","floor","ceil","buildUrl","urlObj","scheme","host","path","query","fragment","buildSegment","segment","remainingAvailableLength","remainingAvailableLengthHalf","startOffset","endOffset","urlSub","parse_url","matchQuery","pathAndQuery","StateBlock","tokenize","startLine","endLine","line","hasEmptyLines","skipEmptyLines","tShift","blkIndent","isEmpty","parentType","TABS_SCAN_RE","NEWLINES_RE","SPACES_RE","lineStart","lastTabPos","lineMax","indent","indent_found","bMarks","eMarks","ddIndent","from","skipSpaces","skipChars","skipCharsBack","min","getLines","begin","keepLastLF","first","last","queue","nextLine","silent","mem","haveEndMarker","lastLineEmpty","oldTShift","oldBMarks","oldIndent","oldParentType","terminatorRules","terminate","maxNesting","cnt","skipBulletListMarker","skipOrderedListMarker","oldTight","posAfterMarker","indentAfterMarker","markerValue","markerCharCode","isOrdered","contentStart","listTokIdx","prevEmptyEnd","listLines","itemLines","markTightParagraphs","oldBMark","refs","tmp","next","block_names","HTML_TAG_OPEN_RE","HTML_TAG_CLOSE_RE","lc","html_blocks","getLine","lineText","rows","cell","aligns","tableLines","tbodyLines","skipMarker","ddLine","dtLine","oldDDIndent","cached_pos","ok","isTerminatorChar","pmax","ESCAPED","matchStart","matchEnd","lastChar","nextChar","isAlphaNum","scanDelims","can_open","can_close","delims","startCount","oldCount","newCount","UNESCAPE_RE","labelStart","ref","isImage","footnoteId","oldLength","footnoteSubId","url_schemas","EMAIL_RE","AUTOLINK_RE","tail","linkMatch","emailMatch","fullUrl","HTML_TAG_RE","regex","attr_value","attribute","open_tag","DIGITAL_RE","NAMED_RE","base64map","rotl","rotr","randomBytes","random","words","hex","hexToBytes","bytesToBase64","base64","triplet","base64ToBytes","imod4","pow","readFloatLE","isSlowBuffer","_isBuffer"],"mappings":"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,QAAQ8pB,EAAU,GAAGprB,eAAiB,KAEtDoG,EAAMglB,EAAU,GAAGlrB,MAAM,GAAI,GAC7BorB,EAAUrlB,EAAcG,KACnBpC,EAAMc,OAAOqB,aAAaC,KAE1BsgB,IACH1iB,EAAMvB,KAAK,CACTkD,KAAM,YACNiI,KAAM0d,EACNpnB,MAAOF,EAAME,QAEfF,EAAMvB,KAAK,CACTkD,KAAM,OACNC,QAASQ,EACTlC,MAAOF,EAAME,MAAQ,IAEvBF,EAAMvB,KAAK,CAAEkD,KAAM,aAAczB,MAAOF,EAAME,SAGhDF,EAAMS,KAAO2mB,EAAU,GAAGppB,QACnB,OAGTqpB,EAAaF,EAAKxrB,MAAMsrB,MAItB7kB,EAAMilB,EAAW,GAAGnrB,MAAM,GAAI,GAE9BorB,EAAUrlB,EAAc,UAAYG,KAC/BpC,EAAMc,OAAOqB,aAAamlB,KAE1B5E,IACH1iB,EAAMvB,KAAK,CACTkD,KAAM,YACNiI,KAAM0d,EACNpnB,MAAOF,EAAME,QAEfF,EAAMvB,KAAK,CACTkD,KAAM,OACNC,QAASQ,EACTlC,MAAOF,EAAME,MAAQ,IAEvBF,EAAMvB,KAAK,CAAEkD,KAAM,aAAczB,MAAOF,EAAME,SAGhDF,EAAMS,KAAO4mB,EAAW,GAAGrpB,QACpB,Q,6BCnEX+B,EAAOvD,QAAU,CACf,OACA,MACA,aACA,MACA,OACA,QACA,OACA,MACA,MACA,OACA,OACA,MACA,OACA,MACA,OACA,MACA,MACA,KACA,SACA,OACA,OACA,QACA,MACA,OACA,KACA,OACA,OACA,MACA,OACA,YACA,WACA,YACA,WACA,OACA,SACA,MACA,OACA,QACA,OACA,UACA,OACA,MACA,KACA,MACA,OACA,kBACA,MACA,OACA,OACA,UACA,UACA,QACA,QACA,MACA,OACA,MACA,OACA,YACA,aACA,MACA,MACA,SACA,OACA,cACA,SACA,MACA,KACA,MACA,QACA,KACA,MACA,OACA,cACA,cACA,eACA,OACA,UACA,UACA,YACA,MACA,MACA,MACA,MACA,aACA,KACA,UACA,UACA,OACA,SACA,SACA,mBACA,0BACA,UACA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","file":"vendor~plugin-2.6.1.js","sourcesContent":["'use strict';\n\n/**\n * Utility functions\n */\n\nfunction typeOf(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return typeOf(obj) === '[object String]';\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return object\n    ? hasOwn.call(object, key)\n    : false;\n}\n\n// Extend objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = [].slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar UNESCAPE_MD_RE = /\\\\([\\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\nvar NAMED_ENTITY_RE   = /&([a-z#][a-z0-9]{1,31});/gi;\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  } else if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16)\n    :\n      parseInt(name.slice(1), 10);\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n  return match;\n}\n\nfunction replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(NAMED_ENTITY_RE, replaceEntityPattern);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nexports.assign            = assign;\nexports.isString          = isString;\nexports.has               = has;\nexports.unescapeMd        = unescapeMd;\nexports.isValidEntityCode = isValidEntityCode;\nexports.fromCodePoint     = fromCodePoint;\nexports.replaceEntities   = replaceEntities;\nexports.escapeHtml        = escapeHtml;\n","'use strict';\n\n/**\n * Ruler is a helper class for building responsibility chains from\n * parse rules. It allows:\n *\n *   - easy stack rules chains\n *   - getting main chain and named chains content (as arrays of functions)\n *\n * Helper methods, should not be used directly.\n * @api private\n */\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // { name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ] }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - digital anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n/**\n * Find the index of a rule by `name`.\n *\n * @param  {String} `name`\n * @return {Number} Index of the given `name`\n * @api private\n */\n\nRuler.prototype.__find__ = function (name) {\n  var len = this.__rules__.length;\n  var i = -1;\n\n  while (len--) {\n    if (this.__rules__[++i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n/**\n * Build the rules lookup cache\n *\n * @api private\n */\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n/**\n * Ruler public methods\n * ------------------------------------------------\n */\n\n/**\n * Replace rule function\n *\n * @param  {String} `name` Rule name\n * @param  {Function `fn`\n * @param  {Object} `options`\n * @api private\n */\n\nRuler.prototype.at = function (name, fn, options) {\n  var idx = this.__find__(name);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[idx].fn = fn;\n  this.__rules__[idx].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the chain before given the `ruleName`.\n *\n * @param  {String}   `beforeName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var idx = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(idx, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the chain after the given `ruleName`.\n *\n * @param  {String}   `afterName`\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @api private\n */\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var idx = this.__find__(afterName);\n  var opt = options || {};\n\n  if (idx === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(idx + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Add a rule to the end of chain.\n *\n * @param  {String}   `ruleName`\n * @param  {Function} `fn`\n * @param  {Object}   `options`\n * @return {String}\n */\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Enable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to enable\n * @param  {Boolean} `strict` If `true`, all non listed rules will be disabled.\n * @api private\n */\n\nRuler.prototype.enable = function (list, strict) {\n  list = !Array.isArray(list)\n    ? [ list ]\n    : list;\n\n  // In strict mode disable all existing rules first\n  if (strict) {\n    this.__rules__.forEach(function (rule) {\n      rule.enabled = false;\n    });\n  }\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n  }, this);\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Disable a rule or list of rules.\n *\n * @param  {String|Array} `list` Name or array of rule names to disable\n * @api private\n */\n\nRuler.prototype.disable = function (list) {\n  list = !Array.isArray(list)\n    ? [ list ]\n    : list;\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n    if (idx < 0) {\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n  }, this);\n\n  this.__cache__ = null;\n};\n\n/**\n * Get a rules list as an array of functions.\n *\n * @param  {String} `chainName`\n * @return {Object}\n * @api private\n */\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n  return this.__cache__[chainName] || [];\n};\n\n/**\n * Expose `Ruler`\n */\n\nmodule.exports = Ruler;\n","'use strict';\n\n/**\n * Parse link labels\n *\n * This function assumes that first character (`[`) already matches;\n * returns the end of the label.\n *\n * @param  {Object} state\n * @param  {Number} start\n * @api private\n */\n\nmodule.exports = function parseLinkLabel(state, start) {\n  var level, found, marker,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos,\n      oldFlag = state.isInLabel;\n\n  if (state.isInLabel) { return -1; }\n\n  if (state.labelUnmatchedScopes) {\n    state.labelUnmatchedScopes--;\n    return -1;\n  }\n\n  state.pos = start + 1;\n  state.isInLabel = true;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5B /* [ */) {\n      level++;\n    } else if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n    state.labelUnmatchedScopes = 0;\n  } else {\n    state.labelUnmatchedScopes = level - 1;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n  state.isInLabel = oldFlag;\n\n  return labelEnd;\n};\n","'use strict';\n\nmodule.exports = require('./lib/');\n","// Inline parser state\n\n'use strict';\n\nfunction StateInline(src, parserInline, options, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.options = options;\n  this.parser = parserInline;\n  this.tokens = outTokens;\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  this.cache = [];        // Stores { start: end } pairs. Useful for backtrack\n                          // optimization of pairs parse (emphasis, strikes).\n\n  // Link parser state vars\n\n  this.isInLabel = false; // Set true when seek link label - we should disable\n                          // \"paired\" rules (emphasis, strikes) to not skip\n                          // tailing `]`\n\n  this.linkLevel = 0;     // Increment for each nesting link. Used to prevent\n                          // nesting in definitions\n\n  this.linkContent = '';  // Temporary storage for link url\n\n  this.labelUnmatchedScopes = 0; // Track unpaired `[` for link labels\n                                 // (backtrack optimization)\n}\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  this.tokens.push({\n    type: 'text',\n    content: this.pending,\n    level: this.pendingLevel\n  });\n  this.pending = '';\n};\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (token) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  this.tokens.push(token);\n  this.pendingLevel = this.level;\n};\n\n// Store value to cache.\n// !!! Implementation has parser-specific optimizations\n// !!! keys MUST be integer, >= 0; values MUST be integer, > 0\n//\nStateInline.prototype.cacheSet = function (key, val) {\n  for (var i = this.cache.length; i <= key; i++) {\n    this.cache.push(0);\n  }\n\n  this.cache[key] = val;\n};\n\n// Get cache value\n//\nStateInline.prototype.cacheGet = function (key) {\n  return key < this.cache.length ? this.cache[key] : 0;\n};\n\nmodule.exports = StateInline;\n","// List of valid entities\n//\n// Generate with ./support/entities.js script\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = {\n  \"Aacute\":\"\\u00C1\",\n  \"aacute\":\"\\u00E1\",\n  \"Abreve\":\"\\u0102\",\n  \"abreve\":\"\\u0103\",\n  \"ac\":\"\\u223E\",\n  \"acd\":\"\\u223F\",\n  \"acE\":\"\\u223E\\u0333\",\n  \"Acirc\":\"\\u00C2\",\n  \"acirc\":\"\\u00E2\",\n  \"acute\":\"\\u00B4\",\n  \"Acy\":\"\\u0410\",\n  \"acy\":\"\\u0430\",\n  \"AElig\":\"\\u00C6\",\n  \"aelig\":\"\\u00E6\",\n  \"af\":\"\\u2061\",\n  \"Afr\":\"\\uD835\\uDD04\",\n  \"afr\":\"\\uD835\\uDD1E\",\n  \"Agrave\":\"\\u00C0\",\n  \"agrave\":\"\\u00E0\",\n  \"alefsym\":\"\\u2135\",\n  \"aleph\":\"\\u2135\",\n  \"Alpha\":\"\\u0391\",\n  \"alpha\":\"\\u03B1\",\n  \"Amacr\":\"\\u0100\",\n  \"amacr\":\"\\u0101\",\n  \"amalg\":\"\\u2A3F\",\n  \"AMP\":\"\\u0026\",\n  \"amp\":\"\\u0026\",\n  \"And\":\"\\u2A53\",\n  \"and\":\"\\u2227\",\n  \"andand\":\"\\u2A55\",\n  \"andd\":\"\\u2A5C\",\n  \"andslope\":\"\\u2A58\",\n  \"andv\":\"\\u2A5A\",\n  \"ang\":\"\\u2220\",\n  \"ange\":\"\\u29A4\",\n  \"angle\":\"\\u2220\",\n  \"angmsd\":\"\\u2221\",\n  \"angmsdaa\":\"\\u29A8\",\n  \"angmsdab\":\"\\u29A9\",\n  \"angmsdac\":\"\\u29AA\",\n  \"angmsdad\":\"\\u29AB\",\n  \"angmsdae\":\"\\u29AC\",\n  \"angmsdaf\":\"\\u29AD\",\n  \"angmsdag\":\"\\u29AE\",\n  \"angmsdah\":\"\\u29AF\",\n  \"angrt\":\"\\u221F\",\n  \"angrtvb\":\"\\u22BE\",\n  \"angrtvbd\":\"\\u299D\",\n  \"angsph\":\"\\u2222\",\n  \"angst\":\"\\u00C5\",\n  \"angzarr\":\"\\u237C\",\n  \"Aogon\":\"\\u0104\",\n  \"aogon\":\"\\u0105\",\n  \"Aopf\":\"\\uD835\\uDD38\",\n  \"aopf\":\"\\uD835\\uDD52\",\n  \"ap\":\"\\u2248\",\n  \"apacir\":\"\\u2A6F\",\n  \"apE\":\"\\u2A70\",\n  \"ape\":\"\\u224A\",\n  \"apid\":\"\\u224B\",\n  \"apos\":\"\\u0027\",\n  \"ApplyFunction\":\"\\u2061\",\n  \"approx\":\"\\u2248\",\n  \"approxeq\":\"\\u224A\",\n  \"Aring\":\"\\u00C5\",\n  \"aring\":\"\\u00E5\",\n  \"Ascr\":\"\\uD835\\uDC9C\",\n  \"ascr\":\"\\uD835\\uDCB6\",\n  \"Assign\":\"\\u2254\",\n  \"ast\":\"\\u002A\",\n  \"asymp\":\"\\u2248\",\n  \"asympeq\":\"\\u224D\",\n  \"Atilde\":\"\\u00C3\",\n  \"atilde\":\"\\u00E3\",\n  \"Auml\":\"\\u00C4\",\n  \"auml\":\"\\u00E4\",\n  \"awconint\":\"\\u2233\",\n  \"awint\":\"\\u2A11\",\n  \"backcong\":\"\\u224C\",\n  \"backepsilon\":\"\\u03F6\",\n  \"backprime\":\"\\u2035\",\n  \"backsim\":\"\\u223D\",\n  \"backsimeq\":\"\\u22CD\",\n  \"Backslash\":\"\\u2216\",\n  \"Barv\":\"\\u2AE7\",\n  \"barvee\":\"\\u22BD\",\n  \"Barwed\":\"\\u2306\",\n  \"barwed\":\"\\u2305\",\n  \"barwedge\":\"\\u2305\",\n  \"bbrk\":\"\\u23B5\",\n  \"bbrktbrk\":\"\\u23B6\",\n  \"bcong\":\"\\u224C\",\n  \"Bcy\":\"\\u0411\",\n  \"bcy\":\"\\u0431\",\n  \"bdquo\":\"\\u201E\",\n  \"becaus\":\"\\u2235\",\n  \"Because\":\"\\u2235\",\n  \"because\":\"\\u2235\",\n  \"bemptyv\":\"\\u29B0\",\n  \"bepsi\":\"\\u03F6\",\n  \"bernou\":\"\\u212C\",\n  \"Bernoullis\":\"\\u212C\",\n  \"Beta\":\"\\u0392\",\n  \"beta\":\"\\u03B2\",\n  \"beth\":\"\\u2136\",\n  \"between\":\"\\u226C\",\n  \"Bfr\":\"\\uD835\\uDD05\",\n  \"bfr\":\"\\uD835\\uDD1F\",\n  \"bigcap\":\"\\u22C2\",\n  \"bigcirc\":\"\\u25EF\",\n  \"bigcup\":\"\\u22C3\",\n  \"bigodot\":\"\\u2A00\",\n  \"bigoplus\":\"\\u2A01\",\n  \"bigotimes\":\"\\u2A02\",\n  \"bigsqcup\":\"\\u2A06\",\n  \"bigstar\":\"\\u2605\",\n  \"bigtriangledown\":\"\\u25BD\",\n  \"bigtriangleup\":\"\\u25B3\",\n  \"biguplus\":\"\\u2A04\",\n  \"bigvee\":\"\\u22C1\",\n  \"bigwedge\":\"\\u22C0\",\n  \"bkarow\":\"\\u290D\",\n  \"blacklozenge\":\"\\u29EB\",\n  \"blacksquare\":\"\\u25AA\",\n  \"blacktriangle\":\"\\u25B4\",\n  \"blacktriangledown\":\"\\u25BE\",\n  \"blacktriangleleft\":\"\\u25C2\",\n  \"blacktriangleright\":\"\\u25B8\",\n  \"blank\":\"\\u2423\",\n  \"blk12\":\"\\u2592\",\n  \"blk14\":\"\\u2591\",\n  \"blk34\":\"\\u2593\",\n  \"block\":\"\\u2588\",\n  \"bne\":\"\\u003D\\u20E5\",\n  \"bnequiv\":\"\\u2261\\u20E5\",\n  \"bNot\":\"\\u2AED\",\n  \"bnot\":\"\\u2310\",\n  \"Bopf\":\"\\uD835\\uDD39\",\n  \"bopf\":\"\\uD835\\uDD53\",\n  \"bot\":\"\\u22A5\",\n  \"bottom\":\"\\u22A5\",\n  \"bowtie\":\"\\u22C8\",\n  \"boxbox\":\"\\u29C9\",\n  \"boxDL\":\"\\u2557\",\n  \"boxDl\":\"\\u2556\",\n  \"boxdL\":\"\\u2555\",\n  \"boxdl\":\"\\u2510\",\n  \"boxDR\":\"\\u2554\",\n  \"boxDr\":\"\\u2553\",\n  \"boxdR\":\"\\u2552\",\n  \"boxdr\":\"\\u250C\",\n  \"boxH\":\"\\u2550\",\n  \"boxh\":\"\\u2500\",\n  \"boxHD\":\"\\u2566\",\n  \"boxHd\":\"\\u2564\",\n  \"boxhD\":\"\\u2565\",\n  \"boxhd\":\"\\u252C\",\n  \"boxHU\":\"\\u2569\",\n  \"boxHu\":\"\\u2567\",\n  \"boxhU\":\"\\u2568\",\n  \"boxhu\":\"\\u2534\",\n  \"boxminus\":\"\\u229F\",\n  \"boxplus\":\"\\u229E\",\n  \"boxtimes\":\"\\u22A0\",\n  \"boxUL\":\"\\u255D\",\n  \"boxUl\":\"\\u255C\",\n  \"boxuL\":\"\\u255B\",\n  \"boxul\":\"\\u2518\",\n  \"boxUR\":\"\\u255A\",\n  \"boxUr\":\"\\u2559\",\n  \"boxuR\":\"\\u2558\",\n  \"boxur\":\"\\u2514\",\n  \"boxV\":\"\\u2551\",\n  \"boxv\":\"\\u2502\",\n  \"boxVH\":\"\\u256C\",\n  \"boxVh\":\"\\u256B\",\n  \"boxvH\":\"\\u256A\",\n  \"boxvh\":\"\\u253C\",\n  \"boxVL\":\"\\u2563\",\n  \"boxVl\":\"\\u2562\",\n  \"boxvL\":\"\\u2561\",\n  \"boxvl\":\"\\u2524\",\n  \"boxVR\":\"\\u2560\",\n  \"boxVr\":\"\\u255F\",\n  \"boxvR\":\"\\u255E\",\n  \"boxvr\":\"\\u251C\",\n  \"bprime\":\"\\u2035\",\n  \"Breve\":\"\\u02D8\",\n  \"breve\":\"\\u02D8\",\n  \"brvbar\":\"\\u00A6\",\n  \"Bscr\":\"\\u212C\",\n  \"bscr\":\"\\uD835\\uDCB7\",\n  \"bsemi\":\"\\u204F\",\n  \"bsim\":\"\\u223D\",\n  \"bsime\":\"\\u22CD\",\n  \"bsol\":\"\\u005C\",\n  \"bsolb\":\"\\u29C5\",\n  \"bsolhsub\":\"\\u27C8\",\n  \"bull\":\"\\u2022\",\n  \"bullet\":\"\\u2022\",\n  \"bump\":\"\\u224E\",\n  \"bumpE\":\"\\u2AAE\",\n  \"bumpe\":\"\\u224F\",\n  \"Bumpeq\":\"\\u224E\",\n  \"bumpeq\":\"\\u224F\",\n  \"Cacute\":\"\\u0106\",\n  \"cacute\":\"\\u0107\",\n  \"Cap\":\"\\u22D2\",\n  \"cap\":\"\\u2229\",\n  \"capand\":\"\\u2A44\",\n  \"capbrcup\":\"\\u2A49\",\n  \"capcap\":\"\\u2A4B\",\n  \"capcup\":\"\\u2A47\",\n  \"capdot\":\"\\u2A40\",\n  \"CapitalDifferentialD\":\"\\u2145\",\n  \"caps\":\"\\u2229\\uFE00\",\n  \"caret\":\"\\u2041\",\n  \"caron\":\"\\u02C7\",\n  \"Cayleys\":\"\\u212D\",\n  \"ccaps\":\"\\u2A4D\",\n  \"Ccaron\":\"\\u010C\",\n  \"ccaron\":\"\\u010D\",\n  \"Ccedil\":\"\\u00C7\",\n  \"ccedil\":\"\\u00E7\",\n  \"Ccirc\":\"\\u0108\",\n  \"ccirc\":\"\\u0109\",\n  \"Cconint\":\"\\u2230\",\n  \"ccups\":\"\\u2A4C\",\n  \"ccupssm\":\"\\u2A50\",\n  \"Cdot\":\"\\u010A\",\n  \"cdot\":\"\\u010B\",\n  \"cedil\":\"\\u00B8\",\n  \"Cedilla\":\"\\u00B8\",\n  \"cemptyv\":\"\\u29B2\",\n  \"cent\":\"\\u00A2\",\n  \"CenterDot\":\"\\u00B7\",\n  \"centerdot\":\"\\u00B7\",\n  \"Cfr\":\"\\u212D\",\n  \"cfr\":\"\\uD835\\uDD20\",\n  \"CHcy\":\"\\u0427\",\n  \"chcy\":\"\\u0447\",\n  \"check\":\"\\u2713\",\n  \"checkmark\":\"\\u2713\",\n  \"Chi\":\"\\u03A7\",\n  \"chi\":\"\\u03C7\",\n  \"cir\":\"\\u25CB\",\n  \"circ\":\"\\u02C6\",\n  \"circeq\":\"\\u2257\",\n  \"circlearrowleft\":\"\\u21BA\",\n  \"circlearrowright\":\"\\u21BB\",\n  \"circledast\":\"\\u229B\",\n  \"circledcirc\":\"\\u229A\",\n  \"circleddash\":\"\\u229D\",\n  \"CircleDot\":\"\\u2299\",\n  \"circledR\":\"\\u00AE\",\n  \"circledS\":\"\\u24C8\",\n  \"CircleMinus\":\"\\u2296\",\n  \"CirclePlus\":\"\\u2295\",\n  \"CircleTimes\":\"\\u2297\",\n  \"cirE\":\"\\u29C3\",\n  \"cire\":\"\\u2257\",\n  \"cirfnint\":\"\\u2A10\",\n  \"cirmid\":\"\\u2AEF\",\n  \"cirscir\":\"\\u29C2\",\n  \"ClockwiseContourIntegral\":\"\\u2232\",\n  \"CloseCurlyDoubleQuote\":\"\\u201D\",\n  \"CloseCurlyQuote\":\"\\u2019\",\n  \"clubs\":\"\\u2663\",\n  \"clubsuit\":\"\\u2663\",\n  \"Colon\":\"\\u2237\",\n  \"colon\":\"\\u003A\",\n  \"Colone\":\"\\u2A74\",\n  \"colone\":\"\\u2254\",\n  \"coloneq\":\"\\u2254\",\n  \"comma\":\"\\u002C\",\n  \"commat\":\"\\u0040\",\n  \"comp\":\"\\u2201\",\n  \"compfn\":\"\\u2218\",\n  \"complement\":\"\\u2201\",\n  \"complexes\":\"\\u2102\",\n  \"cong\":\"\\u2245\",\n  \"congdot\":\"\\u2A6D\",\n  \"Congruent\":\"\\u2261\",\n  \"Conint\":\"\\u222F\",\n  \"conint\":\"\\u222E\",\n  \"ContourIntegral\":\"\\u222E\",\n  \"Copf\":\"\\u2102\",\n  \"copf\":\"\\uD835\\uDD54\",\n  \"coprod\":\"\\u2210\",\n  \"Coproduct\":\"\\u2210\",\n  \"COPY\":\"\\u00A9\",\n  \"copy\":\"\\u00A9\",\n  \"copysr\":\"\\u2117\",\n  \"CounterClockwiseContourIntegral\":\"\\u2233\",\n  \"crarr\":\"\\u21B5\",\n  \"Cross\":\"\\u2A2F\",\n  \"cross\":\"\\u2717\",\n  \"Cscr\":\"\\uD835\\uDC9E\",\n  \"cscr\":\"\\uD835\\uDCB8\",\n  \"csub\":\"\\u2ACF\",\n  \"csube\":\"\\u2AD1\",\n  \"csup\":\"\\u2AD0\",\n  \"csupe\":\"\\u2AD2\",\n  \"ctdot\":\"\\u22EF\",\n  \"cudarrl\":\"\\u2938\",\n  \"cudarrr\":\"\\u2935\",\n  \"cuepr\":\"\\u22DE\",\n  \"cuesc\":\"\\u22DF\",\n  \"cularr\":\"\\u21B6\",\n  \"cularrp\":\"\\u293D\",\n  \"Cup\":\"\\u22D3\",\n  \"cup\":\"\\u222A\",\n  \"cupbrcap\":\"\\u2A48\",\n  \"CupCap\":\"\\u224D\",\n  \"cupcap\":\"\\u2A46\",\n  \"cupcup\":\"\\u2A4A\",\n  \"cupdot\":\"\\u228D\",\n  \"cupor\":\"\\u2A45\",\n  \"cups\":\"\\u222A\\uFE00\",\n  \"curarr\":\"\\u21B7\",\n  \"curarrm\":\"\\u293C\",\n  \"curlyeqprec\":\"\\u22DE\",\n  \"curlyeqsucc\":\"\\u22DF\",\n  \"curlyvee\":\"\\u22CE\",\n  \"curlywedge\":\"\\u22CF\",\n  \"curren\":\"\\u00A4\",\n  \"curvearrowleft\":\"\\u21B6\",\n  \"curvearrowright\":\"\\u21B7\",\n  \"cuvee\":\"\\u22CE\",\n  \"cuwed\":\"\\u22CF\",\n  \"cwconint\":\"\\u2232\",\n  \"cwint\":\"\\u2231\",\n  \"cylcty\":\"\\u232D\",\n  \"Dagger\":\"\\u2021\",\n  \"dagger\":\"\\u2020\",\n  \"daleth\":\"\\u2138\",\n  \"Darr\":\"\\u21A1\",\n  \"dArr\":\"\\u21D3\",\n  \"darr\":\"\\u2193\",\n  \"dash\":\"\\u2010\",\n  \"Dashv\":\"\\u2AE4\",\n  \"dashv\":\"\\u22A3\",\n  \"dbkarow\":\"\\u290F\",\n  \"dblac\":\"\\u02DD\",\n  \"Dcaron\":\"\\u010E\",\n  \"dcaron\":\"\\u010F\",\n  \"Dcy\":\"\\u0414\",\n  \"dcy\":\"\\u0434\",\n  \"DD\":\"\\u2145\",\n  \"dd\":\"\\u2146\",\n  \"ddagger\":\"\\u2021\",\n  \"ddarr\":\"\\u21CA\",\n  \"DDotrahd\":\"\\u2911\",\n  \"ddotseq\":\"\\u2A77\",\n  \"deg\":\"\\u00B0\",\n  \"Del\":\"\\u2207\",\n  \"Delta\":\"\\u0394\",\n  \"delta\":\"\\u03B4\",\n  \"demptyv\":\"\\u29B1\",\n  \"dfisht\":\"\\u297F\",\n  \"Dfr\":\"\\uD835\\uDD07\",\n  \"dfr\":\"\\uD835\\uDD21\",\n  \"dHar\":\"\\u2965\",\n  \"dharl\":\"\\u21C3\",\n  \"dharr\":\"\\u21C2\",\n  \"DiacriticalAcute\":\"\\u00B4\",\n  \"DiacriticalDot\":\"\\u02D9\",\n  \"DiacriticalDoubleAcute\":\"\\u02DD\",\n  \"DiacriticalGrave\":\"\\u0060\",\n  \"DiacriticalTilde\":\"\\u02DC\",\n  \"diam\":\"\\u22C4\",\n  \"Diamond\":\"\\u22C4\",\n  \"diamond\":\"\\u22C4\",\n  \"diamondsuit\":\"\\u2666\",\n  \"diams\":\"\\u2666\",\n  \"die\":\"\\u00A8\",\n  \"DifferentialD\":\"\\u2146\",\n  \"digamma\":\"\\u03DD\",\n  \"disin\":\"\\u22F2\",\n  \"div\":\"\\u00F7\",\n  \"divide\":\"\\u00F7\",\n  \"divideontimes\":\"\\u22C7\",\n  \"divonx\":\"\\u22C7\",\n  \"DJcy\":\"\\u0402\",\n  \"djcy\":\"\\u0452\",\n  \"dlcorn\":\"\\u231E\",\n  \"dlcrop\":\"\\u230D\",\n  \"dollar\":\"\\u0024\",\n  \"Dopf\":\"\\uD835\\uDD3B\",\n  \"dopf\":\"\\uD835\\uDD55\",\n  \"Dot\":\"\\u00A8\",\n  \"dot\":\"\\u02D9\",\n  \"DotDot\":\"\\u20DC\",\n  \"doteq\":\"\\u2250\",\n  \"doteqdot\":\"\\u2251\",\n  \"DotEqual\":\"\\u2250\",\n  \"dotminus\":\"\\u2238\",\n  \"dotplus\":\"\\u2214\",\n  \"dotsquare\":\"\\u22A1\",\n  \"doublebarwedge\":\"\\u2306\",\n  \"DoubleContourIntegral\":\"\\u222F\",\n  \"DoubleDot\":\"\\u00A8\",\n  \"DoubleDownArrow\":\"\\u21D3\",\n  \"DoubleLeftArrow\":\"\\u21D0\",\n  \"DoubleLeftRightArrow\":\"\\u21D4\",\n  \"DoubleLeftTee\":\"\\u2AE4\",\n  \"DoubleLongLeftArrow\":\"\\u27F8\",\n  \"DoubleLongLeftRightArrow\":\"\\u27FA\",\n  \"DoubleLongRightArrow\":\"\\u27F9\",\n  \"DoubleRightArrow\":\"\\u21D2\",\n  \"DoubleRightTee\":\"\\u22A8\",\n  \"DoubleUpArrow\":\"\\u21D1\",\n  \"DoubleUpDownArrow\":\"\\u21D5\",\n  \"DoubleVerticalBar\":\"\\u2225\",\n  \"DownArrow\":\"\\u2193\",\n  \"Downarrow\":\"\\u21D3\",\n  \"downarrow\":\"\\u2193\",\n  \"DownArrowBar\":\"\\u2913\",\n  \"DownArrowUpArrow\":\"\\u21F5\",\n  \"DownBreve\":\"\\u0311\",\n  \"downdownarrows\":\"\\u21CA\",\n  \"downharpoonleft\":\"\\u21C3\",\n  \"downharpoonright\":\"\\u21C2\",\n  \"DownLeftRightVector\":\"\\u2950\",\n  \"DownLeftTeeVector\":\"\\u295E\",\n  \"DownLeftVector\":\"\\u21BD\",\n  \"DownLeftVectorBar\":\"\\u2956\",\n  \"DownRightTeeVector\":\"\\u295F\",\n  \"DownRightVector\":\"\\u21C1\",\n  \"DownRightVectorBar\":\"\\u2957\",\n  \"DownTee\":\"\\u22A4\",\n  \"DownTeeArrow\":\"\\u21A7\",\n  \"drbkarow\":\"\\u2910\",\n  \"drcorn\":\"\\u231F\",\n  \"drcrop\":\"\\u230C\",\n  \"Dscr\":\"\\uD835\\uDC9F\",\n  \"dscr\":\"\\uD835\\uDCB9\",\n  \"DScy\":\"\\u0405\",\n  \"dscy\":\"\\u0455\",\n  \"dsol\":\"\\u29F6\",\n  \"Dstrok\":\"\\u0110\",\n  \"dstrok\":\"\\u0111\",\n  \"dtdot\":\"\\u22F1\",\n  \"dtri\":\"\\u25BF\",\n  \"dtrif\":\"\\u25BE\",\n  \"duarr\":\"\\u21F5\",\n  \"duhar\":\"\\u296F\",\n  \"dwangle\":\"\\u29A6\",\n  \"DZcy\":\"\\u040F\",\n  \"dzcy\":\"\\u045F\",\n  \"dzigrarr\":\"\\u27FF\",\n  \"Eacute\":\"\\u00C9\",\n  \"eacute\":\"\\u00E9\",\n  \"easter\":\"\\u2A6E\",\n  \"Ecaron\":\"\\u011A\",\n  \"ecaron\":\"\\u011B\",\n  \"ecir\":\"\\u2256\",\n  \"Ecirc\":\"\\u00CA\",\n  \"ecirc\":\"\\u00EA\",\n  \"ecolon\":\"\\u2255\",\n  \"Ecy\":\"\\u042D\",\n  \"ecy\":\"\\u044D\",\n  \"eDDot\":\"\\u2A77\",\n  \"Edot\":\"\\u0116\",\n  \"eDot\":\"\\u2251\",\n  \"edot\":\"\\u0117\",\n  \"ee\":\"\\u2147\",\n  \"efDot\":\"\\u2252\",\n  \"Efr\":\"\\uD835\\uDD08\",\n  \"efr\":\"\\uD835\\uDD22\",\n  \"eg\":\"\\u2A9A\",\n  \"Egrave\":\"\\u00C8\",\n  \"egrave\":\"\\u00E8\",\n  \"egs\":\"\\u2A96\",\n  \"egsdot\":\"\\u2A98\",\n  \"el\":\"\\u2A99\",\n  \"Element\":\"\\u2208\",\n  \"elinters\":\"\\u23E7\",\n  \"ell\":\"\\u2113\",\n  \"els\":\"\\u2A95\",\n  \"elsdot\":\"\\u2A97\",\n  \"Emacr\":\"\\u0112\",\n  \"emacr\":\"\\u0113\",\n  \"empty\":\"\\u2205\",\n  \"emptyset\":\"\\u2205\",\n  \"EmptySmallSquare\":\"\\u25FB\",\n  \"emptyv\":\"\\u2205\",\n  \"EmptyVerySmallSquare\":\"\\u25AB\",\n  \"emsp\":\"\\u2003\",\n  \"emsp13\":\"\\u2004\",\n  \"emsp14\":\"\\u2005\",\n  \"ENG\":\"\\u014A\",\n  \"eng\":\"\\u014B\",\n  \"ensp\":\"\\u2002\",\n  \"Eogon\":\"\\u0118\",\n  \"eogon\":\"\\u0119\",\n  \"Eopf\":\"\\uD835\\uDD3C\",\n  \"eopf\":\"\\uD835\\uDD56\",\n  \"epar\":\"\\u22D5\",\n  \"eparsl\":\"\\u29E3\",\n  \"eplus\":\"\\u2A71\",\n  \"epsi\":\"\\u03B5\",\n  \"Epsilon\":\"\\u0395\",\n  \"epsilon\":\"\\u03B5\",\n  \"epsiv\":\"\\u03F5\",\n  \"eqcirc\":\"\\u2256\",\n  \"eqcolon\":\"\\u2255\",\n  \"eqsim\":\"\\u2242\",\n  \"eqslantgtr\":\"\\u2A96\",\n  \"eqslantless\":\"\\u2A95\",\n  \"Equal\":\"\\u2A75\",\n  \"equals\":\"\\u003D\",\n  \"EqualTilde\":\"\\u2242\",\n  \"equest\":\"\\u225F\",\n  \"Equilibrium\":\"\\u21CC\",\n  \"equiv\":\"\\u2261\",\n  \"equivDD\":\"\\u2A78\",\n  \"eqvparsl\":\"\\u29E5\",\n  \"erarr\":\"\\u2971\",\n  \"erDot\":\"\\u2253\",\n  \"Escr\":\"\\u2130\",\n  \"escr\":\"\\u212F\",\n  \"esdot\":\"\\u2250\",\n  \"Esim\":\"\\u2A73\",\n  \"esim\":\"\\u2242\",\n  \"Eta\":\"\\u0397\",\n  \"eta\":\"\\u03B7\",\n  \"ETH\":\"\\u00D0\",\n  \"eth\":\"\\u00F0\",\n  \"Euml\":\"\\u00CB\",\n  \"euml\":\"\\u00EB\",\n  \"euro\":\"\\u20AC\",\n  \"excl\":\"\\u0021\",\n  \"exist\":\"\\u2203\",\n  \"Exists\":\"\\u2203\",\n  \"expectation\":\"\\u2130\",\n  \"ExponentialE\":\"\\u2147\",\n  \"exponentiale\":\"\\u2147\",\n  \"fallingdotseq\":\"\\u2252\",\n  \"Fcy\":\"\\u0424\",\n  \"fcy\":\"\\u0444\",\n  \"female\":\"\\u2640\",\n  \"ffilig\":\"\\uFB03\",\n  \"fflig\":\"\\uFB00\",\n  \"ffllig\":\"\\uFB04\",\n  \"Ffr\":\"\\uD835\\uDD09\",\n  \"ffr\":\"\\uD835\\uDD23\",\n  \"filig\":\"\\uFB01\",\n  \"FilledSmallSquare\":\"\\u25FC\",\n  \"FilledVerySmallSquare\":\"\\u25AA\",\n  \"fjlig\":\"\\u0066\\u006A\",\n  \"flat\":\"\\u266D\",\n  \"fllig\":\"\\uFB02\",\n  \"fltns\":\"\\u25B1\",\n  \"fnof\":\"\\u0192\",\n  \"Fopf\":\"\\uD835\\uDD3D\",\n  \"fopf\":\"\\uD835\\uDD57\",\n  \"ForAll\":\"\\u2200\",\n  \"forall\":\"\\u2200\",\n  \"fork\":\"\\u22D4\",\n  \"forkv\":\"\\u2AD9\",\n  \"Fouriertrf\":\"\\u2131\",\n  \"fpartint\":\"\\u2A0D\",\n  \"frac12\":\"\\u00BD\",\n  \"frac13\":\"\\u2153\",\n  \"frac14\":\"\\u00BC\",\n  \"frac15\":\"\\u2155\",\n  \"frac16\":\"\\u2159\",\n  \"frac18\":\"\\u215B\",\n  \"frac23\":\"\\u2154\",\n  \"frac25\":\"\\u2156\",\n  \"frac34\":\"\\u00BE\",\n  \"frac35\":\"\\u2157\",\n  \"frac38\":\"\\u215C\",\n  \"frac45\":\"\\u2158\",\n  \"frac56\":\"\\u215A\",\n  \"frac58\":\"\\u215D\",\n  \"frac78\":\"\\u215E\",\n  \"frasl\":\"\\u2044\",\n  \"frown\":\"\\u2322\",\n  \"Fscr\":\"\\u2131\",\n  \"fscr\":\"\\uD835\\uDCBB\",\n  \"gacute\":\"\\u01F5\",\n  \"Gamma\":\"\\u0393\",\n  \"gamma\":\"\\u03B3\",\n  \"Gammad\":\"\\u03DC\",\n  \"gammad\":\"\\u03DD\",\n  \"gap\":\"\\u2A86\",\n  \"Gbreve\":\"\\u011E\",\n  \"gbreve\":\"\\u011F\",\n  \"Gcedil\":\"\\u0122\",\n  \"Gcirc\":\"\\u011C\",\n  \"gcirc\":\"\\u011D\",\n  \"Gcy\":\"\\u0413\",\n  \"gcy\":\"\\u0433\",\n  \"Gdot\":\"\\u0120\",\n  \"gdot\":\"\\u0121\",\n  \"gE\":\"\\u2267\",\n  \"ge\":\"\\u2265\",\n  \"gEl\":\"\\u2A8C\",\n  \"gel\":\"\\u22DB\",\n  \"geq\":\"\\u2265\",\n  \"geqq\":\"\\u2267\",\n  \"geqslant\":\"\\u2A7E\",\n  \"ges\":\"\\u2A7E\",\n  \"gescc\":\"\\u2AA9\",\n  \"gesdot\":\"\\u2A80\",\n  \"gesdoto\":\"\\u2A82\",\n  \"gesdotol\":\"\\u2A84\",\n  \"gesl\":\"\\u22DB\\uFE00\",\n  \"gesles\":\"\\u2A94\",\n  \"Gfr\":\"\\uD835\\uDD0A\",\n  \"gfr\":\"\\uD835\\uDD24\",\n  \"Gg\":\"\\u22D9\",\n  \"gg\":\"\\u226B\",\n  \"ggg\":\"\\u22D9\",\n  \"gimel\":\"\\u2137\",\n  \"GJcy\":\"\\u0403\",\n  \"gjcy\":\"\\u0453\",\n  \"gl\":\"\\u2277\",\n  \"gla\":\"\\u2AA5\",\n  \"glE\":\"\\u2A92\",\n  \"glj\":\"\\u2AA4\",\n  \"gnap\":\"\\u2A8A\",\n  \"gnapprox\":\"\\u2A8A\",\n  \"gnE\":\"\\u2269\",\n  \"gne\":\"\\u2A88\",\n  \"gneq\":\"\\u2A88\",\n  \"gneqq\":\"\\u2269\",\n  \"gnsim\":\"\\u22E7\",\n  \"Gopf\":\"\\uD835\\uDD3E\",\n  \"gopf\":\"\\uD835\\uDD58\",\n  \"grave\":\"\\u0060\",\n  \"GreaterEqual\":\"\\u2265\",\n  \"GreaterEqualLess\":\"\\u22DB\",\n  \"GreaterFullEqual\":\"\\u2267\",\n  \"GreaterGreater\":\"\\u2AA2\",\n  \"GreaterLess\":\"\\u2277\",\n  \"GreaterSlantEqual\":\"\\u2A7E\",\n  \"GreaterTilde\":\"\\u2273\",\n  \"Gscr\":\"\\uD835\\uDCA2\",\n  \"gscr\":\"\\u210A\",\n  \"gsim\":\"\\u2273\",\n  \"gsime\":\"\\u2A8E\",\n  \"gsiml\":\"\\u2A90\",\n  \"GT\":\"\\u003E\",\n  \"Gt\":\"\\u226B\",\n  \"gt\":\"\\u003E\",\n  \"gtcc\":\"\\u2AA7\",\n  \"gtcir\":\"\\u2A7A\",\n  \"gtdot\":\"\\u22D7\",\n  \"gtlPar\":\"\\u2995\",\n  \"gtquest\":\"\\u2A7C\",\n  \"gtrapprox\":\"\\u2A86\",\n  \"gtrarr\":\"\\u2978\",\n  \"gtrdot\":\"\\u22D7\",\n  \"gtreqless\":\"\\u22DB\",\n  \"gtreqqless\":\"\\u2A8C\",\n  \"gtrless\":\"\\u2277\",\n  \"gtrsim\":\"\\u2273\",\n  \"gvertneqq\":\"\\u2269\\uFE00\",\n  \"gvnE\":\"\\u2269\\uFE00\",\n  \"Hacek\":\"\\u02C7\",\n  \"hairsp\":\"\\u200A\",\n  \"half\":\"\\u00BD\",\n  \"hamilt\":\"\\u210B\",\n  \"HARDcy\":\"\\u042A\",\n  \"hardcy\":\"\\u044A\",\n  \"hArr\":\"\\u21D4\",\n  \"harr\":\"\\u2194\",\n  \"harrcir\":\"\\u2948\",\n  \"harrw\":\"\\u21AD\",\n  \"Hat\":\"\\u005E\",\n  \"hbar\":\"\\u210F\",\n  \"Hcirc\":\"\\u0124\",\n  \"hcirc\":\"\\u0125\",\n  \"hearts\":\"\\u2665\",\n  \"heartsuit\":\"\\u2665\",\n  \"hellip\":\"\\u2026\",\n  \"hercon\":\"\\u22B9\",\n  \"Hfr\":\"\\u210C\",\n  \"hfr\":\"\\uD835\\uDD25\",\n  \"HilbertSpace\":\"\\u210B\",\n  \"hksearow\":\"\\u2925\",\n  \"hkswarow\":\"\\u2926\",\n  \"hoarr\":\"\\u21FF\",\n  \"homtht\":\"\\u223B\",\n  \"hookleftarrow\":\"\\u21A9\",\n  \"hookrightarrow\":\"\\u21AA\",\n  \"Hopf\":\"\\u210D\",\n  \"hopf\":\"\\uD835\\uDD59\",\n  \"horbar\":\"\\u2015\",\n  \"HorizontalLine\":\"\\u2500\",\n  \"Hscr\":\"\\u210B\",\n  \"hscr\":\"\\uD835\\uDCBD\",\n  \"hslash\":\"\\u210F\",\n  \"Hstrok\":\"\\u0126\",\n  \"hstrok\":\"\\u0127\",\n  \"HumpDownHump\":\"\\u224E\",\n  \"HumpEqual\":\"\\u224F\",\n  \"hybull\":\"\\u2043\",\n  \"hyphen\":\"\\u2010\",\n  \"Iacute\":\"\\u00CD\",\n  \"iacute\":\"\\u00ED\",\n  \"ic\":\"\\u2063\",\n  \"Icirc\":\"\\u00CE\",\n  \"icirc\":\"\\u00EE\",\n  \"Icy\":\"\\u0418\",\n  \"icy\":\"\\u0438\",\n  \"Idot\":\"\\u0130\",\n  \"IEcy\":\"\\u0415\",\n  \"iecy\":\"\\u0435\",\n  \"iexcl\":\"\\u00A1\",\n  \"iff\":\"\\u21D4\",\n  \"Ifr\":\"\\u2111\",\n  \"ifr\":\"\\uD835\\uDD26\",\n  \"Igrave\":\"\\u00CC\",\n  \"igrave\":\"\\u00EC\",\n  \"ii\":\"\\u2148\",\n  \"iiiint\":\"\\u2A0C\",\n  \"iiint\":\"\\u222D\",\n  \"iinfin\":\"\\u29DC\",\n  \"iiota\":\"\\u2129\",\n  \"IJlig\":\"\\u0132\",\n  \"ijlig\":\"\\u0133\",\n  \"Im\":\"\\u2111\",\n  \"Imacr\":\"\\u012A\",\n  \"imacr\":\"\\u012B\",\n  \"image\":\"\\u2111\",\n  \"ImaginaryI\":\"\\u2148\",\n  \"imagline\":\"\\u2110\",\n  \"imagpart\":\"\\u2111\",\n  \"imath\":\"\\u0131\",\n  \"imof\":\"\\u22B7\",\n  \"imped\":\"\\u01B5\",\n  \"Implies\":\"\\u21D2\",\n  \"in\":\"\\u2208\",\n  \"incare\":\"\\u2105\",\n  \"infin\":\"\\u221E\",\n  \"infintie\":\"\\u29DD\",\n  \"inodot\":\"\\u0131\",\n  \"Int\":\"\\u222C\",\n  \"int\":\"\\u222B\",\n  \"intcal\":\"\\u22BA\",\n  \"integers\":\"\\u2124\",\n  \"Integral\":\"\\u222B\",\n  \"intercal\":\"\\u22BA\",\n  \"Intersection\":\"\\u22C2\",\n  \"intlarhk\":\"\\u2A17\",\n  \"intprod\":\"\\u2A3C\",\n  \"InvisibleComma\":\"\\u2063\",\n  \"InvisibleTimes\":\"\\u2062\",\n  \"IOcy\":\"\\u0401\",\n  \"iocy\":\"\\u0451\",\n  \"Iogon\":\"\\u012E\",\n  \"iogon\":\"\\u012F\",\n  \"Iopf\":\"\\uD835\\uDD40\",\n  \"iopf\":\"\\uD835\\uDD5A\",\n  \"Iota\":\"\\u0399\",\n  \"iota\":\"\\u03B9\",\n  \"iprod\":\"\\u2A3C\",\n  \"iquest\":\"\\u00BF\",\n  \"Iscr\":\"\\u2110\",\n  \"iscr\":\"\\uD835\\uDCBE\",\n  \"isin\":\"\\u2208\",\n  \"isindot\":\"\\u22F5\",\n  \"isinE\":\"\\u22F9\",\n  \"isins\":\"\\u22F4\",\n  \"isinsv\":\"\\u22F3\",\n  \"isinv\":\"\\u2208\",\n  \"it\":\"\\u2062\",\n  \"Itilde\":\"\\u0128\",\n  \"itilde\":\"\\u0129\",\n  \"Iukcy\":\"\\u0406\",\n  \"iukcy\":\"\\u0456\",\n  \"Iuml\":\"\\u00CF\",\n  \"iuml\":\"\\u00EF\",\n  \"Jcirc\":\"\\u0134\",\n  \"jcirc\":\"\\u0135\",\n  \"Jcy\":\"\\u0419\",\n  \"jcy\":\"\\u0439\",\n  \"Jfr\":\"\\uD835\\uDD0D\",\n  \"jfr\":\"\\uD835\\uDD27\",\n  \"jmath\":\"\\u0237\",\n  \"Jopf\":\"\\uD835\\uDD41\",\n  \"jopf\":\"\\uD835\\uDD5B\",\n  \"Jscr\":\"\\uD835\\uDCA5\",\n  \"jscr\":\"\\uD835\\uDCBF\",\n  \"Jsercy\":\"\\u0408\",\n  \"jsercy\":\"\\u0458\",\n  \"Jukcy\":\"\\u0404\",\n  \"jukcy\":\"\\u0454\",\n  \"Kappa\":\"\\u039A\",\n  \"kappa\":\"\\u03BA\",\n  \"kappav\":\"\\u03F0\",\n  \"Kcedil\":\"\\u0136\",\n  \"kcedil\":\"\\u0137\",\n  \"Kcy\":\"\\u041A\",\n  \"kcy\":\"\\u043A\",\n  \"Kfr\":\"\\uD835\\uDD0E\",\n  \"kfr\":\"\\uD835\\uDD28\",\n  \"kgreen\":\"\\u0138\",\n  \"KHcy\":\"\\u0425\",\n  \"khcy\":\"\\u0445\",\n  \"KJcy\":\"\\u040C\",\n  \"kjcy\":\"\\u045C\",\n  \"Kopf\":\"\\uD835\\uDD42\",\n  \"kopf\":\"\\uD835\\uDD5C\",\n  \"Kscr\":\"\\uD835\\uDCA6\",\n  \"kscr\":\"\\uD835\\uDCC0\",\n  \"lAarr\":\"\\u21DA\",\n  \"Lacute\":\"\\u0139\",\n  \"lacute\":\"\\u013A\",\n  \"laemptyv\":\"\\u29B4\",\n  \"lagran\":\"\\u2112\",\n  \"Lambda\":\"\\u039B\",\n  \"lambda\":\"\\u03BB\",\n  \"Lang\":\"\\u27EA\",\n  \"lang\":\"\\u27E8\",\n  \"langd\":\"\\u2991\",\n  \"langle\":\"\\u27E8\",\n  \"lap\":\"\\u2A85\",\n  \"Laplacetrf\":\"\\u2112\",\n  \"laquo\":\"\\u00AB\",\n  \"Larr\":\"\\u219E\",\n  \"lArr\":\"\\u21D0\",\n  \"larr\":\"\\u2190\",\n  \"larrb\":\"\\u21E4\",\n  \"larrbfs\":\"\\u291F\",\n  \"larrfs\":\"\\u291D\",\n  \"larrhk\":\"\\u21A9\",\n  \"larrlp\":\"\\u21AB\",\n  \"larrpl\":\"\\u2939\",\n  \"larrsim\":\"\\u2973\",\n  \"larrtl\":\"\\u21A2\",\n  \"lat\":\"\\u2AAB\",\n  \"lAtail\":\"\\u291B\",\n  \"latail\":\"\\u2919\",\n  \"late\":\"\\u2AAD\",\n  \"lates\":\"\\u2AAD\\uFE00\",\n  \"lBarr\":\"\\u290E\",\n  \"lbarr\":\"\\u290C\",\n  \"lbbrk\":\"\\u2772\",\n  \"lbrace\":\"\\u007B\",\n  \"lbrack\":\"\\u005B\",\n  \"lbrke\":\"\\u298B\",\n  \"lbrksld\":\"\\u298F\",\n  \"lbrkslu\":\"\\u298D\",\n  \"Lcaron\":\"\\u013D\",\n  \"lcaron\":\"\\u013E\",\n  \"Lcedil\":\"\\u013B\",\n  \"lcedil\":\"\\u013C\",\n  \"lceil\":\"\\u2308\",\n  \"lcub\":\"\\u007B\",\n  \"Lcy\":\"\\u041B\",\n  \"lcy\":\"\\u043B\",\n  \"ldca\":\"\\u2936\",\n  \"ldquo\":\"\\u201C\",\n  \"ldquor\":\"\\u201E\",\n  \"ldrdhar\":\"\\u2967\",\n  \"ldrushar\":\"\\u294B\",\n  \"ldsh\":\"\\u21B2\",\n  \"lE\":\"\\u2266\",\n  \"le\":\"\\u2264\",\n  \"LeftAngleBracket\":\"\\u27E8\",\n  \"LeftArrow\":\"\\u2190\",\n  \"Leftarrow\":\"\\u21D0\",\n  \"leftarrow\":\"\\u2190\",\n  \"LeftArrowBar\":\"\\u21E4\",\n  \"LeftArrowRightArrow\":\"\\u21C6\",\n  \"leftarrowtail\":\"\\u21A2\",\n  \"LeftCeiling\":\"\\u2308\",\n  \"LeftDoubleBracket\":\"\\u27E6\",\n  \"LeftDownTeeVector\":\"\\u2961\",\n  \"LeftDownVector\":\"\\u21C3\",\n  \"LeftDownVectorBar\":\"\\u2959\",\n  \"LeftFloor\":\"\\u230A\",\n  \"leftharpoondown\":\"\\u21BD\",\n  \"leftharpoonup\":\"\\u21BC\",\n  \"leftleftarrows\":\"\\u21C7\",\n  \"LeftRightArrow\":\"\\u2194\",\n  \"Leftrightarrow\":\"\\u21D4\",\n  \"leftrightarrow\":\"\\u2194\",\n  \"leftrightarrows\":\"\\u21C6\",\n  \"leftrightharpoons\":\"\\u21CB\",\n  \"leftrightsquigarrow\":\"\\u21AD\",\n  \"LeftRightVector\":\"\\u294E\",\n  \"LeftTee\":\"\\u22A3\",\n  \"LeftTeeArrow\":\"\\u21A4\",\n  \"LeftTeeVector\":\"\\u295A\",\n  \"leftthreetimes\":\"\\u22CB\",\n  \"LeftTriangle\":\"\\u22B2\",\n  \"LeftTriangleBar\":\"\\u29CF\",\n  \"LeftTriangleEqual\":\"\\u22B4\",\n  \"LeftUpDownVector\":\"\\u2951\",\n  \"LeftUpTeeVector\":\"\\u2960\",\n  \"LeftUpVector\":\"\\u21BF\",\n  \"LeftUpVectorBar\":\"\\u2958\",\n  \"LeftVector\":\"\\u21BC\",\n  \"LeftVectorBar\":\"\\u2952\",\n  \"lEg\":\"\\u2A8B\",\n  \"leg\":\"\\u22DA\",\n  \"leq\":\"\\u2264\",\n  \"leqq\":\"\\u2266\",\n  \"leqslant\":\"\\u2A7D\",\n  \"les\":\"\\u2A7D\",\n  \"lescc\":\"\\u2AA8\",\n  \"lesdot\":\"\\u2A7F\",\n  \"lesdoto\":\"\\u2A81\",\n  \"lesdotor\":\"\\u2A83\",\n  \"lesg\":\"\\u22DA\\uFE00\",\n  \"lesges\":\"\\u2A93\",\n  \"lessapprox\":\"\\u2A85\",\n  \"lessdot\":\"\\u22D6\",\n  \"lesseqgtr\":\"\\u22DA\",\n  \"lesseqqgtr\":\"\\u2A8B\",\n  \"LessEqualGreater\":\"\\u22DA\",\n  \"LessFullEqual\":\"\\u2266\",\n  \"LessGreater\":\"\\u2276\",\n  \"lessgtr\":\"\\u2276\",\n  \"LessLess\":\"\\u2AA1\",\n  \"lesssim\":\"\\u2272\",\n  \"LessSlantEqual\":\"\\u2A7D\",\n  \"LessTilde\":\"\\u2272\",\n  \"lfisht\":\"\\u297C\",\n  \"lfloor\":\"\\u230A\",\n  \"Lfr\":\"\\uD835\\uDD0F\",\n  \"lfr\":\"\\uD835\\uDD29\",\n  \"lg\":\"\\u2276\",\n  \"lgE\":\"\\u2A91\",\n  \"lHar\":\"\\u2962\",\n  \"lhard\":\"\\u21BD\",\n  \"lharu\":\"\\u21BC\",\n  \"lharul\":\"\\u296A\",\n  \"lhblk\":\"\\u2584\",\n  \"LJcy\":\"\\u0409\",\n  \"ljcy\":\"\\u0459\",\n  \"Ll\":\"\\u22D8\",\n  \"ll\":\"\\u226A\",\n  \"llarr\":\"\\u21C7\",\n  \"llcorner\":\"\\u231E\",\n  \"Lleftarrow\":\"\\u21DA\",\n  \"llhard\":\"\\u296B\",\n  \"lltri\":\"\\u25FA\",\n  \"Lmidot\":\"\\u013F\",\n  \"lmidot\":\"\\u0140\",\n  \"lmoust\":\"\\u23B0\",\n  \"lmoustache\":\"\\u23B0\",\n  \"lnap\":\"\\u2A89\",\n  \"lnapprox\":\"\\u2A89\",\n  \"lnE\":\"\\u2268\",\n  \"lne\":\"\\u2A87\",\n  \"lneq\":\"\\u2A87\",\n  \"lneqq\":\"\\u2268\",\n  \"lnsim\":\"\\u22E6\",\n  \"loang\":\"\\u27EC\",\n  \"loarr\":\"\\u21FD\",\n  \"lobrk\":\"\\u27E6\",\n  \"LongLeftArrow\":\"\\u27F5\",\n  \"Longleftarrow\":\"\\u27F8\",\n  \"longleftarrow\":\"\\u27F5\",\n  \"LongLeftRightArrow\":\"\\u27F7\",\n  \"Longleftrightarrow\":\"\\u27FA\",\n  \"longleftrightarrow\":\"\\u27F7\",\n  \"longmapsto\":\"\\u27FC\",\n  \"LongRightArrow\":\"\\u27F6\",\n  \"Longrightarrow\":\"\\u27F9\",\n  \"longrightarrow\":\"\\u27F6\",\n  \"looparrowleft\":\"\\u21AB\",\n  \"looparrowright\":\"\\u21AC\",\n  \"lopar\":\"\\u2985\",\n  \"Lopf\":\"\\uD835\\uDD43\",\n  \"lopf\":\"\\uD835\\uDD5D\",\n  \"loplus\":\"\\u2A2D\",\n  \"lotimes\":\"\\u2A34\",\n  \"lowast\":\"\\u2217\",\n  \"lowbar\":\"\\u005F\",\n  \"LowerLeftArrow\":\"\\u2199\",\n  \"LowerRightArrow\":\"\\u2198\",\n  \"loz\":\"\\u25CA\",\n  \"lozenge\":\"\\u25CA\",\n  \"lozf\":\"\\u29EB\",\n  \"lpar\":\"\\u0028\",\n  \"lparlt\":\"\\u2993\",\n  \"lrarr\":\"\\u21C6\",\n  \"lrcorner\":\"\\u231F\",\n  \"lrhar\":\"\\u21CB\",\n  \"lrhard\":\"\\u296D\",\n  \"lrm\":\"\\u200E\",\n  \"lrtri\":\"\\u22BF\",\n  \"lsaquo\":\"\\u2039\",\n  \"Lscr\":\"\\u2112\",\n  \"lscr\":\"\\uD835\\uDCC1\",\n  \"Lsh\":\"\\u21B0\",\n  \"lsh\":\"\\u21B0\",\n  \"lsim\":\"\\u2272\",\n  \"lsime\":\"\\u2A8D\",\n  \"lsimg\":\"\\u2A8F\",\n  \"lsqb\":\"\\u005B\",\n  \"lsquo\":\"\\u2018\",\n  \"lsquor\":\"\\u201A\",\n  \"Lstrok\":\"\\u0141\",\n  \"lstrok\":\"\\u0142\",\n  \"LT\":\"\\u003C\",\n  \"Lt\":\"\\u226A\",\n  \"lt\":\"\\u003C\",\n  \"ltcc\":\"\\u2AA6\",\n  \"ltcir\":\"\\u2A79\",\n  \"ltdot\":\"\\u22D6\",\n  \"lthree\":\"\\u22CB\",\n  \"ltimes\":\"\\u22C9\",\n  \"ltlarr\":\"\\u2976\",\n  \"ltquest\":\"\\u2A7B\",\n  \"ltri\":\"\\u25C3\",\n  \"ltrie\":\"\\u22B4\",\n  \"ltrif\":\"\\u25C2\",\n  \"ltrPar\":\"\\u2996\",\n  \"lurdshar\":\"\\u294A\",\n  \"luruhar\":\"\\u2966\",\n  \"lvertneqq\":\"\\u2268\\uFE00\",\n  \"lvnE\":\"\\u2268\\uFE00\",\n  \"macr\":\"\\u00AF\",\n  \"male\":\"\\u2642\",\n  \"malt\":\"\\u2720\",\n  \"maltese\":\"\\u2720\",\n  \"Map\":\"\\u2905\",\n  \"map\":\"\\u21A6\",\n  \"mapsto\":\"\\u21A6\",\n  \"mapstodown\":\"\\u21A7\",\n  \"mapstoleft\":\"\\u21A4\",\n  \"mapstoup\":\"\\u21A5\",\n  \"marker\":\"\\u25AE\",\n  \"mcomma\":\"\\u2A29\",\n  \"Mcy\":\"\\u041C\",\n  \"mcy\":\"\\u043C\",\n  \"mdash\":\"\\u2014\",\n  \"mDDot\":\"\\u223A\",\n  \"measuredangle\":\"\\u2221\",\n  \"MediumSpace\":\"\\u205F\",\n  \"Mellintrf\":\"\\u2133\",\n  \"Mfr\":\"\\uD835\\uDD10\",\n  \"mfr\":\"\\uD835\\uDD2A\",\n  \"mho\":\"\\u2127\",\n  \"micro\":\"\\u00B5\",\n  \"mid\":\"\\u2223\",\n  \"midast\":\"\\u002A\",\n  \"midcir\":\"\\u2AF0\",\n  \"middot\":\"\\u00B7\",\n  \"minus\":\"\\u2212\",\n  \"minusb\":\"\\u229F\",\n  \"minusd\":\"\\u2238\",\n  \"minusdu\":\"\\u2A2A\",\n  \"MinusPlus\":\"\\u2213\",\n  \"mlcp\":\"\\u2ADB\",\n  \"mldr\":\"\\u2026\",\n  \"mnplus\":\"\\u2213\",\n  \"models\":\"\\u22A7\",\n  \"Mopf\":\"\\uD835\\uDD44\",\n  \"mopf\":\"\\uD835\\uDD5E\",\n  \"mp\":\"\\u2213\",\n  \"Mscr\":\"\\u2133\",\n  \"mscr\":\"\\uD835\\uDCC2\",\n  \"mstpos\":\"\\u223E\",\n  \"Mu\":\"\\u039C\",\n  \"mu\":\"\\u03BC\",\n  \"multimap\":\"\\u22B8\",\n  \"mumap\":\"\\u22B8\",\n  \"nabla\":\"\\u2207\",\n  \"Nacute\":\"\\u0143\",\n  \"nacute\":\"\\u0144\",\n  \"nang\":\"\\u2220\\u20D2\",\n  \"nap\":\"\\u2249\",\n  \"napE\":\"\\u2A70\\u0338\",\n  \"napid\":\"\\u224B\\u0338\",\n  \"napos\":\"\\u0149\",\n  \"napprox\":\"\\u2249\",\n  \"natur\":\"\\u266E\",\n  \"natural\":\"\\u266E\",\n  \"naturals\":\"\\u2115\",\n  \"nbsp\":\"\\u00A0\",\n  \"nbump\":\"\\u224E\\u0338\",\n  \"nbumpe\":\"\\u224F\\u0338\",\n  \"ncap\":\"\\u2A43\",\n  \"Ncaron\":\"\\u0147\",\n  \"ncaron\":\"\\u0148\",\n  \"Ncedil\":\"\\u0145\",\n  \"ncedil\":\"\\u0146\",\n  \"ncong\":\"\\u2247\",\n  \"ncongdot\":\"\\u2A6D\\u0338\",\n  \"ncup\":\"\\u2A42\",\n  \"Ncy\":\"\\u041D\",\n  \"ncy\":\"\\u043D\",\n  \"ndash\":\"\\u2013\",\n  \"ne\":\"\\u2260\",\n  \"nearhk\":\"\\u2924\",\n  \"neArr\":\"\\u21D7\",\n  \"nearr\":\"\\u2197\",\n  \"nearrow\":\"\\u2197\",\n  \"nedot\":\"\\u2250\\u0338\",\n  \"NegativeMediumSpace\":\"\\u200B\",\n  \"NegativeThickSpace\":\"\\u200B\",\n  \"NegativeThinSpace\":\"\\u200B\",\n  \"NegativeVeryThinSpace\":\"\\u200B\",\n  \"nequiv\":\"\\u2262\",\n  \"nesear\":\"\\u2928\",\n  \"nesim\":\"\\u2242\\u0338\",\n  \"NestedGreaterGreater\":\"\\u226B\",\n  \"NestedLessLess\":\"\\u226A\",\n  \"NewLine\":\"\\u000A\",\n  \"nexist\":\"\\u2204\",\n  \"nexists\":\"\\u2204\",\n  \"Nfr\":\"\\uD835\\uDD11\",\n  \"nfr\":\"\\uD835\\uDD2B\",\n  \"ngE\":\"\\u2267\\u0338\",\n  \"nge\":\"\\u2271\",\n  \"ngeq\":\"\\u2271\",\n  \"ngeqq\":\"\\u2267\\u0338\",\n  \"ngeqslant\":\"\\u2A7E\\u0338\",\n  \"nges\":\"\\u2A7E\\u0338\",\n  \"nGg\":\"\\u22D9\\u0338\",\n  \"ngsim\":\"\\u2275\",\n  \"nGt\":\"\\u226B\\u20D2\",\n  \"ngt\":\"\\u226F\",\n  \"ngtr\":\"\\u226F\",\n  \"nGtv\":\"\\u226B\\u0338\",\n  \"nhArr\":\"\\u21CE\",\n  \"nharr\":\"\\u21AE\",\n  \"nhpar\":\"\\u2AF2\",\n  \"ni\":\"\\u220B\",\n  \"nis\":\"\\u22FC\",\n  \"nisd\":\"\\u22FA\",\n  \"niv\":\"\\u220B\",\n  \"NJcy\":\"\\u040A\",\n  \"njcy\":\"\\u045A\",\n  \"nlArr\":\"\\u21CD\",\n  \"nlarr\":\"\\u219A\",\n  \"nldr\":\"\\u2025\",\n  \"nlE\":\"\\u2266\\u0338\",\n  \"nle\":\"\\u2270\",\n  \"nLeftarrow\":\"\\u21CD\",\n  \"nleftarrow\":\"\\u219A\",\n  \"nLeftrightarrow\":\"\\u21CE\",\n  \"nleftrightarrow\":\"\\u21AE\",\n  \"nleq\":\"\\u2270\",\n  \"nleqq\":\"\\u2266\\u0338\",\n  \"nleqslant\":\"\\u2A7D\\u0338\",\n  \"nles\":\"\\u2A7D\\u0338\",\n  \"nless\":\"\\u226E\",\n  \"nLl\":\"\\u22D8\\u0338\",\n  \"nlsim\":\"\\u2274\",\n  \"nLt\":\"\\u226A\\u20D2\",\n  \"nlt\":\"\\u226E\",\n  \"nltri\":\"\\u22EA\",\n  \"nltrie\":\"\\u22EC\",\n  \"nLtv\":\"\\u226A\\u0338\",\n  \"nmid\":\"\\u2224\",\n  \"NoBreak\":\"\\u2060\",\n  \"NonBreakingSpace\":\"\\u00A0\",\n  \"Nopf\":\"\\u2115\",\n  \"nopf\":\"\\uD835\\uDD5F\",\n  \"Not\":\"\\u2AEC\",\n  \"not\":\"\\u00AC\",\n  \"NotCongruent\":\"\\u2262\",\n  \"NotCupCap\":\"\\u226D\",\n  \"NotDoubleVerticalBar\":\"\\u2226\",\n  \"NotElement\":\"\\u2209\",\n  \"NotEqual\":\"\\u2260\",\n  \"NotEqualTilde\":\"\\u2242\\u0338\",\n  \"NotExists\":\"\\u2204\",\n  \"NotGreater\":\"\\u226F\",\n  \"NotGreaterEqual\":\"\\u2271\",\n  \"NotGreaterFullEqual\":\"\\u2267\\u0338\",\n  \"NotGreaterGreater\":\"\\u226B\\u0338\",\n  \"NotGreaterLess\":\"\\u2279\",\n  \"NotGreaterSlantEqual\":\"\\u2A7E\\u0338\",\n  \"NotGreaterTilde\":\"\\u2275\",\n  \"NotHumpDownHump\":\"\\u224E\\u0338\",\n  \"NotHumpEqual\":\"\\u224F\\u0338\",\n  \"notin\":\"\\u2209\",\n  \"notindot\":\"\\u22F5\\u0338\",\n  \"notinE\":\"\\u22F9\\u0338\",\n  \"notinva\":\"\\u2209\",\n  \"notinvb\":\"\\u22F7\",\n  \"notinvc\":\"\\u22F6\",\n  \"NotLeftTriangle\":\"\\u22EA\",\n  \"NotLeftTriangleBar\":\"\\u29CF\\u0338\",\n  \"NotLeftTriangleEqual\":\"\\u22EC\",\n  \"NotLess\":\"\\u226E\",\n  \"NotLessEqual\":\"\\u2270\",\n  \"NotLessGreater\":\"\\u2278\",\n  \"NotLessLess\":\"\\u226A\\u0338\",\n  \"NotLessSlantEqual\":\"\\u2A7D\\u0338\",\n  \"NotLessTilde\":\"\\u2274\",\n  \"NotNestedGreaterGreater\":\"\\u2AA2\\u0338\",\n  \"NotNestedLessLess\":\"\\u2AA1\\u0338\",\n  \"notni\":\"\\u220C\",\n  \"notniva\":\"\\u220C\",\n  \"notnivb\":\"\\u22FE\",\n  \"notnivc\":\"\\u22FD\",\n  \"NotPrecedes\":\"\\u2280\",\n  \"NotPrecedesEqual\":\"\\u2AAF\\u0338\",\n  \"NotPrecedesSlantEqual\":\"\\u22E0\",\n  \"NotReverseElement\":\"\\u220C\",\n  \"NotRightTriangle\":\"\\u22EB\",\n  \"NotRightTriangleBar\":\"\\u29D0\\u0338\",\n  \"NotRightTriangleEqual\":\"\\u22ED\",\n  \"NotSquareSubset\":\"\\u228F\\u0338\",\n  \"NotSquareSubsetEqual\":\"\\u22E2\",\n  \"NotSquareSuperset\":\"\\u2290\\u0338\",\n  \"NotSquareSupersetEqual\":\"\\u22E3\",\n  \"NotSubset\":\"\\u2282\\u20D2\",\n  \"NotSubsetEqual\":\"\\u2288\",\n  \"NotSucceeds\":\"\\u2281\",\n  \"NotSucceedsEqual\":\"\\u2AB0\\u0338\",\n  \"NotSucceedsSlantEqual\":\"\\u22E1\",\n  \"NotSucceedsTilde\":\"\\u227F\\u0338\",\n  \"NotSuperset\":\"\\u2283\\u20D2\",\n  \"NotSupersetEqual\":\"\\u2289\",\n  \"NotTilde\":\"\\u2241\",\n  \"NotTildeEqual\":\"\\u2244\",\n  \"NotTildeFullEqual\":\"\\u2247\",\n  \"NotTildeTilde\":\"\\u2249\",\n  \"NotVerticalBar\":\"\\u2224\",\n  \"npar\":\"\\u2226\",\n  \"nparallel\":\"\\u2226\",\n  \"nparsl\":\"\\u2AFD\\u20E5\",\n  \"npart\":\"\\u2202\\u0338\",\n  \"npolint\":\"\\u2A14\",\n  \"npr\":\"\\u2280\",\n  \"nprcue\":\"\\u22E0\",\n  \"npre\":\"\\u2AAF\\u0338\",\n  \"nprec\":\"\\u2280\",\n  \"npreceq\":\"\\u2AAF\\u0338\",\n  \"nrArr\":\"\\u21CF\",\n  \"nrarr\":\"\\u219B\",\n  \"nrarrc\":\"\\u2933\\u0338\",\n  \"nrarrw\":\"\\u219D\\u0338\",\n  \"nRightarrow\":\"\\u21CF\",\n  \"nrightarrow\":\"\\u219B\",\n  \"nrtri\":\"\\u22EB\",\n  \"nrtrie\":\"\\u22ED\",\n  \"nsc\":\"\\u2281\",\n  \"nsccue\":\"\\u22E1\",\n  \"nsce\":\"\\u2AB0\\u0338\",\n  \"Nscr\":\"\\uD835\\uDCA9\",\n  \"nscr\":\"\\uD835\\uDCC3\",\n  \"nshortmid\":\"\\u2224\",\n  \"nshortparallel\":\"\\u2226\",\n  \"nsim\":\"\\u2241\",\n  \"nsime\":\"\\u2244\",\n  \"nsimeq\":\"\\u2244\",\n  \"nsmid\":\"\\u2224\",\n  \"nspar\":\"\\u2226\",\n  \"nsqsube\":\"\\u22E2\",\n  \"nsqsupe\":\"\\u22E3\",\n  \"nsub\":\"\\u2284\",\n  \"nsubE\":\"\\u2AC5\\u0338\",\n  \"nsube\":\"\\u2288\",\n  \"nsubset\":\"\\u2282\\u20D2\",\n  \"nsubseteq\":\"\\u2288\",\n  \"nsubseteqq\":\"\\u2AC5\\u0338\",\n  \"nsucc\":\"\\u2281\",\n  \"nsucceq\":\"\\u2AB0\\u0338\",\n  \"nsup\":\"\\u2285\",\n  \"nsupE\":\"\\u2AC6\\u0338\",\n  \"nsupe\":\"\\u2289\",\n  \"nsupset\":\"\\u2283\\u20D2\",\n  \"nsupseteq\":\"\\u2289\",\n  \"nsupseteqq\":\"\\u2AC6\\u0338\",\n  \"ntgl\":\"\\u2279\",\n  \"Ntilde\":\"\\u00D1\",\n  \"ntilde\":\"\\u00F1\",\n  \"ntlg\":\"\\u2278\",\n  \"ntriangleleft\":\"\\u22EA\",\n  \"ntrianglelefteq\":\"\\u22EC\",\n  \"ntriangleright\":\"\\u22EB\",\n  \"ntrianglerighteq\":\"\\u22ED\",\n  \"Nu\":\"\\u039D\",\n  \"nu\":\"\\u03BD\",\n  \"num\":\"\\u0023\",\n  \"numero\":\"\\u2116\",\n  \"numsp\":\"\\u2007\",\n  \"nvap\":\"\\u224D\\u20D2\",\n  \"nVDash\":\"\\u22AF\",\n  \"nVdash\":\"\\u22AE\",\n  \"nvDash\":\"\\u22AD\",\n  \"nvdash\":\"\\u22AC\",\n  \"nvge\":\"\\u2265\\u20D2\",\n  \"nvgt\":\"\\u003E\\u20D2\",\n  \"nvHarr\":\"\\u2904\",\n  \"nvinfin\":\"\\u29DE\",\n  \"nvlArr\":\"\\u2902\",\n  \"nvle\":\"\\u2264\\u20D2\",\n  \"nvlt\":\"\\u003C\\u20D2\",\n  \"nvltrie\":\"\\u22B4\\u20D2\",\n  \"nvrArr\":\"\\u2903\",\n  \"nvrtrie\":\"\\u22B5\\u20D2\",\n  \"nvsim\":\"\\u223C\\u20D2\",\n  \"nwarhk\":\"\\u2923\",\n  \"nwArr\":\"\\u21D6\",\n  \"nwarr\":\"\\u2196\",\n  \"nwarrow\":\"\\u2196\",\n  \"nwnear\":\"\\u2927\",\n  \"Oacute\":\"\\u00D3\",\n  \"oacute\":\"\\u00F3\",\n  \"oast\":\"\\u229B\",\n  \"ocir\":\"\\u229A\",\n  \"Ocirc\":\"\\u00D4\",\n  \"ocirc\":\"\\u00F4\",\n  \"Ocy\":\"\\u041E\",\n  \"ocy\":\"\\u043E\",\n  \"odash\":\"\\u229D\",\n  \"Odblac\":\"\\u0150\",\n  \"odblac\":\"\\u0151\",\n  \"odiv\":\"\\u2A38\",\n  \"odot\":\"\\u2299\",\n  \"odsold\":\"\\u29BC\",\n  \"OElig\":\"\\u0152\",\n  \"oelig\":\"\\u0153\",\n  \"ofcir\":\"\\u29BF\",\n  \"Ofr\":\"\\uD835\\uDD12\",\n  \"ofr\":\"\\uD835\\uDD2C\",\n  \"ogon\":\"\\u02DB\",\n  \"Ograve\":\"\\u00D2\",\n  \"ograve\":\"\\u00F2\",\n  \"ogt\":\"\\u29C1\",\n  \"ohbar\":\"\\u29B5\",\n  \"ohm\":\"\\u03A9\",\n  \"oint\":\"\\u222E\",\n  \"olarr\":\"\\u21BA\",\n  \"olcir\":\"\\u29BE\",\n  \"olcross\":\"\\u29BB\",\n  \"oline\":\"\\u203E\",\n  \"olt\":\"\\u29C0\",\n  \"Omacr\":\"\\u014C\",\n  \"omacr\":\"\\u014D\",\n  \"Omega\":\"\\u03A9\",\n  \"omega\":\"\\u03C9\",\n  \"Omicron\":\"\\u039F\",\n  \"omicron\":\"\\u03BF\",\n  \"omid\":\"\\u29B6\",\n  \"ominus\":\"\\u2296\",\n  \"Oopf\":\"\\uD835\\uDD46\",\n  \"oopf\":\"\\uD835\\uDD60\",\n  \"opar\":\"\\u29B7\",\n  \"OpenCurlyDoubleQuote\":\"\\u201C\",\n  \"OpenCurlyQuote\":\"\\u2018\",\n  \"operp\":\"\\u29B9\",\n  \"oplus\":\"\\u2295\",\n  \"Or\":\"\\u2A54\",\n  \"or\":\"\\u2228\",\n  \"orarr\":\"\\u21BB\",\n  \"ord\":\"\\u2A5D\",\n  \"order\":\"\\u2134\",\n  \"orderof\":\"\\u2134\",\n  \"ordf\":\"\\u00AA\",\n  \"ordm\":\"\\u00BA\",\n  \"origof\":\"\\u22B6\",\n  \"oror\":\"\\u2A56\",\n  \"orslope\":\"\\u2A57\",\n  \"orv\":\"\\u2A5B\",\n  \"oS\":\"\\u24C8\",\n  \"Oscr\":\"\\uD835\\uDCAA\",\n  \"oscr\":\"\\u2134\",\n  \"Oslash\":\"\\u00D8\",\n  \"oslash\":\"\\u00F8\",\n  \"osol\":\"\\u2298\",\n  \"Otilde\":\"\\u00D5\",\n  \"otilde\":\"\\u00F5\",\n  \"Otimes\":\"\\u2A37\",\n  \"otimes\":\"\\u2297\",\n  \"otimesas\":\"\\u2A36\",\n  \"Ouml\":\"\\u00D6\",\n  \"ouml\":\"\\u00F6\",\n  \"ovbar\":\"\\u233D\",\n  \"OverBar\":\"\\u203E\",\n  \"OverBrace\":\"\\u23DE\",\n  \"OverBracket\":\"\\u23B4\",\n  \"OverParenthesis\":\"\\u23DC\",\n  \"par\":\"\\u2225\",\n  \"para\":\"\\u00B6\",\n  \"parallel\":\"\\u2225\",\n  \"parsim\":\"\\u2AF3\",\n  \"parsl\":\"\\u2AFD\",\n  \"part\":\"\\u2202\",\n  \"PartialD\":\"\\u2202\",\n  \"Pcy\":\"\\u041F\",\n  \"pcy\":\"\\u043F\",\n  \"percnt\":\"\\u0025\",\n  \"period\":\"\\u002E\",\n  \"permil\":\"\\u2030\",\n  \"perp\":\"\\u22A5\",\n  \"pertenk\":\"\\u2031\",\n  \"Pfr\":\"\\uD835\\uDD13\",\n  \"pfr\":\"\\uD835\\uDD2D\",\n  \"Phi\":\"\\u03A6\",\n  \"phi\":\"\\u03C6\",\n  \"phiv\":\"\\u03D5\",\n  \"phmmat\":\"\\u2133\",\n  \"phone\":\"\\u260E\",\n  \"Pi\":\"\\u03A0\",\n  \"pi\":\"\\u03C0\",\n  \"pitchfork\":\"\\u22D4\",\n  \"piv\":\"\\u03D6\",\n  \"planck\":\"\\u210F\",\n  \"planckh\":\"\\u210E\",\n  \"plankv\":\"\\u210F\",\n  \"plus\":\"\\u002B\",\n  \"plusacir\":\"\\u2A23\",\n  \"plusb\":\"\\u229E\",\n  \"pluscir\":\"\\u2A22\",\n  \"plusdo\":\"\\u2214\",\n  \"plusdu\":\"\\u2A25\",\n  \"pluse\":\"\\u2A72\",\n  \"PlusMinus\":\"\\u00B1\",\n  \"plusmn\":\"\\u00B1\",\n  \"plussim\":\"\\u2A26\",\n  \"plustwo\":\"\\u2A27\",\n  \"pm\":\"\\u00B1\",\n  \"Poincareplane\":\"\\u210C\",\n  \"pointint\":\"\\u2A15\",\n  \"Popf\":\"\\u2119\",\n  \"popf\":\"\\uD835\\uDD61\",\n  \"pound\":\"\\u00A3\",\n  \"Pr\":\"\\u2ABB\",\n  \"pr\":\"\\u227A\",\n  \"prap\":\"\\u2AB7\",\n  \"prcue\":\"\\u227C\",\n  \"prE\":\"\\u2AB3\",\n  \"pre\":\"\\u2AAF\",\n  \"prec\":\"\\u227A\",\n  \"precapprox\":\"\\u2AB7\",\n  \"preccurlyeq\":\"\\u227C\",\n  \"Precedes\":\"\\u227A\",\n  \"PrecedesEqual\":\"\\u2AAF\",\n  \"PrecedesSlantEqual\":\"\\u227C\",\n  \"PrecedesTilde\":\"\\u227E\",\n  \"preceq\":\"\\u2AAF\",\n  \"precnapprox\":\"\\u2AB9\",\n  \"precneqq\":\"\\u2AB5\",\n  \"precnsim\":\"\\u22E8\",\n  \"precsim\":\"\\u227E\",\n  \"Prime\":\"\\u2033\",\n  \"prime\":\"\\u2032\",\n  \"primes\":\"\\u2119\",\n  \"prnap\":\"\\u2AB9\",\n  \"prnE\":\"\\u2AB5\",\n  \"prnsim\":\"\\u22E8\",\n  \"prod\":\"\\u220F\",\n  \"Product\":\"\\u220F\",\n  \"profalar\":\"\\u232E\",\n  \"profline\":\"\\u2312\",\n  \"profsurf\":\"\\u2313\",\n  \"prop\":\"\\u221D\",\n  \"Proportion\":\"\\u2237\",\n  \"Proportional\":\"\\u221D\",\n  \"propto\":\"\\u221D\",\n  \"prsim\":\"\\u227E\",\n  \"prurel\":\"\\u22B0\",\n  \"Pscr\":\"\\uD835\\uDCAB\",\n  \"pscr\":\"\\uD835\\uDCC5\",\n  \"Psi\":\"\\u03A8\",\n  \"psi\":\"\\u03C8\",\n  \"puncsp\":\"\\u2008\",\n  \"Qfr\":\"\\uD835\\uDD14\",\n  \"qfr\":\"\\uD835\\uDD2E\",\n  \"qint\":\"\\u2A0C\",\n  \"Qopf\":\"\\u211A\",\n  \"qopf\":\"\\uD835\\uDD62\",\n  \"qprime\":\"\\u2057\",\n  \"Qscr\":\"\\uD835\\uDCAC\",\n  \"qscr\":\"\\uD835\\uDCC6\",\n  \"quaternions\":\"\\u210D\",\n  \"quatint\":\"\\u2A16\",\n  \"quest\":\"\\u003F\",\n  \"questeq\":\"\\u225F\",\n  \"QUOT\":\"\\u0022\",\n  \"quot\":\"\\u0022\",\n  \"rAarr\":\"\\u21DB\",\n  \"race\":\"\\u223D\\u0331\",\n  \"Racute\":\"\\u0154\",\n  \"racute\":\"\\u0155\",\n  \"radic\":\"\\u221A\",\n  \"raemptyv\":\"\\u29B3\",\n  \"Rang\":\"\\u27EB\",\n  \"rang\":\"\\u27E9\",\n  \"rangd\":\"\\u2992\",\n  \"range\":\"\\u29A5\",\n  \"rangle\":\"\\u27E9\",\n  \"raquo\":\"\\u00BB\",\n  \"Rarr\":\"\\u21A0\",\n  \"rArr\":\"\\u21D2\",\n  \"rarr\":\"\\u2192\",\n  \"rarrap\":\"\\u2975\",\n  \"rarrb\":\"\\u21E5\",\n  \"rarrbfs\":\"\\u2920\",\n  \"rarrc\":\"\\u2933\",\n  \"rarrfs\":\"\\u291E\",\n  \"rarrhk\":\"\\u21AA\",\n  \"rarrlp\":\"\\u21AC\",\n  \"rarrpl\":\"\\u2945\",\n  \"rarrsim\":\"\\u2974\",\n  \"Rarrtl\":\"\\u2916\",\n  \"rarrtl\":\"\\u21A3\",\n  \"rarrw\":\"\\u219D\",\n  \"rAtail\":\"\\u291C\",\n  \"ratail\":\"\\u291A\",\n  \"ratio\":\"\\u2236\",\n  \"rationals\":\"\\u211A\",\n  \"RBarr\":\"\\u2910\",\n  \"rBarr\":\"\\u290F\",\n  \"rbarr\":\"\\u290D\",\n  \"rbbrk\":\"\\u2773\",\n  \"rbrace\":\"\\u007D\",\n  \"rbrack\":\"\\u005D\",\n  \"rbrke\":\"\\u298C\",\n  \"rbrksld\":\"\\u298E\",\n  \"rbrkslu\":\"\\u2990\",\n  \"Rcaron\":\"\\u0158\",\n  \"rcaron\":\"\\u0159\",\n  \"Rcedil\":\"\\u0156\",\n  \"rcedil\":\"\\u0157\",\n  \"rceil\":\"\\u2309\",\n  \"rcub\":\"\\u007D\",\n  \"Rcy\":\"\\u0420\",\n  \"rcy\":\"\\u0440\",\n  \"rdca\":\"\\u2937\",\n  \"rdldhar\":\"\\u2969\",\n  \"rdquo\":\"\\u201D\",\n  \"rdquor\":\"\\u201D\",\n  \"rdsh\":\"\\u21B3\",\n  \"Re\":\"\\u211C\",\n  \"real\":\"\\u211C\",\n  \"realine\":\"\\u211B\",\n  \"realpart\":\"\\u211C\",\n  \"reals\":\"\\u211D\",\n  \"rect\":\"\\u25AD\",\n  \"REG\":\"\\u00AE\",\n  \"reg\":\"\\u00AE\",\n  \"ReverseElement\":\"\\u220B\",\n  \"ReverseEquilibrium\":\"\\u21CB\",\n  \"ReverseUpEquilibrium\":\"\\u296F\",\n  \"rfisht\":\"\\u297D\",\n  \"rfloor\":\"\\u230B\",\n  \"Rfr\":\"\\u211C\",\n  \"rfr\":\"\\uD835\\uDD2F\",\n  \"rHar\":\"\\u2964\",\n  \"rhard\":\"\\u21C1\",\n  \"rharu\":\"\\u21C0\",\n  \"rharul\":\"\\u296C\",\n  \"Rho\":\"\\u03A1\",\n  \"rho\":\"\\u03C1\",\n  \"rhov\":\"\\u03F1\",\n  \"RightAngleBracket\":\"\\u27E9\",\n  \"RightArrow\":\"\\u2192\",\n  \"Rightarrow\":\"\\u21D2\",\n  \"rightarrow\":\"\\u2192\",\n  \"RightArrowBar\":\"\\u21E5\",\n  \"RightArrowLeftArrow\":\"\\u21C4\",\n  \"rightarrowtail\":\"\\u21A3\",\n  \"RightCeiling\":\"\\u2309\",\n  \"RightDoubleBracket\":\"\\u27E7\",\n  \"RightDownTeeVector\":\"\\u295D\",\n  \"RightDownVector\":\"\\u21C2\",\n  \"RightDownVectorBar\":\"\\u2955\",\n  \"RightFloor\":\"\\u230B\",\n  \"rightharpoondown\":\"\\u21C1\",\n  \"rightharpoonup\":\"\\u21C0\",\n  \"rightleftarrows\":\"\\u21C4\",\n  \"rightleftharpoons\":\"\\u21CC\",\n  \"rightrightarrows\":\"\\u21C9\",\n  \"rightsquigarrow\":\"\\u219D\",\n  \"RightTee\":\"\\u22A2\",\n  \"RightTeeArrow\":\"\\u21A6\",\n  \"RightTeeVector\":\"\\u295B\",\n  \"rightthreetimes\":\"\\u22CC\",\n  \"RightTriangle\":\"\\u22B3\",\n  \"RightTriangleBar\":\"\\u29D0\",\n  \"RightTriangleEqual\":\"\\u22B5\",\n  \"RightUpDownVector\":\"\\u294F\",\n  \"RightUpTeeVector\":\"\\u295C\",\n  \"RightUpVector\":\"\\u21BE\",\n  \"RightUpVectorBar\":\"\\u2954\",\n  \"RightVector\":\"\\u21C0\",\n  \"RightVectorBar\":\"\\u2953\",\n  \"ring\":\"\\u02DA\",\n  \"risingdotseq\":\"\\u2253\",\n  \"rlarr\":\"\\u21C4\",\n  \"rlhar\":\"\\u21CC\",\n  \"rlm\":\"\\u200F\",\n  \"rmoust\":\"\\u23B1\",\n  \"rmoustache\":\"\\u23B1\",\n  \"rnmid\":\"\\u2AEE\",\n  \"roang\":\"\\u27ED\",\n  \"roarr\":\"\\u21FE\",\n  \"robrk\":\"\\u27E7\",\n  \"ropar\":\"\\u2986\",\n  \"Ropf\":\"\\u211D\",\n  \"ropf\":\"\\uD835\\uDD63\",\n  \"roplus\":\"\\u2A2E\",\n  \"rotimes\":\"\\u2A35\",\n  \"RoundImplies\":\"\\u2970\",\n  \"rpar\":\"\\u0029\",\n  \"rpargt\":\"\\u2994\",\n  \"rppolint\":\"\\u2A12\",\n  \"rrarr\":\"\\u21C9\",\n  \"Rrightarrow\":\"\\u21DB\",\n  \"rsaquo\":\"\\u203A\",\n  \"Rscr\":\"\\u211B\",\n  \"rscr\":\"\\uD835\\uDCC7\",\n  \"Rsh\":\"\\u21B1\",\n  \"rsh\":\"\\u21B1\",\n  \"rsqb\":\"\\u005D\",\n  \"rsquo\":\"\\u2019\",\n  \"rsquor\":\"\\u2019\",\n  \"rthree\":\"\\u22CC\",\n  \"rtimes\":\"\\u22CA\",\n  \"rtri\":\"\\u25B9\",\n  \"rtrie\":\"\\u22B5\",\n  \"rtrif\":\"\\u25B8\",\n  \"rtriltri\":\"\\u29CE\",\n  \"RuleDelayed\":\"\\u29F4\",\n  \"ruluhar\":\"\\u2968\",\n  \"rx\":\"\\u211E\",\n  \"Sacute\":\"\\u015A\",\n  \"sacute\":\"\\u015B\",\n  \"sbquo\":\"\\u201A\",\n  \"Sc\":\"\\u2ABC\",\n  \"sc\":\"\\u227B\",\n  \"scap\":\"\\u2AB8\",\n  \"Scaron\":\"\\u0160\",\n  \"scaron\":\"\\u0161\",\n  \"sccue\":\"\\u227D\",\n  \"scE\":\"\\u2AB4\",\n  \"sce\":\"\\u2AB0\",\n  \"Scedil\":\"\\u015E\",\n  \"scedil\":\"\\u015F\",\n  \"Scirc\":\"\\u015C\",\n  \"scirc\":\"\\u015D\",\n  \"scnap\":\"\\u2ABA\",\n  \"scnE\":\"\\u2AB6\",\n  \"scnsim\":\"\\u22E9\",\n  \"scpolint\":\"\\u2A13\",\n  \"scsim\":\"\\u227F\",\n  \"Scy\":\"\\u0421\",\n  \"scy\":\"\\u0441\",\n  \"sdot\":\"\\u22C5\",\n  \"sdotb\":\"\\u22A1\",\n  \"sdote\":\"\\u2A66\",\n  \"searhk\":\"\\u2925\",\n  \"seArr\":\"\\u21D8\",\n  \"searr\":\"\\u2198\",\n  \"searrow\":\"\\u2198\",\n  \"sect\":\"\\u00A7\",\n  \"semi\":\"\\u003B\",\n  \"seswar\":\"\\u2929\",\n  \"setminus\":\"\\u2216\",\n  \"setmn\":\"\\u2216\",\n  \"sext\":\"\\u2736\",\n  \"Sfr\":\"\\uD835\\uDD16\",\n  \"sfr\":\"\\uD835\\uDD30\",\n  \"sfrown\":\"\\u2322\",\n  \"sharp\":\"\\u266F\",\n  \"SHCHcy\":\"\\u0429\",\n  \"shchcy\":\"\\u0449\",\n  \"SHcy\":\"\\u0428\",\n  \"shcy\":\"\\u0448\",\n  \"ShortDownArrow\":\"\\u2193\",\n  \"ShortLeftArrow\":\"\\u2190\",\n  \"shortmid\":\"\\u2223\",\n  \"shortparallel\":\"\\u2225\",\n  \"ShortRightArrow\":\"\\u2192\",\n  \"ShortUpArrow\":\"\\u2191\",\n  \"shy\":\"\\u00AD\",\n  \"Sigma\":\"\\u03A3\",\n  \"sigma\":\"\\u03C3\",\n  \"sigmaf\":\"\\u03C2\",\n  \"sigmav\":\"\\u03C2\",\n  \"sim\":\"\\u223C\",\n  \"simdot\":\"\\u2A6A\",\n  \"sime\":\"\\u2243\",\n  \"simeq\":\"\\u2243\",\n  \"simg\":\"\\u2A9E\",\n  \"simgE\":\"\\u2AA0\",\n  \"siml\":\"\\u2A9D\",\n  \"simlE\":\"\\u2A9F\",\n  \"simne\":\"\\u2246\",\n  \"simplus\":\"\\u2A24\",\n  \"simrarr\":\"\\u2972\",\n  \"slarr\":\"\\u2190\",\n  \"SmallCircle\":\"\\u2218\",\n  \"smallsetminus\":\"\\u2216\",\n  \"smashp\":\"\\u2A33\",\n  \"smeparsl\":\"\\u29E4\",\n  \"smid\":\"\\u2223\",\n  \"smile\":\"\\u2323\",\n  \"smt\":\"\\u2AAA\",\n  \"smte\":\"\\u2AAC\",\n  \"smtes\":\"\\u2AAC\\uFE00\",\n  \"SOFTcy\":\"\\u042C\",\n  \"softcy\":\"\\u044C\",\n  \"sol\":\"\\u002F\",\n  \"solb\":\"\\u29C4\",\n  \"solbar\":\"\\u233F\",\n  \"Sopf\":\"\\uD835\\uDD4A\",\n  \"sopf\":\"\\uD835\\uDD64\",\n  \"spades\":\"\\u2660\",\n  \"spadesuit\":\"\\u2660\",\n  \"spar\":\"\\u2225\",\n  \"sqcap\":\"\\u2293\",\n  \"sqcaps\":\"\\u2293\\uFE00\",\n  \"sqcup\":\"\\u2294\",\n  \"sqcups\":\"\\u2294\\uFE00\",\n  \"Sqrt\":\"\\u221A\",\n  \"sqsub\":\"\\u228F\",\n  \"sqsube\":\"\\u2291\",\n  \"sqsubset\":\"\\u228F\",\n  \"sqsubseteq\":\"\\u2291\",\n  \"sqsup\":\"\\u2290\",\n  \"sqsupe\":\"\\u2292\",\n  \"sqsupset\":\"\\u2290\",\n  \"sqsupseteq\":\"\\u2292\",\n  \"squ\":\"\\u25A1\",\n  \"Square\":\"\\u25A1\",\n  \"square\":\"\\u25A1\",\n  \"SquareIntersection\":\"\\u2293\",\n  \"SquareSubset\":\"\\u228F\",\n  \"SquareSubsetEqual\":\"\\u2291\",\n  \"SquareSuperset\":\"\\u2290\",\n  \"SquareSupersetEqual\":\"\\u2292\",\n  \"SquareUnion\":\"\\u2294\",\n  \"squarf\":\"\\u25AA\",\n  \"squf\":\"\\u25AA\",\n  \"srarr\":\"\\u2192\",\n  \"Sscr\":\"\\uD835\\uDCAE\",\n  \"sscr\":\"\\uD835\\uDCC8\",\n  \"ssetmn\":\"\\u2216\",\n  \"ssmile\":\"\\u2323\",\n  \"sstarf\":\"\\u22C6\",\n  \"Star\":\"\\u22C6\",\n  \"star\":\"\\u2606\",\n  \"starf\":\"\\u2605\",\n  \"straightepsilon\":\"\\u03F5\",\n  \"straightphi\":\"\\u03D5\",\n  \"strns\":\"\\u00AF\",\n  \"Sub\":\"\\u22D0\",\n  \"sub\":\"\\u2282\",\n  \"subdot\":\"\\u2ABD\",\n  \"subE\":\"\\u2AC5\",\n  \"sube\":\"\\u2286\",\n  \"subedot\":\"\\u2AC3\",\n  \"submult\":\"\\u2AC1\",\n  \"subnE\":\"\\u2ACB\",\n  \"subne\":\"\\u228A\",\n  \"subplus\":\"\\u2ABF\",\n  \"subrarr\":\"\\u2979\",\n  \"Subset\":\"\\u22D0\",\n  \"subset\":\"\\u2282\",\n  \"subseteq\":\"\\u2286\",\n  \"subseteqq\":\"\\u2AC5\",\n  \"SubsetEqual\":\"\\u2286\",\n  \"subsetneq\":\"\\u228A\",\n  \"subsetneqq\":\"\\u2ACB\",\n  \"subsim\":\"\\u2AC7\",\n  \"subsub\":\"\\u2AD5\",\n  \"subsup\":\"\\u2AD3\",\n  \"succ\":\"\\u227B\",\n  \"succapprox\":\"\\u2AB8\",\n  \"succcurlyeq\":\"\\u227D\",\n  \"Succeeds\":\"\\u227B\",\n  \"SucceedsEqual\":\"\\u2AB0\",\n  \"SucceedsSlantEqual\":\"\\u227D\",\n  \"SucceedsTilde\":\"\\u227F\",\n  \"succeq\":\"\\u2AB0\",\n  \"succnapprox\":\"\\u2ABA\",\n  \"succneqq\":\"\\u2AB6\",\n  \"succnsim\":\"\\u22E9\",\n  \"succsim\":\"\\u227F\",\n  \"SuchThat\":\"\\u220B\",\n  \"Sum\":\"\\u2211\",\n  \"sum\":\"\\u2211\",\n  \"sung\":\"\\u266A\",\n  \"Sup\":\"\\u22D1\",\n  \"sup\":\"\\u2283\",\n  \"sup1\":\"\\u00B9\",\n  \"sup2\":\"\\u00B2\",\n  \"sup3\":\"\\u00B3\",\n  \"supdot\":\"\\u2ABE\",\n  \"supdsub\":\"\\u2AD8\",\n  \"supE\":\"\\u2AC6\",\n  \"supe\":\"\\u2287\",\n  \"supedot\":\"\\u2AC4\",\n  \"Superset\":\"\\u2283\",\n  \"SupersetEqual\":\"\\u2287\",\n  \"suphsol\":\"\\u27C9\",\n  \"suphsub\":\"\\u2AD7\",\n  \"suplarr\":\"\\u297B\",\n  \"supmult\":\"\\u2AC2\",\n  \"supnE\":\"\\u2ACC\",\n  \"supne\":\"\\u228B\",\n  \"supplus\":\"\\u2AC0\",\n  \"Supset\":\"\\u22D1\",\n  \"supset\":\"\\u2283\",\n  \"supseteq\":\"\\u2287\",\n  \"supseteqq\":\"\\u2AC6\",\n  \"supsetneq\":\"\\u228B\",\n  \"supsetneqq\":\"\\u2ACC\",\n  \"supsim\":\"\\u2AC8\",\n  \"supsub\":\"\\u2AD4\",\n  \"supsup\":\"\\u2AD6\",\n  \"swarhk\":\"\\u2926\",\n  \"swArr\":\"\\u21D9\",\n  \"swarr\":\"\\u2199\",\n  \"swarrow\":\"\\u2199\",\n  \"swnwar\":\"\\u292A\",\n  \"szlig\":\"\\u00DF\",\n  \"Tab\":\"\\u0009\",\n  \"target\":\"\\u2316\",\n  \"Tau\":\"\\u03A4\",\n  \"tau\":\"\\u03C4\",\n  \"tbrk\":\"\\u23B4\",\n  \"Tcaron\":\"\\u0164\",\n  \"tcaron\":\"\\u0165\",\n  \"Tcedil\":\"\\u0162\",\n  \"tcedil\":\"\\u0163\",\n  \"Tcy\":\"\\u0422\",\n  \"tcy\":\"\\u0442\",\n  \"tdot\":\"\\u20DB\",\n  \"telrec\":\"\\u2315\",\n  \"Tfr\":\"\\uD835\\uDD17\",\n  \"tfr\":\"\\uD835\\uDD31\",\n  \"there4\":\"\\u2234\",\n  \"Therefore\":\"\\u2234\",\n  \"therefore\":\"\\u2234\",\n  \"Theta\":\"\\u0398\",\n  \"theta\":\"\\u03B8\",\n  \"thetasym\":\"\\u03D1\",\n  \"thetav\":\"\\u03D1\",\n  \"thickapprox\":\"\\u2248\",\n  \"thicksim\":\"\\u223C\",\n  \"ThickSpace\":\"\\u205F\\u200A\",\n  \"thinsp\":\"\\u2009\",\n  \"ThinSpace\":\"\\u2009\",\n  \"thkap\":\"\\u2248\",\n  \"thksim\":\"\\u223C\",\n  \"THORN\":\"\\u00DE\",\n  \"thorn\":\"\\u00FE\",\n  \"Tilde\":\"\\u223C\",\n  \"tilde\":\"\\u02DC\",\n  \"TildeEqual\":\"\\u2243\",\n  \"TildeFullEqual\":\"\\u2245\",\n  \"TildeTilde\":\"\\u2248\",\n  \"times\":\"\\u00D7\",\n  \"timesb\":\"\\u22A0\",\n  \"timesbar\":\"\\u2A31\",\n  \"timesd\":\"\\u2A30\",\n  \"tint\":\"\\u222D\",\n  \"toea\":\"\\u2928\",\n  \"top\":\"\\u22A4\",\n  \"topbot\":\"\\u2336\",\n  \"topcir\":\"\\u2AF1\",\n  \"Topf\":\"\\uD835\\uDD4B\",\n  \"topf\":\"\\uD835\\uDD65\",\n  \"topfork\":\"\\u2ADA\",\n  \"tosa\":\"\\u2929\",\n  \"tprime\":\"\\u2034\",\n  \"TRADE\":\"\\u2122\",\n  \"trade\":\"\\u2122\",\n  \"triangle\":\"\\u25B5\",\n  \"triangledown\":\"\\u25BF\",\n  \"triangleleft\":\"\\u25C3\",\n  \"trianglelefteq\":\"\\u22B4\",\n  \"triangleq\":\"\\u225C\",\n  \"triangleright\":\"\\u25B9\",\n  \"trianglerighteq\":\"\\u22B5\",\n  \"tridot\":\"\\u25EC\",\n  \"trie\":\"\\u225C\",\n  \"triminus\":\"\\u2A3A\",\n  \"TripleDot\":\"\\u20DB\",\n  \"triplus\":\"\\u2A39\",\n  \"trisb\":\"\\u29CD\",\n  \"tritime\":\"\\u2A3B\",\n  \"trpezium\":\"\\u23E2\",\n  \"Tscr\":\"\\uD835\\uDCAF\",\n  \"tscr\":\"\\uD835\\uDCC9\",\n  \"TScy\":\"\\u0426\",\n  \"tscy\":\"\\u0446\",\n  \"TSHcy\":\"\\u040B\",\n  \"tshcy\":\"\\u045B\",\n  \"Tstrok\":\"\\u0166\",\n  \"tstrok\":\"\\u0167\",\n  \"twixt\":\"\\u226C\",\n  \"twoheadleftarrow\":\"\\u219E\",\n  \"twoheadrightarrow\":\"\\u21A0\",\n  \"Uacute\":\"\\u00DA\",\n  \"uacute\":\"\\u00FA\",\n  \"Uarr\":\"\\u219F\",\n  \"uArr\":\"\\u21D1\",\n  \"uarr\":\"\\u2191\",\n  \"Uarrocir\":\"\\u2949\",\n  \"Ubrcy\":\"\\u040E\",\n  \"ubrcy\":\"\\u045E\",\n  \"Ubreve\":\"\\u016C\",\n  \"ubreve\":\"\\u016D\",\n  \"Ucirc\":\"\\u00DB\",\n  \"ucirc\":\"\\u00FB\",\n  \"Ucy\":\"\\u0423\",\n  \"ucy\":\"\\u0443\",\n  \"udarr\":\"\\u21C5\",\n  \"Udblac\":\"\\u0170\",\n  \"udblac\":\"\\u0171\",\n  \"udhar\":\"\\u296E\",\n  \"ufisht\":\"\\u297E\",\n  \"Ufr\":\"\\uD835\\uDD18\",\n  \"ufr\":\"\\uD835\\uDD32\",\n  \"Ugrave\":\"\\u00D9\",\n  \"ugrave\":\"\\u00F9\",\n  \"uHar\":\"\\u2963\",\n  \"uharl\":\"\\u21BF\",\n  \"uharr\":\"\\u21BE\",\n  \"uhblk\":\"\\u2580\",\n  \"ulcorn\":\"\\u231C\",\n  \"ulcorner\":\"\\u231C\",\n  \"ulcrop\":\"\\u230F\",\n  \"ultri\":\"\\u25F8\",\n  \"Umacr\":\"\\u016A\",\n  \"umacr\":\"\\u016B\",\n  \"uml\":\"\\u00A8\",\n  \"UnderBar\":\"\\u005F\",\n  \"UnderBrace\":\"\\u23DF\",\n  \"UnderBracket\":\"\\u23B5\",\n  \"UnderParenthesis\":\"\\u23DD\",\n  \"Union\":\"\\u22C3\",\n  \"UnionPlus\":\"\\u228E\",\n  \"Uogon\":\"\\u0172\",\n  \"uogon\":\"\\u0173\",\n  \"Uopf\":\"\\uD835\\uDD4C\",\n  \"uopf\":\"\\uD835\\uDD66\",\n  \"UpArrow\":\"\\u2191\",\n  \"Uparrow\":\"\\u21D1\",\n  \"uparrow\":\"\\u2191\",\n  \"UpArrowBar\":\"\\u2912\",\n  \"UpArrowDownArrow\":\"\\u21C5\",\n  \"UpDownArrow\":\"\\u2195\",\n  \"Updownarrow\":\"\\u21D5\",\n  \"updownarrow\":\"\\u2195\",\n  \"UpEquilibrium\":\"\\u296E\",\n  \"upharpoonleft\":\"\\u21BF\",\n  \"upharpoonright\":\"\\u21BE\",\n  \"uplus\":\"\\u228E\",\n  \"UpperLeftArrow\":\"\\u2196\",\n  \"UpperRightArrow\":\"\\u2197\",\n  \"Upsi\":\"\\u03D2\",\n  \"upsi\":\"\\u03C5\",\n  \"upsih\":\"\\u03D2\",\n  \"Upsilon\":\"\\u03A5\",\n  \"upsilon\":\"\\u03C5\",\n  \"UpTee\":\"\\u22A5\",\n  \"UpTeeArrow\":\"\\u21A5\",\n  \"upuparrows\":\"\\u21C8\",\n  \"urcorn\":\"\\u231D\",\n  \"urcorner\":\"\\u231D\",\n  \"urcrop\":\"\\u230E\",\n  \"Uring\":\"\\u016E\",\n  \"uring\":\"\\u016F\",\n  \"urtri\":\"\\u25F9\",\n  \"Uscr\":\"\\uD835\\uDCB0\",\n  \"uscr\":\"\\uD835\\uDCCA\",\n  \"utdot\":\"\\u22F0\",\n  \"Utilde\":\"\\u0168\",\n  \"utilde\":\"\\u0169\",\n  \"utri\":\"\\u25B5\",\n  \"utrif\":\"\\u25B4\",\n  \"uuarr\":\"\\u21C8\",\n  \"Uuml\":\"\\u00DC\",\n  \"uuml\":\"\\u00FC\",\n  \"uwangle\":\"\\u29A7\",\n  \"vangrt\":\"\\u299C\",\n  \"varepsilon\":\"\\u03F5\",\n  \"varkappa\":\"\\u03F0\",\n  \"varnothing\":\"\\u2205\",\n  \"varphi\":\"\\u03D5\",\n  \"varpi\":\"\\u03D6\",\n  \"varpropto\":\"\\u221D\",\n  \"vArr\":\"\\u21D5\",\n  \"varr\":\"\\u2195\",\n  \"varrho\":\"\\u03F1\",\n  \"varsigma\":\"\\u03C2\",\n  \"varsubsetneq\":\"\\u228A\\uFE00\",\n  \"varsubsetneqq\":\"\\u2ACB\\uFE00\",\n  \"varsupsetneq\":\"\\u228B\\uFE00\",\n  \"varsupsetneqq\":\"\\u2ACC\\uFE00\",\n  \"vartheta\":\"\\u03D1\",\n  \"vartriangleleft\":\"\\u22B2\",\n  \"vartriangleright\":\"\\u22B3\",\n  \"Vbar\":\"\\u2AEB\",\n  \"vBar\":\"\\u2AE8\",\n  \"vBarv\":\"\\u2AE9\",\n  \"Vcy\":\"\\u0412\",\n  \"vcy\":\"\\u0432\",\n  \"VDash\":\"\\u22AB\",\n  \"Vdash\":\"\\u22A9\",\n  \"vDash\":\"\\u22A8\",\n  \"vdash\":\"\\u22A2\",\n  \"Vdashl\":\"\\u2AE6\",\n  \"Vee\":\"\\u22C1\",\n  \"vee\":\"\\u2228\",\n  \"veebar\":\"\\u22BB\",\n  \"veeeq\":\"\\u225A\",\n  \"vellip\":\"\\u22EE\",\n  \"Verbar\":\"\\u2016\",\n  \"verbar\":\"\\u007C\",\n  \"Vert\":\"\\u2016\",\n  \"vert\":\"\\u007C\",\n  \"VerticalBar\":\"\\u2223\",\n  \"VerticalLine\":\"\\u007C\",\n  \"VerticalSeparator\":\"\\u2758\",\n  \"VerticalTilde\":\"\\u2240\",\n  \"VeryThinSpace\":\"\\u200A\",\n  \"Vfr\":\"\\uD835\\uDD19\",\n  \"vfr\":\"\\uD835\\uDD33\",\n  \"vltri\":\"\\u22B2\",\n  \"vnsub\":\"\\u2282\\u20D2\",\n  \"vnsup\":\"\\u2283\\u20D2\",\n  \"Vopf\":\"\\uD835\\uDD4D\",\n  \"vopf\":\"\\uD835\\uDD67\",\n  \"vprop\":\"\\u221D\",\n  \"vrtri\":\"\\u22B3\",\n  \"Vscr\":\"\\uD835\\uDCB1\",\n  \"vscr\":\"\\uD835\\uDCCB\",\n  \"vsubnE\":\"\\u2ACB\\uFE00\",\n  \"vsubne\":\"\\u228A\\uFE00\",\n  \"vsupnE\":\"\\u2ACC\\uFE00\",\n  \"vsupne\":\"\\u228B\\uFE00\",\n  \"Vvdash\":\"\\u22AA\",\n  \"vzigzag\":\"\\u299A\",\n  \"Wcirc\":\"\\u0174\",\n  \"wcirc\":\"\\u0175\",\n  \"wedbar\":\"\\u2A5F\",\n  \"Wedge\":\"\\u22C0\",\n  \"wedge\":\"\\u2227\",\n  \"wedgeq\":\"\\u2259\",\n  \"weierp\":\"\\u2118\",\n  \"Wfr\":\"\\uD835\\uDD1A\",\n  \"wfr\":\"\\uD835\\uDD34\",\n  \"Wopf\":\"\\uD835\\uDD4E\",\n  \"wopf\":\"\\uD835\\uDD68\",\n  \"wp\":\"\\u2118\",\n  \"wr\":\"\\u2240\",\n  \"wreath\":\"\\u2240\",\n  \"Wscr\":\"\\uD835\\uDCB2\",\n  \"wscr\":\"\\uD835\\uDCCC\",\n  \"xcap\":\"\\u22C2\",\n  \"xcirc\":\"\\u25EF\",\n  \"xcup\":\"\\u22C3\",\n  \"xdtri\":\"\\u25BD\",\n  \"Xfr\":\"\\uD835\\uDD1B\",\n  \"xfr\":\"\\uD835\\uDD35\",\n  \"xhArr\":\"\\u27FA\",\n  \"xharr\":\"\\u27F7\",\n  \"Xi\":\"\\u039E\",\n  \"xi\":\"\\u03BE\",\n  \"xlArr\":\"\\u27F8\",\n  \"xlarr\":\"\\u27F5\",\n  \"xmap\":\"\\u27FC\",\n  \"xnis\":\"\\u22FB\",\n  \"xodot\":\"\\u2A00\",\n  \"Xopf\":\"\\uD835\\uDD4F\",\n  \"xopf\":\"\\uD835\\uDD69\",\n  \"xoplus\":\"\\u2A01\",\n  \"xotime\":\"\\u2A02\",\n  \"xrArr\":\"\\u27F9\",\n  \"xrarr\":\"\\u27F6\",\n  \"Xscr\":\"\\uD835\\uDCB3\",\n  \"xscr\":\"\\uD835\\uDCCD\",\n  \"xsqcup\":\"\\u2A06\",\n  \"xuplus\":\"\\u2A04\",\n  \"xutri\":\"\\u25B3\",\n  \"xvee\":\"\\u22C1\",\n  \"xwedge\":\"\\u22C0\",\n  \"Yacute\":\"\\u00DD\",\n  \"yacute\":\"\\u00FD\",\n  \"YAcy\":\"\\u042F\",\n  \"yacy\":\"\\u044F\",\n  \"Ycirc\":\"\\u0176\",\n  \"ycirc\":\"\\u0177\",\n  \"Ycy\":\"\\u042B\",\n  \"ycy\":\"\\u044B\",\n  \"yen\":\"\\u00A5\",\n  \"Yfr\":\"\\uD835\\uDD1C\",\n  \"yfr\":\"\\uD835\\uDD36\",\n  \"YIcy\":\"\\u0407\",\n  \"yicy\":\"\\u0457\",\n  \"Yopf\":\"\\uD835\\uDD50\",\n  \"yopf\":\"\\uD835\\uDD6A\",\n  \"Yscr\":\"\\uD835\\uDCB4\",\n  \"yscr\":\"\\uD835\\uDCCE\",\n  \"YUcy\":\"\\u042E\",\n  \"yucy\":\"\\u044E\",\n  \"Yuml\":\"\\u0178\",\n  \"yuml\":\"\\u00FF\",\n  \"Zacute\":\"\\u0179\",\n  \"zacute\":\"\\u017A\",\n  \"Zcaron\":\"\\u017D\",\n  \"zcaron\":\"\\u017E\",\n  \"Zcy\":\"\\u0417\",\n  \"zcy\":\"\\u0437\",\n  \"Zdot\":\"\\u017B\",\n  \"zdot\":\"\\u017C\",\n  \"zeetrf\":\"\\u2128\",\n  \"ZeroWidthSpace\":\"\\u200B\",\n  \"Zeta\":\"\\u0396\",\n  \"zeta\":\"\\u03B6\",\n  \"Zfr\":\"\\u2128\",\n  \"zfr\":\"\\uD835\\uDD37\",\n  \"ZHcy\":\"\\u0416\",\n  \"zhcy\":\"\\u0436\",\n  \"zigrarr\":\"\\u21DD\",\n  \"Zopf\":\"\\u2124\",\n  \"zopf\":\"\\uD835\\uDD6B\",\n  \"Zscr\":\"\\uD835\\uDCB5\",\n  \"zscr\":\"\\uD835\\uDCCF\",\n  \"zwj\":\"\\u200D\",\n  \"zwnj\":\"\\u200C\"\n};\n","'use strict';\n\n\nvar normalizeLink = require('./normalize_link');\nvar unescapeMd    = require('../common/utils').unescapeMd;\n\n/**\n * Parse link destination\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nmodule.exports = function parseLinkDestination(state, pos) {\n  var code, level, link,\n      start = pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = state.src.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return false; }\n      if (code === 0x3E /* > */) {\n        link = normalizeLink(unescapeMd(state.src.slice(start + 1, pos)));\n        if (!state.parser.validateLink(link)) { return false; }\n        state.pos = pos + 1;\n        state.linkContent = link;\n        return true;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return false;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control chars\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n      if (level > 1) { break; }\n    }\n\n    if (code === 0x29 /* ) */) {\n      level--;\n      if (level < 0) { break; }\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return false; }\n\n  link = unescapeMd(state.src.slice(start, pos));\n  if (!state.parser.validateLink(link)) { return false; }\n\n  state.linkContent = link;\n  state.pos = pos;\n  return true;\n};\n","'use strict';\n\nvar replaceEntities = require('../common/utils').replaceEntities;\n\nmodule.exports = function normalizeLink(url) {\n  var normalized = replaceEntities(url);\n  // We shouldn't care about the result of malformed URIs,\n  // and should not throw an exception.\n  try {\n    normalized = decodeURI(normalized);\n  } catch (err) {}\n  return encodeURI(normalized);\n};\n","'use strict';\n\n\nvar unescapeMd = require('../common/utils').unescapeMd;\n\n/**\n * Parse link title\n *\n *   - on success it returns a string and updates state.pos;\n *   - on failure it returns null\n *\n * @param  {Object} state\n * @param  {Number} pos\n * @api private\n */\n\nmodule.exports = function parseLinkTitle(state, pos) {\n  var code,\n      start = pos,\n      max = state.posMax,\n      marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return false; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = state.src.charCodeAt(pos);\n    if (code === marker) {\n      state.pos = pos + 1;\n      state.linkContent = unescapeMd(state.src.slice(start + 1, pos));\n      return true;\n    }\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    pos++;\n  }\n\n  return false;\n};\n","'use strict';\n\nmodule.exports = function normalizeReference(str) {\n  // use .toUpperCase() instead of .toLowerCase()\n  // here to avoid a conflict with Object.prototype\n  // members (most notably, `__proto__`)\n  return str.trim().replace(/\\s+/g, ' ').toUpperCase();\n};\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message))\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","'use strict';\n\n/**\n * Local dependencies\n */\n\nvar assign       = require('./common/utils').assign;\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar Ruler        = require('./ruler');\n\n/**\n * Preset configs\n */\n\nvar config = {\n  'default':    require('./configs/default'),\n  'full':       require('./configs/full'),\n  'commonmark': require('./configs/commonmark')\n};\n\n/**\n * The `StateCore` class manages state.\n *\n * @param {Object} `instance` Remarkable instance\n * @param {String} `str` Markdown string\n * @param {Object} `env`\n */\n\nfunction StateCore(instance, str, env) {\n  this.src = str;\n  this.env = env;\n  this.options = instance.options;\n  this.tokens = [];\n  this.inlineMode = false;\n\n  this.inline = instance.inline;\n  this.block = instance.block;\n  this.renderer = instance.renderer;\n  this.typographer = instance.typographer;\n}\n\n/**\n * The main `Remarkable` class. Create an instance of\n * `Remarkable` with a `preset` and/or `options`.\n *\n * @param {String} `preset` If no preset is given, `default` is used.\n * @param {Object} `options`\n */\n\nfunction Remarkable(preset, options) {\n  if (typeof preset !== 'string') {\n    options = preset;\n    preset = 'default';\n  }\n\n  this.inline   = new ParserInline();\n  this.block    = new ParserBlock();\n  this.core     = new ParserCore();\n  this.renderer = new Renderer();\n  this.ruler    = new Ruler();\n\n  this.options  = {};\n  this.configure(config[preset]);\n  this.set(options || {});\n}\n\n/**\n * Set options as an alternative to passing them\n * to the constructor.\n *\n * ```js\n * md.set({typographer: true});\n * ```\n * @param {Object} `options`\n * @api public\n */\n\nRemarkable.prototype.set = function (options) {\n  assign(this.options, options);\n};\n\n/**\n * Batch loader for components rules states, and options\n *\n * @param  {Object} `presets`\n */\n\nRemarkable.prototype.configure = function (presets) {\n  var self = this;\n\n  if (!presets) { throw new Error('Wrong `remarkable` preset, check name/content'); }\n  if (presets.options) { self.set(presets.options); }\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enable(presets.components[name].rules, true);\n      }\n    });\n  }\n};\n\n/**\n * Use a plugin.\n *\n * ```js\n * var md = new Remarkable();\n *\n * md.use(plugin1)\n *   .use(plugin2, opts)\n *   .use(plugin3);\n * ```\n *\n * @param  {Function} `plugin`\n * @param  {Object} `options`\n * @return {Object} `Remarkable` for chaining\n */\n\nRemarkable.prototype.use = function (plugin, options) {\n  plugin(this, options);\n  return this;\n};\n\n\n/**\n * Parse the input `string` and return a tokens array.\n * Modifies `env` with definitions data.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parse = function (str, env) {\n  var state = new StateCore(this, str, env);\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * The main `.render()` method that does all the magic :)\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {String} Rendered HTML.\n */\n\nRemarkable.prototype.render = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(str, env), this.options, env);\n};\n\n/**\n * Parse the given content `string` as a single string.\n *\n * @param  {String} `string`\n * @param  {Object} `env`\n * @return {Array} Array of tokens\n */\n\nRemarkable.prototype.parseInline = function (str, env) {\n  var state = new StateCore(this, str, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n\n/**\n * Render a single content `string`, without wrapping it\n * to paragraphs\n *\n * @param  {String} `str`\n * @param  {Object} `env`\n * @return {String}\n */\n\nRemarkable.prototype.renderInline = function (str, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(str, env), this.options, env);\n};\n\n/**\n * Expose `Remarkable`\n */\n\nmodule.exports = Remarkable;\n\n/**\n * Expose `utils`, Useful helper functions for custom\n * rendering.\n */\n\nmodule.exports.utils = require('./common/utils');\n","'use strict';\n\n/**\n * Local dependencies\n */\n\nvar utils = require('./common/utils');\nvar rules = require('./rules');\n\n/**\n * Expose `Renderer`\n */\n\nmodule.exports = Renderer;\n\n/**\n * Renderer class. Renders HTML and exposes `rules` to allow\n * local modifications.\n */\n\nfunction Renderer() {\n  this.rules = utils.assign({}, rules);\n\n  // exported helper, for custom rules only\n  this.getBreak = rules.getBreak;\n}\n\n/**\n * Render a string of inline HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = 0;\n  var result = '';\n\n  while (len--) {\n    result += _rules[tokens[i].type](tokens, i++, options, env, this);\n  }\n\n  return result;\n};\n\n/**\n * Render a string of HTML with the given `tokens` and\n * `options`.\n *\n * @param  {Array} `tokens`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @return {String}\n * @api public\n */\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var _rules = this.rules;\n  var len = tokens.length, i = -1;\n  var result = '';\n\n  while (++i < len) {\n    if (tokens[i].type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else {\n      result += _rules[tokens[i].type](tokens, i, options, env, this);\n    }\n  }\n  return result;\n};\n","'use strict';\n\n/**\n * Local dependencies\n */\n\nvar has             = require('./common/utils').has;\nvar unescapeMd      = require('./common/utils').unescapeMd;\nvar replaceEntities = require('./common/utils').replaceEntities;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n/**\n * Renderer rules cache\n */\n\nvar rules = {};\n\n/**\n * Blockquotes\n */\n\nrules.blockquote_open = function(/* tokens, idx, options, env */) {\n  return '<blockquote>\\n';\n};\n\nrules.blockquote_close = function(tokens, idx /*, options, env */) {\n  return '</blockquote>' + getBreak(tokens, idx);\n};\n\n/**\n * Code\n */\n\nrules.code = function(tokens, idx /*, options, env */) {\n  if (tokens[idx].block) {\n    return '<pre><code>' + escapeHtml(tokens[idx].content) + '</code></pre>' + getBreak(tokens, idx);\n  }\n  return '<code>' + escapeHtml(tokens[idx].content) + '</code>';\n};\n\n/**\n * Fenced code blocks\n */\n\nrules.fence = function(tokens, idx, options, env, instance) {\n  var token = tokens[idx];\n  var langClass = '';\n  var langPrefix = options.langPrefix;\n  var langName = '', fences, fenceName;\n  var highlighted;\n\n  if (token.params) {\n\n    //\n    // ```foo bar\n    //\n    // Try custom renderer \"foo\" first. That will simplify overwrite\n    // for diagrams, latex, and any other fenced block with custom look\n    //\n\n    fences = token.params.split(/\\s+/g);\n    fenceName = fences.join(' ');\n\n    if (has(instance.rules.fence_custom, fences[0])) {\n      return instance.rules.fence_custom[fences[0]](tokens, idx, options, env, instance);\n    }\n\n    langName = escapeHtml(replaceEntities(unescapeMd(fenceName)));\n    langClass = ' class=\"' + langPrefix + langName + '\"';\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight.apply(options.highlight, [ token.content ].concat(fences))\n      || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  return '<pre><code' + langClass + '>'\n        + highlighted\n        + '</code></pre>'\n        + getBreak(tokens, idx);\n};\n\nrules.fence_custom = {};\n\n/**\n * Headings\n */\n\nrules.heading_open = function(tokens, idx /*, options, env */) {\n  return '<h' + tokens[idx].hLevel + '>';\n};\nrules.heading_close = function(tokens, idx /*, options, env */) {\n  return '</h' + tokens[idx].hLevel + '>\\n';\n};\n\n/**\n * Horizontal rules\n */\n\nrules.hr = function(tokens, idx, options /*, env */) {\n  return (options.xhtmlOut ? '<hr />' : '<hr>') + getBreak(tokens, idx);\n};\n\n/**\n * Bullets\n */\n\nrules.bullet_list_open = function(/* tokens, idx, options, env */) {\n  return '<ul>\\n';\n};\nrules.bullet_list_close = function(tokens, idx /*, options, env */) {\n  return '</ul>' + getBreak(tokens, idx);\n};\n\n/**\n * List items\n */\n\nrules.list_item_open = function(/* tokens, idx, options, env */) {\n  return '<li>';\n};\nrules.list_item_close = function(/* tokens, idx, options, env */) {\n  return '</li>\\n';\n};\n\n/**\n * Ordered list items\n */\n\nrules.ordered_list_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  var order = token.order > 1 ? ' start=\"' + token.order + '\"' : '';\n  return '<ol' + order + '>\\n';\n};\nrules.ordered_list_close = function(tokens, idx /*, options, env */) {\n  return '</ol>' + getBreak(tokens, idx);\n};\n\n/**\n * Paragraphs\n */\n\nrules.paragraph_open = function(tokens, idx /*, options, env */) {\n  return tokens[idx].tight ? '' : '<p>';\n};\nrules.paragraph_close = function(tokens, idx /*, options, env */) {\n  var addBreak = !(tokens[idx].tight && idx && tokens[idx - 1].type === 'inline' && !tokens[idx - 1].content);\n  return (tokens[idx].tight ? '' : '</p>') + (addBreak ? getBreak(tokens, idx) : '');\n};\n\n/**\n * Links\n */\n\nrules.link_open = function(tokens, idx, options /* env */) {\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\n  var target = options.linkTarget ? (' target=\"' + options.linkTarget + '\"') : '';\n  return '<a href=\"' + escapeHtml(tokens[idx].href) + '\"' + title + target + '>';\n};\nrules.link_close = function(/* tokens, idx, options, env */) {\n  return '</a>';\n};\n\n/**\n * Images\n */\n\nrules.image = function(tokens, idx, options /*, env */) {\n  var src = ' src=\"' + escapeHtml(tokens[idx].src) + '\"';\n  var title = tokens[idx].title ? (' title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\"') : '';\n  var alt = ' alt=\"' + (tokens[idx].alt ? escapeHtml(replaceEntities(unescapeMd(tokens[idx].alt))) : '') + '\"';\n  var suffix = options.xhtmlOut ? ' /' : '';\n  return '<img' + src + alt + title + suffix + '>';\n};\n\n/**\n * Tables\n */\n\nrules.table_open = function(/* tokens, idx, options, env */) {\n  return '<table>\\n';\n};\nrules.table_close = function(/* tokens, idx, options, env */) {\n  return '</table>\\n';\n};\nrules.thead_open = function(/* tokens, idx, options, env */) {\n  return '<thead>\\n';\n};\nrules.thead_close = function(/* tokens, idx, options, env */) {\n  return '</thead>\\n';\n};\nrules.tbody_open = function(/* tokens, idx, options, env */) {\n  return '<tbody>\\n';\n};\nrules.tbody_close = function(/* tokens, idx, options, env */) {\n  return '</tbody>\\n';\n};\nrules.tr_open = function(/* tokens, idx, options, env */) {\n  return '<tr>';\n};\nrules.tr_close = function(/* tokens, idx, options, env */) {\n  return '</tr>\\n';\n};\nrules.th_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  return '<th'\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\n    + '>';\n};\nrules.th_close = function(/* tokens, idx, options, env */) {\n  return '</th>';\n};\nrules.td_open = function(tokens, idx /*, options, env */) {\n  var token = tokens[idx];\n  return '<td'\n    + (token.align ? ' style=\"text-align:' + token.align + '\"' : '')\n    + '>';\n};\nrules.td_close = function(/* tokens, idx, options, env */) {\n  return '</td>';\n};\n\n/**\n * Bold\n */\n\nrules.strong_open = function(/* tokens, idx, options, env */) {\n  return '<strong>';\n};\nrules.strong_close = function(/* tokens, idx, options, env */) {\n  return '</strong>';\n};\n\n/**\n * Italicize\n */\n\nrules.em_open = function(/* tokens, idx, options, env */) {\n  return '<em>';\n};\nrules.em_close = function(/* tokens, idx, options, env */) {\n  return '</em>';\n};\n\n/**\n * Strikethrough\n */\n\nrules.del_open = function(/* tokens, idx, options, env */) {\n  return '<del>';\n};\nrules.del_close = function(/* tokens, idx, options, env */) {\n  return '</del>';\n};\n\n/**\n * Insert\n */\n\nrules.ins_open = function(/* tokens, idx, options, env */) {\n  return '<ins>';\n};\nrules.ins_close = function(/* tokens, idx, options, env */) {\n  return '</ins>';\n};\n\n/**\n * Highlight\n */\n\nrules.mark_open = function(/* tokens, idx, options, env */) {\n  return '<mark>';\n};\nrules.mark_close = function(/* tokens, idx, options, env */) {\n  return '</mark>';\n};\n\n/**\n * Super- and sub-script\n */\n\nrules.sub = function(tokens, idx /*, options, env */) {\n  return '<sub>' + escapeHtml(tokens[idx].content) + '</sub>';\n};\nrules.sup = function(tokens, idx /*, options, env */) {\n  return '<sup>' + escapeHtml(tokens[idx].content) + '</sup>';\n};\n\n/**\n * Breaks\n */\n\nrules.hardbreak = function(tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\nrules.softbreak = function(tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n/**\n * Text\n */\n\nrules.text = function(tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n/**\n * Content\n */\n\nrules.htmlblock = function(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\nrules.htmltag = function(tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n/**\n * Abbreviations, initialism\n */\n\nrules.abbr_open = function(tokens, idx /*, options, env */) {\n  return '<abbr title=\"' + escapeHtml(replaceEntities(tokens[idx].title)) + '\">';\n};\nrules.abbr_close = function(/* tokens, idx, options, env */) {\n  return '</abbr>';\n};\n\n/**\n * Footnotes\n */\n\nrules.footnote_ref = function(tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n  return '<sup class=\"footnote-ref\"><a href=\"#fn' + n + '\" id=\"' + id + '\">[' + n + ']</a></sup>';\n};\nrules.footnote_block_open = function(tokens, idx, options) {\n  var hr = options.xhtmlOut\n    ? '<hr class=\"footnotes-sep\" />\\n'\n    : '<hr class=\"footnotes-sep\">\\n';\n  return hr + '<section class=\"footnotes\">\\n<ol class=\"footnotes-list\">\\n';\n};\nrules.footnote_block_close = function() {\n  return '</ol>\\n</section>\\n';\n};\nrules.footnote_open = function(tokens, idx) {\n  var id = Number(tokens[idx].id + 1).toString();\n  return '<li id=\"fn' + id + '\"  class=\"footnote-item\">';\n};\nrules.footnote_close = function() {\n  return '</li>\\n';\n};\nrules.footnote_anchor = function(tokens, idx) {\n  var n = Number(tokens[idx].id + 1).toString();\n  var id = 'fnref' + n;\n  if (tokens[idx].subId > 0) {\n    id += ':' + tokens[idx].subId;\n  }\n  return ' <a href=\"#' + id + '\" class=\"footnote-backref\">↩</a>';\n};\n\n/**\n * Definition lists\n */\n\nrules.dl_open = function() {\n  return '<dl>\\n';\n};\nrules.dt_open = function() {\n  return '<dt>';\n};\nrules.dd_open = function() {\n  return '<dd>';\n};\nrules.dl_close = function() {\n  return '</dl>\\n';\n};\nrules.dt_close = function() {\n  return '</dt>\\n';\n};\nrules.dd_close = function() {\n  return '</dd>\\n';\n};\n\n/**\n * Helper functions\n */\n\nfunction nextToken(tokens, idx) {\n  if (++idx >= tokens.length - 2) {\n    return idx;\n  }\n  if ((tokens[idx].type === 'paragraph_open' && tokens[idx].tight) &&\n      (tokens[idx + 1].type === 'inline' && tokens[idx + 1].content.length === 0) &&\n      (tokens[idx + 2].type === 'paragraph_close' && tokens[idx + 2].tight)) {\n    return nextToken(tokens, idx + 2);\n  }\n  return idx;\n}\n\n/**\n * Check to see if `\\n` is needed before the next token.\n *\n * @param  {Array} `tokens`\n * @param  {Number} `idx`\n * @return {String} Empty string or newline\n * @api private\n */\n\nvar getBreak = rules.getBreak = function getBreak(tokens, idx) {\n  idx = nextToken(tokens, idx);\n  if (idx < tokens.length && tokens[idx].type === 'list_item_close') {\n    return '';\n  }\n  return '\\n';\n};\n\n/**\n * Expose `rules`\n */\n\nmodule.exports = rules;\n","'use strict';\n\n/**\n * Local dependencies\n */\n\nvar Ruler = require('./ruler');\n\n/**\n * Core parser `rules`\n */\n\nvar _rules = [\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'abbr',           require('./rules_core/abbr')           ],\n  [ 'references',     require('./rules_core/references')     ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'footnote_tail',  require('./rules_core/footnote_tail')  ],\n  [ 'abbr2',          require('./rules_core/abbr2')          ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ],\n  [ 'linkify',        require('./rules_core/linkify')        ]\n];\n\n/**\n * Class for top level (`core`) parser rules\n *\n * @api private\n */\n\nfunction Core() {\n  this.options = {};\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n/**\n * Process rules with the given `state`\n *\n * @param  {Object} `state`\n * @api private\n */\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\n/**\n * Expose `Core`\n */\n\nmodule.exports = Core;\n","'use strict';\n\nmodule.exports = function block(state) {\n\n  if (state.inlineMode) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.replace(/\\n/g, ' ').trim(),\n      level: 0,\n      lines: [ 0, 1 ],\n      children: []\n    });\n\n  } else {\n    state.block.parse(state.src, state.options, state.env, state.tokens);\n  }\n};\n","// Parse abbreviation definitions, i.e. `*[abbr]: description`\n//\n\n'use strict';\n\n\nvar StateInline    = require('../rules_inline/state_inline');\nvar parseLinkLabel = require('../helpers/parse_link_label');\n\n\nfunction parseAbbr(str, parserInline, options, env) {\n  var state, labelEnd, pos, max, label, title;\n\n  if (str.charCodeAt(0) !== 0x2A/* * */) { return -1; }\n  if (str.charCodeAt(1) !== 0x5B/* [ */) { return -1; }\n\n  if (str.indexOf(']:') === -1) { return -1; }\n\n  state = new StateInline(str, parserInline, options, env, []);\n  labelEnd = parseLinkLabel(state, 1);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\n\n  max = state.posMax;\n\n  // abbr title is always one line, so looking for ending \"\\n\" here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x0A) { break; }\n  }\n\n  label = str.slice(2, labelEnd);\n  title = str.slice(labelEnd + 2, pos).trim();\n  if (title.length === 0) { return -1; }\n  if (!env.abbreviations) { env.abbreviations = {}; }\n  // prepend ':' to avoid conflict with Object.prototype members\n  if (typeof env.abbreviations[':' + label] === 'undefined') {\n    env.abbreviations[':' + label] = title;\n  }\n\n  return pos;\n}\n\nmodule.exports = function abbr(state) {\n  var tokens = state.tokens, i, l, content, pos;\n\n  if (state.inlineMode) {\n    return;\n  }\n\n  // Parse inlines\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i - 1].type === 'paragraph_open' &&\n        tokens[i].type === 'inline' &&\n        tokens[i + 1].type === 'paragraph_close') {\n\n      content = tokens[i].content;\n      while (content.length) {\n        pos = parseAbbr(content, state.inline, state.options, state.env);\n        if (pos < 0) { break; }\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n};\n","'use strict';\n\n\nvar StateInline          = require('../rules_inline/state_inline');\nvar parseLinkLabel       = require('../helpers/parse_link_label');\nvar parseLinkDestination = require('../helpers/parse_link_destination');\nvar parseLinkTitle       = require('../helpers/parse_link_title');\nvar normalizeReference   = require('../helpers/normalize_reference');\n\n\nfunction parseReference(str, parser, options, env) {\n  var state, labelEnd, pos, max, code, start, href, title, label;\n\n  if (str.charCodeAt(0) !== 0x5B/* [ */) { return -1; }\n\n  if (str.indexOf(']:') === -1) { return -1; }\n\n  state = new StateInline(str, parser, options, env, []);\n  labelEnd = parseLinkLabel(state, 0);\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return -1; }\n\n  max = state.posMax;\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n    if (code !== 0x20 && code !== 0x0A) { break; }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  if (!parseLinkDestination(state, pos)) { return -1; }\n  href = state.linkContent;\n  pos = state.pos;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (pos = pos + 1; pos < max; pos++) {\n    code = state.src.charCodeAt(pos);\n    if (code !== 0x20 && code !== 0x0A) { break; }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n    title = state.linkContent;\n    pos = state.pos;\n  } else {\n    title = '';\n    pos = start;\n  }\n\n  // ensure that the end of the line is empty\n  while (pos < max && state.src.charCodeAt(pos) === 0x20/* space */) { pos++; }\n  if (pos < max && state.src.charCodeAt(pos) !== 0x0A) { return -1; }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (typeof env.references[label] === 'undefined') {\n    env.references[label] = { title: title, href: href };\n  }\n\n  return pos;\n}\n\n\nmodule.exports = function references(state) {\n  var tokens = state.tokens, i, l, content, pos;\n\n  state.env.references = state.env.references || {};\n\n  if (state.inlineMode) {\n    return;\n  }\n\n  // Scan definitions in paragraph inlines\n  for (i = 1, l = tokens.length - 1; i < l; i++) {\n    if (tokens[i].type === 'inline' &&\n        tokens[i - 1].type === 'paragraph_open' &&\n        tokens[i + 1].type === 'paragraph_close') {\n\n      content = tokens[i].content;\n      while (content.length) {\n        pos = parseReference(content, state.inline, state.options, state.env);\n        if (pos < 0) { break; }\n        content = content.slice(pos).trim();\n      }\n\n      tokens[i].content = content;\n      if (!content.length) {\n        tokens[i - 1].tight = true;\n        tokens[i + 1].tight = true;\n      }\n    }\n  }\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.inline.parse(tok.content, state.options, state.env, tok.children);\n    }\n  }\n};\n","'use strict';\n\n\nmodule.exports = function footnote_block(state) {\n  var i, l, j, t, lastParagraph, list, tokens, current, currentLabel,\n      level = 0,\n      insideRef = false,\n      refTokens = {};\n\n  if (!state.env.footnotes) { return; }\n\n  state.tokens = state.tokens.filter(function(tok) {\n    if (tok.type === 'footnote_reference_open') {\n      insideRef = true;\n      current = [];\n      currentLabel = tok.label;\n      return false;\n    }\n    if (tok.type === 'footnote_reference_close') {\n      insideRef = false;\n      // prepend ':' to avoid conflict with Object.prototype members\n      refTokens[':' + currentLabel] = current;\n      return false;\n    }\n    if (insideRef) { current.push(tok); }\n    return !insideRef;\n  });\n\n  if (!state.env.footnotes.list) { return; }\n  list = state.env.footnotes.list;\n\n  state.tokens.push({\n    type: 'footnote_block_open',\n    level: level++\n  });\n  for (i = 0, l = list.length; i < l; i++) {\n    state.tokens.push({\n      type: 'footnote_open',\n      id: i,\n      level: level++\n    });\n\n    if (list[i].tokens) {\n      tokens = [];\n      tokens.push({\n        type: 'paragraph_open',\n        tight: false,\n        level: level++\n      });\n      tokens.push({\n        type: 'inline',\n        content: '',\n        level: level,\n        children: list[i].tokens\n      });\n      tokens.push({\n        type: 'paragraph_close',\n        tight: false,\n        level: --level\n      });\n    } else if (list[i].label) {\n      tokens = refTokens[':' + list[i].label];\n    }\n\n    state.tokens = state.tokens.concat(tokens);\n    if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n      lastParagraph = state.tokens.pop();\n    } else {\n      lastParagraph = null;\n    }\n\n    t = list[i].count > 0 ? list[i].count : 1;\n    for (j = 0; j < t; j++) {\n      state.tokens.push({\n        type: 'footnote_anchor',\n        id: i,\n        subId: j,\n        level: level\n      });\n    }\n\n    if (lastParagraph) {\n      state.tokens.push(lastParagraph);\n    }\n\n    state.tokens.push({\n      type: 'footnote_close',\n      level: --level\n    });\n  }\n  state.tokens.push({\n    type: 'footnote_block_close',\n    level: --level\n  });\n};\n","// Enclose abbreviations in <abbr> tags\n//\n'use strict';\n\n\nvar PUNCT_CHARS = ' \\n()[]\\'\".,!?-';\n\n\n// from Google closure library\n// http://closure-library.googlecode.com/git-history/docs/local_closure_goog_string_string.js.source.html#line1021\nfunction regEscape(s) {\n  return s.replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, '\\\\$1');\n}\n\n\nmodule.exports = function abbr2(state) {\n  var i, j, l, tokens, token, text, nodes, pos, level, reg, m, regText,\n      blockTokens = state.tokens;\n\n  if (!state.env.abbreviations) { return; }\n  if (!state.env.abbrRegExp) {\n    regText = '(^|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])'\n            + '(' + Object.keys(state.env.abbreviations).map(function (x) {\n                      return x.substr(1);\n                    }).sort(function (a, b) {\n                      return b.length - a.length;\n                    }).map(regEscape).join('|') + ')'\n            + '($|[' + PUNCT_CHARS.split('').map(regEscape).join('') + '])';\n    state.env.abbrRegExp = new RegExp(regText, 'g');\n  }\n  reg = state.env.abbrRegExp;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') { continue; }\n    tokens = blockTokens[j].children;\n\n    // We scan from the end, to keep position when new tags added.\n    for (i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n      if (token.type !== 'text') { continue; }\n\n      pos = 0;\n      text = token.content;\n      reg.lastIndex = 0;\n      level = token.level;\n      nodes = [];\n\n      while ((m = reg.exec(text))) {\n        if (reg.lastIndex > pos) {\n          nodes.push({\n            type: 'text',\n            content: text.slice(pos, m.index + m[1].length),\n            level: level\n          });\n        }\n\n        nodes.push({\n          type: 'abbr_open',\n          title: state.env.abbreviations[':' + m[2]],\n          level: level++\n        });\n        nodes.push({\n          type: 'text',\n          content: m[2],\n          level: level\n        });\n        nodes.push({\n          type: 'abbr_close',\n          level: --level\n        });\n        pos = reg.lastIndex - m[3].length;\n      }\n\n      if (!nodes.length) { continue; }\n\n      if (pos < text.length) {\n        nodes.push({\n          type: 'text',\n          content: text.slice(pos),\n          level: level\n        });\n      }\n\n      // replace current node\n      blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n    }\n  }\n};\n","// Simple typographical replacements\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  'c': '©',\n  'r': '®',\n  'p': '§',\n  'tm': '™'\n};\n\nfunction replaceScopedAbbr(str) {\n  if (str.indexOf('(') < 0) { return str; }\n\n  return str.replace(SCOPED_ABBR_RE, function(match, name) {\n    return SCOPED_ABBR[name.toLowerCase()];\n  });\n}\n\n\nmodule.exports = function replace(state) {\n  var i, token, text, inlineTokens, blkIdx;\n\n  if (!state.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    inlineTokens = state.tokens[blkIdx].children;\n\n    for (i = inlineTokens.length - 1; i >= 0; i--) {\n      token = inlineTokens[i];\n      if (token.type === 'text') {\n        text = token.content;\n\n        text = replaceScopedAbbr(text);\n\n        if (RARE_RE.test(text)) {\n          text = text\n            .replace(/\\+-/g, '±')\n            // .., ..., ....... -> …\n            // but ?..... & !..... -> ?.. & !..\n            .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n            .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n            // em-dash\n            .replace(/(^|[^-])---([^-]|$)/mg, '$1\\u2014$2')\n            // en-dash\n            .replace(/(^|\\s)--(\\s|$)/mg, '$1\\u2013$2')\n            .replace(/(^|[^-\\s])--([^-\\s]|$)/mg, '$1\\u2013$2');\n        }\n\n        token.content = text;\n      }\n    }\n  }\n};\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar PUNCT_RE = /[-\\s()\\[\\]]/;\nvar APOSTROPHE = '’';\n\n// This function returns true if the character at `pos`\n// could be inside a word.\nfunction isLetter(str, pos) {\n  if (pos < 0 || pos >= str.length) { return false; }\n  return !PUNCT_RE.test(str[pos]);\n}\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var i, token, text, t, pos, max, thisLevel, lastSpace, nextSpace, item,\n      canOpen, canClose, j, isSingle, blkIdx, tokens,\n      stack;\n\n  if (!state.options.typographer) { return; }\n\n  stack = [];\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    tokens = state.tokens[blkIdx].children;\n    stack.length = 0;\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n\n      if (token.type !== 'text' || QUOTE_TEST_RE.test(token.text)) { continue; }\n\n      thisLevel = tokens[i].level;\n\n      for (j = stack.length - 1; j >= 0; j--) {\n        if (stack[j].level <= thisLevel) { break; }\n      }\n      stack.length = j + 1;\n\n      text = token.content;\n      pos = 0;\n      max = text.length;\n\n      /*eslint no-labels:0,block-scoped-var:0*/\n      OUTER:\n      while (pos < max) {\n        QUOTE_RE.lastIndex = pos;\n        t = QUOTE_RE.exec(text);\n        if (!t) { break; }\n\n        lastSpace = !isLetter(text, t.index - 1);\n        pos = t.index + 1;\n        isSingle = (t[0] === \"'\");\n        nextSpace = !isLetter(text, pos);\n\n        if (!nextSpace && !lastSpace) {\n          // middle of word\n          if (isSingle) {\n            token.content = replaceAt(token.content, t.index, APOSTROPHE);\n          }\n          continue;\n        }\n\n        canOpen = !nextSpace;\n        canClose = !lastSpace;\n\n        if (canClose) {\n          // this could be a closing quote, rewind the stack to get a match\n          for (j = stack.length - 1; j >= 0; j--) {\n            item = stack[j];\n            if (stack[j].level < thisLevel) { break; }\n            if (item.single === isSingle && stack[j].level === thisLevel) {\n              item = stack[j];\n              if (isSingle) {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[2]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[3]);\n              } else {\n                tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, state.options.quotes[0]);\n                token.content = replaceAt(token.content, t.index, state.options.quotes[1]);\n              }\n              stack.length = j;\n              continue OUTER;\n            }\n          }\n        }\n\n        if (canOpen) {\n          stack.push({\n            token: i,\n            pos: t.index,\n            single: isSingle,\n            level: thisLevel\n          });\n        } else if (canClose && isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n      }\n    }\n  }\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `inline.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar Autolinker = require('autolinker');\n\n\nvar LINK_SCAN_RE = /www|@|\\:\\/\\//;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n// Stupid fabric to avoid singletons, for thread safety.\n// Required for engines like Nashorn.\n//\nfunction createLinkifier() {\n  var links = [];\n  var autolinker = new Autolinker({\n    stripPrefix: false,\n    url: true,\n    email: true,\n    twitter: false,\n    replaceFn: function (linker, match) {\n      // Only collect matched strings but don't change anything.\n      switch (match.getType()) {\n        /*eslint default-case:0*/\n        case 'url':\n          links.push({\n            text: match.matchedText,\n            url: match.getUrl()\n          });\n          break;\n        case 'email':\n          links.push({\n            text: match.matchedText,\n            // normalize email protocol\n            url: 'mailto:' + match.getEmail().replace(/^mailto:/i, '')\n          });\n          break;\n      }\n      return false;\n    }\n  });\n\n  return {\n    links: links,\n    autolinker: autolinker\n  };\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, text, nodes, ln, pos, level, htmlLinkLevel,\n      blockTokens = state.tokens,\n      linkifier = null, links, autolinker;\n\n  if (!state.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') { continue; }\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      token = tokens[i];\n\n      // Skip content of markdown links\n      if (token.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== token.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (token.type === 'htmltag') {\n        if (isLinkOpen(token.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(token.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (token.type === 'text' && LINK_SCAN_RE.test(token.content)) {\n\n        // Init linkifier in lazy manner, only if required.\n        if (!linkifier) {\n          linkifier = createLinkifier();\n          links = linkifier.links;\n          autolinker = linkifier.autolinker;\n        }\n\n        text = token.content;\n        links.length = 0;\n        autolinker.link(text);\n\n        if (!links.length) { continue; }\n\n        // Now split string to nodes\n        nodes = [];\n        level = token.level;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          if (!state.inline.validateLink(links[ln].url)) { continue; }\n\n          pos = text.indexOf(links[ln].text);\n\n          if (pos) {\n            level = level;\n            nodes.push({\n              type: 'text',\n              content: text.slice(0, pos),\n              level: level\n            });\n          }\n          nodes.push({\n            type: 'link_open',\n            href: links[ln].url,\n            title: '',\n            level: level++\n          });\n          nodes.push({\n            type: 'text',\n            content: links[ln].text,\n            level: level\n          });\n          nodes.push({\n            type: 'link_close',\n            level: --level\n          });\n          text = text.slice(pos + links[ln].text.length);\n        }\n        if (text.length) {\n          nodes.push({\n            type: 'text',\n            content: text,\n            level: level\n          });\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = [].concat(tokens.slice(0, i), nodes, tokens.slice(i + 1));\n      }\n    }\n  }\n};\n","/*!\n * Autolinker.js\n * 0.28.1\n *\n * Copyright(c) 2016 Gregory Jacobs <greg@greg-jacobs.com>\n * MIT License\n *\n * https://github.com/gregjacobs/Autolinker.js\n */\n;(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.Autolinker = factory();\n  }\n}(this, function() {\n/**\n * @class Autolinker\n * @extends Object\n *\n * Utility class used to process a given string of text, and wrap the matches in\n * the appropriate anchor (&lt;a&gt;) tags to turn them into links.\n *\n * Any of the configuration options may be provided in an Object (map) provided\n * to the Autolinker constructor, which will configure how the {@link #link link()}\n * method will process the links.\n *\n * For example:\n *\n *     var autolinker = new Autolinker( {\n *         newWindow : false,\n *         truncate  : 30\n *     } );\n *\n *     var html = autolinker.link( \"Joe went to www.yahoo.com\" );\n *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'\n *\n *\n * The {@link #static-link static link()} method may also be used to inline\n * options into a single call, which may be more convenient for one-off uses.\n * For example:\n *\n *     var html = Autolinker.link( \"Joe went to www.yahoo.com\", {\n *         newWindow : false,\n *         truncate  : 30\n *     } );\n *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'\n *\n *\n * ## Custom Replacements of Links\n *\n * If the configuration options do not provide enough flexibility, a {@link #replaceFn}\n * may be provided to fully customize the output of Autolinker. This function is\n * called once for each URL/Email/Phone#/Twitter Handle/Hashtag match that is\n * encountered.\n *\n * For example:\n *\n *     var input = \"...\";  // string with URLs, Email Addresses, Phone #s, Twitter Handles, and Hashtags\n *\n *     var linkedText = Autolinker.link( input, {\n *         replaceFn : function( autolinker, match ) {\n *             console.log( \"href = \", match.getAnchorHref() );\n *             console.log( \"text = \", match.getAnchorText() );\n *\n *             switch( match.getType() ) {\n *                 case 'url' :\n *                     console.log( \"url: \", match.getUrl() );\n *\n *                     if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {\n *                         var tag = autolinker.getTagBuilder().build( match );  // returns an `Autolinker.HtmlTag` instance, which provides mutator methods for easy changes\n *                         tag.setAttr( 'rel', 'nofollow' );\n *                         tag.addClass( 'external-link' );\n *\n *                         return tag;\n *\n *                     } else {\n *                         return true;  // let Autolinker perform its normal anchor tag replacement\n *                     }\n *\n *                 case 'email' :\n *                     var email = match.getEmail();\n *                     console.log( \"email: \", email );\n *\n *                     if( email === \"my@own.address\" ) {\n *                         return false;  // don't auto-link this particular email address; leave as-is\n *                     } else {\n *                         return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)\n *                     }\n *\n *                 case 'phone' :\n *                     var phoneNumber = match.getPhoneNumber();\n *                     console.log( phoneNumber );\n *\n *                     return '<a href=\"http://newplace.to.link.phone.numbers.to/\">' + phoneNumber + '</a>';\n *\n *                 case 'twitter' :\n *                     var twitterHandle = match.getTwitterHandle();\n *                     console.log( twitterHandle );\n *\n *                     return '<a href=\"http://newplace.to.link.twitter.handles.to/\">' + twitterHandle + '</a>';\n *\n *                 case 'hashtag' :\n *                     var hashtag = match.getHashtag();\n *                     console.log( hashtag );\n *\n *                     return '<a href=\"http://newplace.to.link.hashtag.handles.to/\">' + hashtag + '</a>';\n *             }\n *         }\n *     } );\n *\n *\n * The function may return the following values:\n *\n * - `true` (Boolean): Allow Autolinker to replace the match as it normally\n *   would.\n * - `false` (Boolean): Do not replace the current match at all - leave as-is.\n * - Any String: If a string is returned from the function, the string will be\n *   used directly as the replacement HTML for the match.\n * - An {@link Autolinker.HtmlTag} instance, which can be used to build/modify\n *   an HTML tag before writing out its HTML text.\n *\n * @constructor\n * @param {Object} [cfg] The configuration options for the Autolinker instance,\n *   specified in an Object (map).\n */\nvar Autolinker = function( cfg ) {\n\tcfg = cfg || {};\n\n\tthis.version = Autolinker.version;\n\n\tthis.urls = this.normalizeUrlsCfg( cfg.urls );\n\tthis.email = typeof cfg.email === 'boolean' ? cfg.email : true;\n\tthis.twitter = typeof cfg.twitter === 'boolean' ? cfg.twitter : true;\n\tthis.phone = typeof cfg.phone === 'boolean' ? cfg.phone : true;\n\tthis.hashtag = cfg.hashtag || false;\n\tthis.newWindow = typeof cfg.newWindow === 'boolean' ? cfg.newWindow : true;\n\tthis.stripPrefix = typeof cfg.stripPrefix === 'boolean' ? cfg.stripPrefix : true;\n\n\t// Validate the value of the `hashtag` cfg.\n\tvar hashtag = this.hashtag;\n\tif( hashtag !== false && hashtag !== 'twitter' && hashtag !== 'facebook' && hashtag !== 'instagram' ) {\n\t\tthrow new Error( \"invalid `hashtag` cfg - see docs\" );\n\t}\n\n\tthis.truncate = this.normalizeTruncateCfg( cfg.truncate );\n\tthis.className = cfg.className || '';\n\tthis.replaceFn = cfg.replaceFn || null;\n\n\tthis.htmlParser = null;\n\tthis.matchers = null;\n\tthis.tagBuilder = null;\n};\n\n\n\n/**\n * Automatically links URLs, Email addresses, Phone Numbers, Twitter handles,\n * and Hashtags found in the given chunk of HTML. Does not link URLs found\n * within HTML tags.\n *\n * For instance, if given the text: `You should go to http://www.yahoo.com`,\n * then the result will be `You should go to &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`\n *\n * Example:\n *\n *     var linkedText = Autolinker.link( \"Go to google.com\", { newWindow: false } );\n *     // Produces: \"Go to <a href=\"http://google.com\">google.com</a>\"\n *\n * @static\n * @param {String} textOrHtml The HTML or text to find matches within (depending\n *   on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #twitter},\n *   and {@link #hashtag} options are enabled).\n * @param {Object} [options] Any of the configuration options for the Autolinker\n *   class, specified in an Object (map). See the class description for an\n *   example call.\n * @return {String} The HTML text, with matches automatically linked.\n */\nAutolinker.link = function( textOrHtml, options ) {\n\tvar autolinker = new Autolinker( options );\n\treturn autolinker.link( textOrHtml );\n};\n\n\n/**\n * @static\n * @property {String} version (readonly)\n *\n * The Autolinker version number in the form major.minor.patch\n *\n * Ex: 0.25.1\n */\nAutolinker.version = '0.28.1';\n\n\nAutolinker.prototype = {\n\tconstructor : Autolinker,  // fix constructor property\n\n\t/**\n\t * @cfg {Boolean/Object} [urls=true]\n\t *\n\t * `true` if URLs should be automatically linked, `false` if they should not\n\t * be.\n\t *\n\t * This option also accepts an Object form with 3 properties, to allow for\n\t * more customization of what exactly gets linked. All default to `true`:\n\t *\n\t * @param {Boolean} schemeMatches `true` to match URLs found prefixed with a\n\t *   scheme, i.e. `http://google.com`, or `other+scheme://google.com`,\n\t *   `false` to prevent these types of matches.\n\t * @param {Boolean} wwwMatches `true` to match urls found prefixed with\n\t *   `'www.'`, i.e. `www.google.com`. `false` to prevent these types of\n\t *   matches. Note that if the URL had a prefixed scheme, and\n\t *   `schemeMatches` is true, it will still be linked.\n\t * @param {Boolean} tldMatches `true` to match URLs with known top level\n\t *   domains (.com, .net, etc.) that are not prefixed with a scheme or\n\t *   `'www.'`. This option attempts to match anything that looks like a URL\n\t *   in the given text. Ex: `google.com`, `asdf.org/?page=1`, etc. `false`\n\t *   to prevent these types of matches.\n\t */\n\n\t/**\n\t * @cfg {Boolean} [email=true]\n\t *\n\t * `true` if email addresses should be automatically linked, `false` if they\n\t * should not be.\n\t */\n\n\t/**\n\t * @cfg {Boolean} [twitter=true]\n\t *\n\t * `true` if Twitter handles (\"@example\") should be automatically linked,\n\t * `false` if they should not be.\n\t */\n\n\t/**\n\t * @cfg {Boolean} [phone=true]\n\t *\n\t * `true` if Phone numbers (\"(555)555-5555\") should be automatically linked,\n\t * `false` if they should not be.\n\t */\n\n\t/**\n\t * @cfg {Boolean/String} [hashtag=false]\n\t *\n\t * A string for the service name to have hashtags (ex: \"#myHashtag\")\n\t * auto-linked to. The currently-supported values are:\n\t *\n\t * - 'twitter'\n\t * - 'facebook'\n\t * - 'instagram'\n\t *\n\t * Pass `false` to skip auto-linking of hashtags.\n\t */\n\n\t/**\n\t * @cfg {Boolean} [newWindow=true]\n\t *\n\t * `true` if the links should open in a new window, `false` otherwise.\n\t */\n\n\t/**\n\t * @cfg {Boolean} [stripPrefix=true]\n\t *\n\t * `true` if 'http://' or 'https://' and/or the 'www.' should be stripped\n\t * from the beginning of URL links' text, `false` otherwise.\n\t */\n\n\t/**\n\t * @cfg {Number/Object} [truncate=0]\n\t *\n\t * ## Number Form\n\t *\n\t * A number for how many characters matched text should be truncated to\n\t * inside the text of a link. If the matched text is over this number of\n\t * characters, it will be truncated to this length by adding a two period\n\t * ellipsis ('..') to the end of the string.\n\t *\n\t * For example: A url like 'http://www.yahoo.com/some/long/path/to/a/file'\n\t * truncated to 25 characters might look something like this:\n\t * 'yahoo.com/some/long/pat..'\n\t *\n\t * Example Usage:\n\t *\n\t *     truncate: 25\n\t *\n\t *\n\t *  Defaults to `0` for \"no truncation.\"\n\t *\n\t *\n\t * ## Object Form\n\t *\n\t * An Object may also be provided with two properties: `length` (Number) and\n\t * `location` (String). `location` may be one of the following: 'end'\n\t * (default), 'middle', or 'smart'.\n\t *\n\t * Example Usage:\n\t *\n\t *     truncate: { length: 25, location: 'middle' }\n\t *\n\t * @cfg {Number} [truncate.length=0] How many characters to allow before\n\t *   truncation will occur. Defaults to `0` for \"no truncation.\"\n\t * @cfg {\"end\"/\"middle\"/\"smart\"} [truncate.location=\"end\"]\n\t *\n\t * - 'end' (default): will truncate up to the number of characters, and then\n\t *   add an ellipsis at the end. Ex: 'yahoo.com/some/long/pat..'\n\t * - 'middle': will truncate and add the ellipsis in the middle. Ex:\n\t *   'yahoo.com/s..th/to/a/file'\n\t * - 'smart': for URLs where the algorithm attempts to strip out unnecessary\n\t *   parts first (such as the 'www.', then URL scheme, hash, etc.),\n\t *   attempting to make the URL human-readable before looking for a good\n\t *   point to insert the ellipsis if it is still too long. Ex:\n\t *   'yahoo.com/some..to/a/file'. For more details, see\n\t *   {@link Autolinker.truncate.TruncateSmart}.\n\t */\n\n\t/**\n\t * @cfg {String} className\n\t *\n\t * A CSS class name to add to the generated links. This class will be added\n\t * to all links, as well as this class plus match suffixes for styling\n\t * url/email/phone/twitter/hashtag links differently.\n\t *\n\t * For example, if this config is provided as \"myLink\", then:\n\t *\n\t * - URL links will have the CSS classes: \"myLink myLink-url\"\n\t * - Email links will have the CSS classes: \"myLink myLink-email\", and\n\t * - Twitter links will have the CSS classes: \"myLink myLink-twitter\"\n\t * - Phone links will have the CSS classes: \"myLink myLink-phone\"\n\t * - Hashtag links will have the CSS classes: \"myLink myLink-hashtag\"\n\t */\n\n\t/**\n\t * @cfg {Function} replaceFn\n\t *\n\t * A function to individually process each match found in the input string.\n\t *\n\t * See the class's description for usage.\n\t *\n\t * This function is called with the following parameters:\n\t *\n\t * @cfg {Autolinker} replaceFn.autolinker The Autolinker instance, which may\n\t *   be used to retrieve child objects from (such as the instance's\n\t *   {@link #getTagBuilder tag builder}).\n\t * @cfg {Autolinker.match.Match} replaceFn.match The Match instance which\n\t *   can be used to retrieve information about the match that the `replaceFn`\n\t *   is currently processing. See {@link Autolinker.match.Match} subclasses\n\t *   for details.\n\t */\n\n\n\t/**\n\t * @property {String} version (readonly)\n\t *\n\t * The Autolinker version number in the form major.minor.patch\n\t *\n\t * Ex: 0.25.1\n\t */\n\n\t/**\n\t * @private\n\t * @property {Autolinker.htmlParser.HtmlParser} htmlParser\n\t *\n\t * The HtmlParser instance used to skip over HTML tags, while finding text\n\t * nodes to process. This is lazily instantiated in the {@link #getHtmlParser}\n\t * method.\n\t */\n\n\t/**\n\t * @private\n\t * @property {Autolinker.matcher.Matcher[]} matchers\n\t *\n\t * The {@link Autolinker.matcher.Matcher} instances for this Autolinker\n\t * instance.\n\t *\n\t * This is lazily created in {@link #getMatchers}.\n\t */\n\n\t/**\n\t * @private\n\t * @property {Autolinker.AnchorTagBuilder} tagBuilder\n\t *\n\t * The AnchorTagBuilder instance used to build match replacement anchor tags.\n\t * Note: this is lazily instantiated in the {@link #getTagBuilder} method.\n\t */\n\n\n\t/**\n\t * Normalizes the {@link #urls} config into an Object with 3 properties:\n\t * `schemeMatches`, `wwwMatches`, and `tldMatches`, all Booleans.\n\t *\n\t * See {@link #urls} config for details.\n\t *\n\t * @private\n\t * @param {Boolean/Object} urls\n\t * @return {Object}\n\t */\n\tnormalizeUrlsCfg : function( urls ) {\n\t\tif( urls == null ) urls = true;  // default to `true`\n\n\t\tif( typeof urls === 'boolean' ) {\n\t\t\treturn { schemeMatches: urls, wwwMatches: urls, tldMatches: urls };\n\n\t\t} else {  // object form\n\t\t\treturn {\n\t\t\t\tschemeMatches : typeof urls.schemeMatches === 'boolean' ? urls.schemeMatches : true,\n\t\t\t\twwwMatches    : typeof urls.wwwMatches === 'boolean'    ? urls.wwwMatches    : true,\n\t\t\t\ttldMatches    : typeof urls.tldMatches === 'boolean'    ? urls.tldMatches    : true\n\t\t\t};\n\t\t}\n\t},\n\n\n\t/**\n\t * Normalizes the {@link #truncate} config into an Object with 2 properties:\n\t * `length` (Number), and `location` (String).\n\t *\n\t * See {@link #truncate} config for details.\n\t *\n\t * @private\n\t * @param {Number/Object} truncate\n\t * @return {Object}\n\t */\n\tnormalizeTruncateCfg : function( truncate ) {\n\t\tif( typeof truncate === 'number' ) {\n\t\t\treturn { length: truncate, location: 'end' };\n\n\t\t} else {  // object, or undefined/null\n\t\t\treturn Autolinker.Util.defaults( truncate || {}, {\n\t\t\t\tlength   : Number.POSITIVE_INFINITY,\n\t\t\t\tlocation : 'end'\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Parses the input `textOrHtml` looking for URLs, email addresses, phone\n\t * numbers, username handles, and hashtags (depending on the configuration\n\t * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n\t * objects describing those matches.\n\t *\n\t * This method is used by the {@link #link} method, but can also be used to\n\t * simply do parsing of the input in order to discover what kinds of links\n\t * there are and how many.\n\t *\n\t * @param {String} textOrHtml The HTML or text to find matches within\n\t *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},\n\t *   {@link #twitter}, and {@link #hashtag} options are enabled).\n\t * @return {Autolinker.match.Match[]} The array of Matches found in the\n\t *   given input `textOrHtml`.\n\t */\n\tparse : function( textOrHtml ) {\n\t\tvar htmlParser = this.getHtmlParser(),\n\t\t    htmlNodes = htmlParser.parse( textOrHtml ),\n\t\t    anchorTagStackCount = 0,  // used to only process text around anchor tags, and any inner text/html they may have;\n\t\t    matches = [];\n\n\t\t// Find all matches within the `textOrHtml` (but not matches that are\n\t\t// already nested within <a> tags)\n\t\tfor( var i = 0, len = htmlNodes.length; i < len; i++ ) {\n\t\t\tvar node = htmlNodes[ i ],\n\t\t\t    nodeType = node.getType();\n\n\t\t\tif( nodeType === 'element' && node.getTagName() === 'a' ) {  // Process HTML anchor element nodes in the input `textOrHtml` to find out when we're within an <a> tag\n\t\t\t\tif( !node.isClosing() ) {  // it's the start <a> tag\n\t\t\t\t\tanchorTagStackCount++;\n\t\t\t\t} else {  // it's the end </a> tag\n\t\t\t\t\tanchorTagStackCount = Math.max( anchorTagStackCount - 1, 0 );  // attempt to handle extraneous </a> tags by making sure the stack count never goes below 0\n\t\t\t\t}\n\n\t\t\t} else if( nodeType === 'text' && anchorTagStackCount === 0 ) {  // Process text nodes that are not within an <a> tag\n\t\t\t\tvar textNodeMatches = this.parseText( node.getText(), node.getOffset() );\n\n\t\t\t\tmatches.push.apply( matches, textNodeMatches );\n\t\t\t}\n\t\t}\n\n\n\t\t// After we have found all matches, remove subsequent matches that\n\t\t// overlap with a previous match. This can happen for instance with URLs,\n\t\t// where the url 'google.com/#link' would match '#link' as a hashtag.\n\t\tmatches = this.compactMatches( matches );\n\n\t\t// And finally, remove matches for match types that have been turned\n\t\t// off. We needed to have all match types turned on initially so that\n\t\t// things like hashtags could be filtered out if they were really just\n\t\t// part of a URL match (for instance, as a named anchor).\n\t\tmatches = this.removeUnwantedMatches( matches );\n\n\t\treturn matches;\n\t},\n\n\n\t/**\n\t * After we have found all matches, we need to remove subsequent matches\n\t * that overlap with a previous match. This can happen for instance with\n\t * URLs, where the url 'google.com/#link' would match '#link' as a hashtag.\n\t *\n\t * @private\n\t * @param {Autolinker.match.Match[]} matches\n\t * @return {Autolinker.match.Match[]}\n\t */\n\tcompactMatches : function( matches ) {\n\t\t// First, the matches need to be sorted in order of offset\n\t\tmatches.sort( function( a, b ) { return a.getOffset() - b.getOffset(); } );\n\n\t\tfor( var i = 0; i < matches.length - 1; i++ ) {\n\t\t\tvar match = matches[ i ],\n\t\t\t    endIdx = match.getOffset() + match.getMatchedText().length;\n\n\t\t\t// Remove subsequent matches that overlap with the current match\n\t\t\twhile( i + 1 < matches.length && matches[ i + 1 ].getOffset() <= endIdx ) {\n\t\t\t\tmatches.splice( i + 1, 1 );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\n\t/**\n\t * Removes matches for matchers that were turned off in the options. For\n\t * example, if {@link #hashtag hashtags} were not to be matched, we'll\n\t * remove them from the `matches` array here.\n\t *\n\t * @private\n\t * @param {Autolinker.match.Match[]} matches The array of matches to remove\n\t *   the unwanted matches from. Note: this array is mutated for the\n\t *   removals.\n\t * @return {Autolinker.match.Match[]} The mutated input `matches` array.\n\t */\n\tremoveUnwantedMatches : function( matches ) {\n\t\tvar remove = Autolinker.Util.remove;\n\n\t\tif( !this.hashtag ) remove( matches, function( match ) { return match.getType() === 'hashtag'; } );\n\t\tif( !this.email )   remove( matches, function( match ) { return match.getType() === 'email'; } );\n\t\tif( !this.phone )   remove( matches, function( match ) { return match.getType() === 'phone'; } );\n\t\tif( !this.twitter ) remove( matches, function( match ) { return match.getType() === 'twitter'; } );\n\t\tif( !this.urls.schemeMatches ) {\n\t\t\tremove( matches, function( m ) { return m.getType() === 'url' && m.getUrlMatchType() === 'scheme'; } );\n\t\t}\n\t\tif( !this.urls.wwwMatches ) {\n\t\t\tremove( matches, function( m ) { return m.getType() === 'url' && m.getUrlMatchType() === 'www'; } );\n\t\t}\n\t\tif( !this.urls.tldMatches ) {\n\t\t\tremove( matches, function( m ) { return m.getType() === 'url' && m.getUrlMatchType() === 'tld'; } );\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\n\t/**\n\t * Parses the input `text` looking for URLs, email addresses, phone\n\t * numbers, username handles, and hashtags (depending on the configuration\n\t * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n\t * objects describing those matches.\n\t *\n\t * This method processes a **non-HTML string**, and is used to parse and\n\t * match within the text nodes of an HTML string. This method is used\n\t * internally by {@link #parse}.\n\t *\n\t * @private\n\t * @param {String} text The text to find matches within (depending on if the\n\t *   {@link #urls}, {@link #email}, {@link #phone}, {@link #twitter}, and\n\t *   {@link #hashtag} options are enabled). This must be a non-HTML string.\n\t * @param {Number} [offset=0] The offset of the text node within the\n\t *   original string. This is used when parsing with the {@link #parse}\n\t *   method to generate correct offsets within the {@link Autolinker.match.Match}\n\t *   instances, but may be omitted if calling this method publicly.\n\t * @return {Autolinker.match.Match[]} The array of Matches found in the\n\t *   given input `text`.\n\t */\n\tparseText : function( text, offset ) {\n\t\toffset = offset || 0;\n\t\tvar matchers = this.getMatchers(),\n\t\t    matches = [];\n\n\t\tfor( var i = 0, numMatchers = matchers.length; i < numMatchers; i++ ) {\n\t\t\tvar textMatches = matchers[ i ].parseMatches( text );\n\n\t\t\t// Correct the offset of each of the matches. They are originally\n\t\t\t// the offset of the match within the provided text node, but we\n\t\t\t// need to correct them to be relative to the original HTML input\n\t\t\t// string (i.e. the one provided to #parse).\n\t\t\tfor( var j = 0, numTextMatches = textMatches.length; j < numTextMatches; j++ ) {\n\t\t\t\ttextMatches[ j ].setOffset( offset + textMatches[ j ].getOffset() );\n\t\t\t}\n\n\t\t\tmatches.push.apply( matches, textMatches );\n\t\t}\n\t\treturn matches;\n\t},\n\n\n\t/**\n\t * Automatically links URLs, Email addresses, Phone numbers, Twitter\n\t * handles, and Hashtags found in the given chunk of HTML. Does not link\n\t * URLs found within HTML tags.\n\t *\n\t * For instance, if given the text: `You should go to http://www.yahoo.com`,\n\t * then the result will be `You should go to\n\t * &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`\n\t *\n\t * This method finds the text around any HTML elements in the input\n\t * `textOrHtml`, which will be the text that is processed. Any original HTML\n\t * elements will be left as-is, as well as the text that is already wrapped\n\t * in anchor (&lt;a&gt;) tags.\n\t *\n\t * @param {String} textOrHtml The HTML or text to autolink matches within\n\t *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},\n\t *   {@link #twitter}, and {@link #hashtag} options are enabled).\n\t * @return {String} The HTML, with matches automatically linked.\n\t */\n\tlink : function( textOrHtml ) {\n\t\tif( !textOrHtml ) { return \"\"; }  // handle `null` and `undefined`\n\n\t\tvar matches = this.parse( textOrHtml ),\n\t\t\tnewHtml = [],\n\t\t\tlastIndex = 0;\n\n\t\tfor( var i = 0, len = matches.length; i < len; i++ ) {\n\t\t\tvar match = matches[ i ];\n\n\t\t\tnewHtml.push( textOrHtml.substring( lastIndex, match.getOffset() ) );\n\t\t\tnewHtml.push( this.createMatchReturnVal( match ) );\n\n\t\t\tlastIndex = match.getOffset() + match.getMatchedText().length;\n\t\t}\n\t\tnewHtml.push( textOrHtml.substring( lastIndex ) );  // handle the text after the last match\n\n\t\treturn newHtml.join( '' );\n\t},\n\n\n\t/**\n\t * Creates the return string value for a given match in the input string.\n\t *\n\t * This method handles the {@link #replaceFn}, if one was provided.\n\t *\n\t * @private\n\t * @param {Autolinker.match.Match} match The Match object that represents\n\t *   the match.\n\t * @return {String} The string that the `match` should be replaced with.\n\t *   This is usually the anchor tag string, but may be the `matchStr` itself\n\t *   if the match is not to be replaced.\n\t */\n\tcreateMatchReturnVal : function( match ) {\n\t\t// Handle a custom `replaceFn` being provided\n\t\tvar replaceFnResult;\n\t\tif( this.replaceFn ) {\n\t\t\treplaceFnResult = this.replaceFn.call( this, this, match );  // Autolinker instance is the context, and the first arg\n\t\t}\n\n\t\tif( typeof replaceFnResult === 'string' ) {\n\t\t\treturn replaceFnResult;  // `replaceFn` returned a string, use that\n\n\t\t} else if( replaceFnResult === false ) {\n\t\t\treturn match.getMatchedText();  // no replacement for the match\n\n\t\t} else if( replaceFnResult instanceof Autolinker.HtmlTag ) {\n\t\t\treturn replaceFnResult.toAnchorString();\n\n\t\t} else {  // replaceFnResult === true, or no/unknown return value from function\n\t\t\t// Perform Autolinker's default anchor tag generation\n\t\t\tvar anchorTag = match.buildTag();  // returns an Autolinker.HtmlTag instance\n\n\t\t\treturn anchorTag.toAnchorString();\n\t\t}\n\t},\n\n\n\t/**\n\t * Lazily instantiates and returns the {@link #htmlParser} instance for this\n\t * Autolinker instance.\n\t *\n\t * @protected\n\t * @return {Autolinker.htmlParser.HtmlParser}\n\t */\n\tgetHtmlParser : function() {\n\t\tvar htmlParser = this.htmlParser;\n\n\t\tif( !htmlParser ) {\n\t\t\thtmlParser = this.htmlParser = new Autolinker.htmlParser.HtmlParser();\n\t\t}\n\n\t\treturn htmlParser;\n\t},\n\n\n\t/**\n\t * Lazily instantiates and returns the {@link Autolinker.matcher.Matcher}\n\t * instances for this Autolinker instance.\n\t *\n\t * @protected\n\t * @return {Autolinker.matcher.Matcher[]}\n\t */\n\tgetMatchers : function() {\n\t\tif( !this.matchers ) {\n\t\t\tvar matchersNs = Autolinker.matcher,\n\t\t\t    tagBuilder = this.getTagBuilder();\n\n\t\t\tvar matchers = [\n\t\t\t\tnew matchersNs.Hashtag( { tagBuilder: tagBuilder, serviceName: this.hashtag } ),\n\t\t\t\tnew matchersNs.Email( { tagBuilder: tagBuilder } ),\n\t\t\t\tnew matchersNs.Phone( { tagBuilder: tagBuilder } ),\n\t\t\t\tnew matchersNs.Twitter( { tagBuilder: tagBuilder } ),\n\t\t\t\tnew matchersNs.Url( { tagBuilder: tagBuilder, stripPrefix: this.stripPrefix } )\n\t\t\t];\n\n\t\t\treturn ( this.matchers = matchers );\n\n\t\t} else {\n\t\t\treturn this.matchers;\n\t\t}\n\t},\n\n\n\t/**\n\t * Returns the {@link #tagBuilder} instance for this Autolinker instance, lazily instantiating it\n\t * if it does not yet exist.\n\t *\n\t * This method may be used in a {@link #replaceFn} to generate the {@link Autolinker.HtmlTag HtmlTag} instance that\n\t * Autolinker would normally generate, and then allow for modifications before returning it. For example:\n\t *\n\t *     var html = Autolinker.link( \"Test google.com\", {\n\t *         replaceFn : function( autolinker, match ) {\n\t *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance\n\t *             tag.setAttr( 'rel', 'nofollow' );\n\t *\n\t *             return tag;\n\t *         }\n\t *     } );\n\t *\n\t *     // generated html:\n\t *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n\t *\n\t * @return {Autolinker.AnchorTagBuilder}\n\t */\n\tgetTagBuilder : function() {\n\t\tvar tagBuilder = this.tagBuilder;\n\n\t\tif( !tagBuilder ) {\n\t\t\ttagBuilder = this.tagBuilder = new Autolinker.AnchorTagBuilder( {\n\t\t\t\tnewWindow   : this.newWindow,\n\t\t\t\ttruncate    : this.truncate,\n\t\t\t\tclassName   : this.className\n\t\t\t} );\n\t\t}\n\n\t\treturn tagBuilder;\n\t}\n\n};\n\n\n// Autolinker Namespaces\n\nAutolinker.match = {};\nAutolinker.matcher = {};\nAutolinker.htmlParser = {};\nAutolinker.truncate = {};\n\n/*global Autolinker */\n/*jshint eqnull:true, boss:true */\n/**\n * @class Autolinker.Util\n * @singleton\n *\n * A few utility methods for Autolinker.\n */\nAutolinker.Util = {\n\n\t/**\n\t * @property {Function} abstractMethod\n\t *\n\t * A function object which represents an abstract method.\n\t */\n\tabstractMethod : function() { throw \"abstract\"; },\n\n\n\t/**\n\t * @private\n\t * @property {RegExp} trimRegex\n\t *\n\t * The regular expression used to trim the leading and trailing whitespace\n\t * from a string.\n\t */\n\ttrimRegex : /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\n\t/**\n\t * Assigns (shallow copies) the properties of `src` onto `dest`.\n\t *\n\t * @param {Object} dest The destination object.\n\t * @param {Object} src The source object.\n\t * @return {Object} The destination object (`dest`)\n\t */\n\tassign : function( dest, src ) {\n\t\tfor( var prop in src ) {\n\t\t\tif( src.hasOwnProperty( prop ) ) {\n\t\t\t\tdest[ prop ] = src[ prop ];\n\t\t\t}\n\t\t}\n\n\t\treturn dest;\n\t},\n\n\n\t/**\n\t * Assigns (shallow copies) the properties of `src` onto `dest`, if the\n\t * corresponding property on `dest` === `undefined`.\n\t *\n\t * @param {Object} dest The destination object.\n\t * @param {Object} src The source object.\n\t * @return {Object} The destination object (`dest`)\n\t */\n\tdefaults : function( dest, src ) {\n\t\tfor( var prop in src ) {\n\t\t\tif( src.hasOwnProperty( prop ) && dest[ prop ] === undefined ) {\n\t\t\t\tdest[ prop ] = src[ prop ];\n\t\t\t}\n\t\t}\n\n\t\treturn dest;\n\t},\n\n\n\t/**\n\t * Extends `superclass` to create a new subclass, adding the `protoProps` to the new subclass's prototype.\n\t *\n\t * @param {Function} superclass The constructor function for the superclass.\n\t * @param {Object} protoProps The methods/properties to add to the subclass's prototype. This may contain the\n\t *   special property `constructor`, which will be used as the new subclass's constructor function.\n\t * @return {Function} The new subclass function.\n\t */\n\textend : function( superclass, protoProps ) {\n\t\tvar superclassProto = superclass.prototype;\n\n\t\tvar F = function() {};\n\t\tF.prototype = superclassProto;\n\n\t\tvar subclass;\n\t\tif( protoProps.hasOwnProperty( 'constructor' ) ) {\n\t\t\tsubclass = protoProps.constructor;\n\t\t} else {\n\t\t\tsubclass = function() { superclassProto.constructor.apply( this, arguments ); };\n\t\t}\n\n\t\tvar subclassProto = subclass.prototype = new F();  // set up prototype chain\n\t\tsubclassProto.constructor = subclass;  // fix constructor property\n\t\tsubclassProto.superclass = superclassProto;\n\n\t\tdelete protoProps.constructor;  // don't re-assign constructor property to the prototype, since a new function may have been created (`subclass`), which is now already there\n\t\tAutolinker.Util.assign( subclassProto, protoProps );\n\n\t\treturn subclass;\n\t},\n\n\n\t/**\n\t * Truncates the `str` at `len - ellipsisChars.length`, and adds the `ellipsisChars` to the\n\t * end of the string (by default, two periods: '..'). If the `str` length does not exceed\n\t * `len`, the string will be returned unchanged.\n\t *\n\t * @param {String} str The string to truncate and add an ellipsis to.\n\t * @param {Number} truncateLen The length to truncate the string at.\n\t * @param {String} [ellipsisChars=..] The ellipsis character(s) to add to the end of `str`\n\t *   when truncated. Defaults to '..'\n\t */\n\tellipsis : function( str, truncateLen, ellipsisChars ) {\n\t\tif( str.length > truncateLen ) {\n\t\t\tellipsisChars = ( ellipsisChars == null ) ? '..' : ellipsisChars;\n\t\t\tstr = str.substring( 0, truncateLen - ellipsisChars.length ) + ellipsisChars;\n\t\t}\n\t\treturn str;\n\t},\n\n\n\t/**\n\t * Supports `Array.prototype.indexOf()` functionality for old IE (IE8 and below).\n\t *\n\t * @param {Array} arr The array to find an element of.\n\t * @param {*} element The element to find in the array, and return the index of.\n\t * @return {Number} The index of the `element`, or -1 if it was not found.\n\t */\n\tindexOf : function( arr, element ) {\n\t\tif( Array.prototype.indexOf ) {\n\t\t\treturn arr.indexOf( element );\n\n\t\t} else {\n\t\t\tfor( var i = 0, len = arr.length; i < len; i++ ) {\n\t\t\t\tif( arr[ i ] === element ) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t},\n\n\n\t/**\n\t * Removes array elements based on a filtering function. Mutates the input\n\t * array.\n\t *\n\t * Using this instead of the ES5 Array.prototype.filter() function, to allow\n\t * Autolinker compatibility with IE8, and also to prevent creating many new\n\t * arrays in memory for filtering.\n\t *\n\t * @param {Array} arr The array to remove elements from. This array is\n\t *   mutated.\n\t * @param {Function} fn A function which should return `true` to\n\t *   remove an element.\n\t * @return {Array} The mutated input `arr`.\n\t */\n\tremove : function( arr, fn ) {\n\t\tfor( var i = arr.length - 1; i >= 0; i-- ) {\n\t\t\tif( fn( arr[ i ] ) === true ) {\n\t\t\t\tarr.splice( i, 1 );\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Performs the functionality of what modern browsers do when `String.prototype.split()` is called\n\t * with a regular expression that contains capturing parenthesis.\n\t *\n\t * For example:\n\t *\n\t *     // Modern browsers:\n\t *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', ',', 'b', ',', 'c' ]\n\t *\n\t *     // Old IE (including IE8):\n\t *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', 'b', 'c' ]\n\t *\n\t * This method emulates the functionality of modern browsers for the old IE case.\n\t *\n\t * @param {String} str The string to split.\n\t * @param {RegExp} splitRegex The regular expression to split the input `str` on. The splitting\n\t *   character(s) will be spliced into the array, as in the \"modern browsers\" example in the\n\t *   description of this method.\n\t *   Note #1: the supplied regular expression **must** have the 'g' flag specified.\n\t *   Note #2: for simplicity's sake, the regular expression does not need\n\t *   to contain capturing parenthesis - it will be assumed that any match has them.\n\t * @return {String[]} The split array of strings, with the splitting character(s) included.\n\t */\n\tsplitAndCapture : function( str, splitRegex ) {\n\t\tif( !splitRegex.global ) throw new Error( \"`splitRegex` must have the 'g' flag set\" );\n\n\t\tvar result = [],\n\t\t    lastIdx = 0,\n\t\t    match;\n\n\t\twhile( match = splitRegex.exec( str ) ) {\n\t\t\tresult.push( str.substring( lastIdx, match.index ) );\n\t\t\tresult.push( match[ 0 ] );  // push the splitting char(s)\n\n\t\t\tlastIdx = match.index + match[ 0 ].length;\n\t\t}\n\t\tresult.push( str.substring( lastIdx ) );\n\n\t\treturn result;\n\t},\n\n\n\t/**\n\t * Trims the leading and trailing whitespace from a string.\n\t *\n\t * @param {String} str The string to trim.\n\t * @return {String}\n\t */\n\ttrim : function( str ) {\n\t\treturn str.replace( this.trimRegex, '' );\n\t}\n\n};\n/*global Autolinker */\n/*jshint boss:true */\n/**\n * @class Autolinker.HtmlTag\n * @extends Object\n *\n * Represents an HTML tag, which can be used to easily build/modify HTML tags programmatically.\n *\n * Autolinker uses this abstraction to create HTML tags, and then write them out as strings. You may also use\n * this class in your code, especially within a {@link Autolinker#replaceFn replaceFn}.\n *\n * ## Examples\n *\n * Example instantiation:\n *\n *     var tag = new Autolinker.HtmlTag( {\n *         tagName : 'a',\n *         attrs   : { 'href': 'http://google.com', 'class': 'external-link' },\n *         innerHtml : 'Google'\n *     } );\n *\n *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>\n *\n *     // Individual accessor methods\n *     tag.getTagName();                 // 'a'\n *     tag.getAttr( 'href' );            // 'http://google.com'\n *     tag.hasClass( 'external-link' );  // true\n *\n *\n * Using mutator methods (which may be used in combination with instantiation config properties):\n *\n *     var tag = new Autolinker.HtmlTag();\n *     tag.setTagName( 'a' );\n *     tag.setAttr( 'href', 'http://google.com' );\n *     tag.addClass( 'external-link' );\n *     tag.setInnerHtml( 'Google' );\n *\n *     tag.getTagName();                 // 'a'\n *     tag.getAttr( 'href' );            // 'http://google.com'\n *     tag.hasClass( 'external-link' );  // true\n *\n *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>\n *\n *\n * ## Example use within a {@link Autolinker#replaceFn replaceFn}\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( autolinker, match ) {\n *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance, configured with the Match's href and anchor text\n *             tag.setAttr( 'rel', 'nofollow' );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n *\n *\n * ## Example use with a new tag for the replacement\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( autolinker, match ) {\n *             var tag = new Autolinker.HtmlTag( {\n *                 tagName : 'button',\n *                 attrs   : { 'title': 'Load URL: ' + match.getAnchorHref() },\n *                 innerHtml : 'Load URL: ' + match.getAnchorText()\n *             } );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <button title=\"Load URL: http://google.com\">Load URL: google.com</button>\n */\nAutolinker.HtmlTag = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {String} tagName\n\t *\n\t * The tag name. Ex: 'a', 'button', etc.\n\t *\n\t * Not required at instantiation time, but should be set using {@link #setTagName} before {@link #toAnchorString}\n\t * is executed.\n\t */\n\n\t/**\n\t * @cfg {Object.<String, String>} attrs\n\t *\n\t * An key/value Object (map) of attributes to create the tag with. The keys are the attribute names, and the\n\t * values are the attribute values.\n\t */\n\n\t/**\n\t * @cfg {String} innerHtml\n\t *\n\t * The inner HTML for the tag.\n\t *\n\t * Note the camel case name on `innerHtml`. Acronyms are camelCased in this utility (such as not to run into the acronym\n\t * naming inconsistency that the DOM developers created with `XMLHttpRequest`). You may alternatively use {@link #innerHTML}\n\t * if you prefer, but this one is recommended.\n\t */\n\n\t/**\n\t * @cfg {String} innerHTML\n\t *\n\t * Alias of {@link #innerHtml}, accepted for consistency with the browser DOM api, but prefer the camelCased version\n\t * for acronym names.\n\t */\n\n\n\t/**\n\t * @protected\n\t * @property {RegExp} whitespaceRegex\n\t *\n\t * Regular expression used to match whitespace in a string of CSS classes.\n\t */\n\twhitespaceRegex : /\\s+/,\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} [cfg] The configuration properties for this class, in an Object (map)\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.Util.assign( this, cfg );\n\n\t\tthis.innerHtml = this.innerHtml || this.innerHTML;  // accept either the camelCased form or the fully capitalized acronym\n\t},\n\n\n\t/**\n\t * Sets the tag name that will be used to generate the tag with.\n\t *\n\t * @param {String} tagName\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetTagName : function( tagName ) {\n\t\tthis.tagName = tagName;\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves the tag name.\n\t *\n\t * @return {String}\n\t */\n\tgetTagName : function() {\n\t\treturn this.tagName || \"\";\n\t},\n\n\n\t/**\n\t * Sets an attribute on the HtmlTag.\n\t *\n\t * @param {String} attrName The attribute name to set.\n\t * @param {String} attrValue The attribute value to set.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetAttr : function( attrName, attrValue ) {\n\t\tvar tagAttrs = this.getAttrs();\n\t\ttagAttrs[ attrName ] = attrValue;\n\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves an attribute from the HtmlTag. If the attribute does not exist, returns `undefined`.\n\t *\n\t * @param {String} attrName The attribute name to retrieve.\n\t * @return {String} The attribute's value, or `undefined` if it does not exist on the HtmlTag.\n\t */\n\tgetAttr : function( attrName ) {\n\t\treturn this.getAttrs()[ attrName ];\n\t},\n\n\n\t/**\n\t * Sets one or more attributes on the HtmlTag.\n\t *\n\t * @param {Object.<String, String>} attrs A key/value Object (map) of the attributes to set.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetAttrs : function( attrs ) {\n\t\tvar tagAttrs = this.getAttrs();\n\t\tAutolinker.Util.assign( tagAttrs, attrs );\n\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves the attributes Object (map) for the HtmlTag.\n\t *\n\t * @return {Object.<String, String>} A key/value object of the attributes for the HtmlTag.\n\t */\n\tgetAttrs : function() {\n\t\treturn this.attrs || ( this.attrs = {} );\n\t},\n\n\n\t/**\n\t * Sets the provided `cssClass`, overwriting any current CSS classes on the HtmlTag.\n\t *\n\t * @param {String} cssClass One or more space-separated CSS classes to set (overwrite).\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetClass : function( cssClass ) {\n\t\treturn this.setAttr( 'class', cssClass );\n\t},\n\n\n\t/**\n\t * Convenience method to add one or more CSS classes to the HtmlTag. Will not add duplicate CSS classes.\n\t *\n\t * @param {String} cssClass One or more space-separated CSS classes to add.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\taddClass : function( cssClass ) {\n\t\tvar classAttr = this.getClass(),\n\t\t    whitespaceRegex = this.whitespaceRegex,\n\t\t    indexOf = Autolinker.Util.indexOf,  // to support IE8 and below\n\t\t    classes = ( !classAttr ) ? [] : classAttr.split( whitespaceRegex ),\n\t\t    newClasses = cssClass.split( whitespaceRegex ),\n\t\t    newClass;\n\n\t\twhile( newClass = newClasses.shift() ) {\n\t\t\tif( indexOf( classes, newClass ) === -1 ) {\n\t\t\t\tclasses.push( newClass );\n\t\t\t}\n\t\t}\n\n\t\tthis.getAttrs()[ 'class' ] = classes.join( \" \" );\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Convenience method to remove one or more CSS classes from the HtmlTag.\n\t *\n\t * @param {String} cssClass One or more space-separated CSS classes to remove.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tremoveClass : function( cssClass ) {\n\t\tvar classAttr = this.getClass(),\n\t\t    whitespaceRegex = this.whitespaceRegex,\n\t\t    indexOf = Autolinker.Util.indexOf,  // to support IE8 and below\n\t\t    classes = ( !classAttr ) ? [] : classAttr.split( whitespaceRegex ),\n\t\t    removeClasses = cssClass.split( whitespaceRegex ),\n\t\t    removeClass;\n\n\t\twhile( classes.length && ( removeClass = removeClasses.shift() ) ) {\n\t\t\tvar idx = indexOf( classes, removeClass );\n\t\t\tif( idx !== -1 ) {\n\t\t\t\tclasses.splice( idx, 1 );\n\t\t\t}\n\t\t}\n\n\t\tthis.getAttrs()[ 'class' ] = classes.join( \" \" );\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Convenience method to retrieve the CSS class(es) for the HtmlTag, which will each be separated by spaces when\n\t * there are multiple.\n\t *\n\t * @return {String}\n\t */\n\tgetClass : function() {\n\t\treturn this.getAttrs()[ 'class' ] || \"\";\n\t},\n\n\n\t/**\n\t * Convenience method to check if the tag has a CSS class or not.\n\t *\n\t * @param {String} cssClass The CSS class to check for.\n\t * @return {Boolean} `true` if the HtmlTag has the CSS class, `false` otherwise.\n\t */\n\thasClass : function( cssClass ) {\n\t\treturn ( ' ' + this.getClass() + ' ' ).indexOf( ' ' + cssClass + ' ' ) !== -1;\n\t},\n\n\n\t/**\n\t * Sets the inner HTML for the tag.\n\t *\n\t * @param {String} html The inner HTML to set.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetInnerHtml : function( html ) {\n\t\tthis.innerHtml = html;\n\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves the inner HTML for the tag.\n\t *\n\t * @return {String}\n\t */\n\tgetInnerHtml : function() {\n\t\treturn this.innerHtml || \"\";\n\t},\n\n\n\t/**\n\t * Override of superclass method used to generate the HTML string for the tag.\n\t *\n\t * @return {String}\n\t */\n\ttoAnchorString : function() {\n\t\tvar tagName = this.getTagName(),\n\t\t    attrsStr = this.buildAttrsStr();\n\n\t\tattrsStr = ( attrsStr ) ? ' ' + attrsStr : '';  // prepend a space if there are actually attributes\n\n\t\treturn [ '<', tagName, attrsStr, '>', this.getInnerHtml(), '</', tagName, '>' ].join( \"\" );\n\t},\n\n\n\t/**\n\t * Support method for {@link #toAnchorString}, returns the string space-separated key=\"value\" pairs, used to populate\n\t * the stringified HtmlTag.\n\t *\n\t * @protected\n\t * @return {String} Example return: `attr1=\"value1\" attr2=\"value2\"`\n\t */\n\tbuildAttrsStr : function() {\n\t\tif( !this.attrs ) return \"\";  // no `attrs` Object (map) has been set, return empty string\n\n\t\tvar attrs = this.getAttrs(),\n\t\t    attrsArr = [];\n\n\t\tfor( var prop in attrs ) {\n\t\t\tif( attrs.hasOwnProperty( prop ) ) {\n\t\t\t\tattrsArr.push( prop + '=\"' + attrs[ prop ] + '\"' );\n\t\t\t}\n\t\t}\n\t\treturn attrsArr.join( \" \" );\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.RegexLib\n * @singleton\n *\n * Builds and stores a library of the common regular expressions used by the\n * Autolinker utility.\n *\n * Other regular expressions may exist ad-hoc, but these are generally the\n * regular expressions that are shared between source files.\n */\nAutolinker.RegexLib = (function() {\n\n\t/**\n\t * The string form of a regular expression that would match all of the\n\t * alphabetic (\"letter\") chars in the unicode character set when placed in a\n\t * RegExp character class (`[]`). This includes all international alphabetic\n\t * characters.\n\t *\n\t * These would be the characters matched by unicode regex engines `\\p{L}`\n\t * escape (\"all letters\").\n\t *\n\t * Taken from the XRegExp library: http://xregexp.com/\n\t * Specifically: http://xregexp.com/v/3.0.0/unicode-categories.js\n\t *\n\t * @private\n\t * @type {String}\n\t */\n\tvar alphaCharsStr = 'A-Za-z\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC';\n\n\t/**\n\t * The string form of a regular expression that would match all of the\n\t * decimal number chars in the unicode character set when placed in a RegExp\n\t * character class (`[]`).\n\t *\n\t * These would be the characters matched by unicode regex engines `\\p{Nd}`\n\t * escape (\"all decimal numbers\")\n\t *\n\t * Taken from the XRegExp library: http://xregexp.com/\n\t * Specifically: http://xregexp.com/v/3.0.0/unicode-categories.js\n\t *\n\t * @private\n\t * @type {String}\n\t */\n\tvar decimalNumbersStr = '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19';\n\n\n\t// See documentation below\n\tvar alphaNumericCharsStr = alphaCharsStr + decimalNumbersStr;\n\n\n\t// See documentation below\n\tvar domainNameRegex = new RegExp( '[' + alphaNumericCharsStr + '.\\\\-]*[' + alphaNumericCharsStr + '\\\\-]' );\n\n\n\t// See documentation below\n\tvar tldRegex = /(?:travelersinsurance|sandvikcoromant|kerryproperties|cancerresearch|weatherchannel|kerrylogistics|spreadbetting|international|wolterskluwer|lifeinsurance|construction|pamperedchef|scholarships|versicherung|bridgestone|creditunion|kerryhotels|investments|productions|blackfriday|enterprises|lamborghini|photography|motorcycles|williamhill|playstation|contractors|barclaycard|accountants|redumbrella|engineering|management|telefonica|protection|consulting|tatamotors|creditcard|vlaanderen|schaeffler|associates|properties|foundation|republican|bnpparibas|boehringer|eurovision|extraspace|industries|immobilien|university|technology|volkswagen|healthcare|restaurant|cuisinella|vistaprint|apartments|accountant|travelers|homedepot|institute|vacations|furniture|fresenius|insurance|christmas|bloomberg|solutions|barcelona|firestone|financial|kuokgroup|fairwinds|community|passagens|goldpoint|equipment|lifestyle|yodobashi|aquarelle|marketing|analytics|education|amsterdam|statefarm|melbourne|allfinanz|directory|microsoft|stockholm|montblanc|accenture|lancaster|landrover|everbank|istanbul|graphics|grainger|ipiranga|softbank|attorney|pharmacy|saarland|catering|airforce|yokohama|mortgage|frontier|mutuelle|stcgroup|memorial|pictures|football|symantec|cipriani|ventures|telecity|cityeats|verisign|flsmidth|boutique|cleaning|firmdale|clinique|clothing|redstone|infiniti|deloitte|feedback|services|broadway|plumbing|commbank|training|barclays|exchange|computer|brussels|software|delivery|barefoot|builders|business|bargains|engineer|holdings|download|security|helsinki|lighting|movistar|discount|hdfcbank|supplies|marriott|property|diamonds|capetown|partners|democrat|jpmorgan|bradesco|budapest|rexroth|zuerich|shriram|academy|science|support|youtube|singles|surgery|alibaba|statoil|dentist|schwarz|android|cruises|cricket|digital|markets|starhub|systems|courses|coupons|netbank|country|domains|corsica|network|neustar|realtor|lincoln|limited|schmidt|yamaxun|cooking|contact|auction|spiegel|liaison|leclerc|latrobe|lasalle|abogado|compare|lanxess|exposed|express|company|cologne|college|avianca|lacaixa|fashion|recipes|ferrero|komatsu|storage|wanggou|clubmed|sandvik|fishing|fitness|bauhaus|kitchen|flights|florist|flowers|watches|weather|temasek|samsung|bentley|forsale|channel|theater|frogans|theatre|okinawa|website|tickets|jewelry|gallery|tiffany|iselect|shiksha|brother|organic|wedding|genting|toshiba|origins|philips|hyundai|hotmail|hoteles|hosting|rentals|windows|cartier|bugatti|holiday|careers|whoswho|hitachi|panerai|caravan|reviews|guitars|capital|trading|hamburg|hangout|finance|stream|family|abbott|health|review|travel|report|hermes|hiphop|gratis|career|toyota|hockey|dating|repair|google|social|soccer|reisen|global|otsuka|giving|unicom|casino|photos|center|broker|rocher|orange|bostik|garden|insure|ryukyu|bharti|safety|physio|sakura|oracle|online|jaguar|gallup|piaget|tienda|futbol|pictet|joburg|webcam|berlin|office|juegos|kaufen|chanel|chrome|xihuan|church|tennis|circle|kinder|flickr|bayern|claims|clinic|viajes|nowruz|xperia|norton|yachts|studio|coffee|camera|sanofi|nissan|author|expert|events|comsec|lawyer|tattoo|viking|estate|villas|condos|realty|yandex|energy|emerck|virgin|vision|durban|living|school|coupon|london|taobao|natura|taipei|nagoya|luxury|walter|aramco|sydney|madrid|credit|maison|makeup|schule|market|anquan|direct|design|swatch|suzuki|alsace|vuelos|dental|alipay|voyage|shouji|voting|airtel|mutual|degree|supply|agency|museum|mobily|dealer|monash|select|mormon|active|moscow|racing|datsun|quebec|nissay|rodeo|email|gifts|works|photo|chloe|edeka|cheap|earth|vista|tushu|koeln|glass|shoes|globo|tunes|gmail|nokia|space|kyoto|black|ricoh|seven|lamer|sener|epson|cisco|praxi|trust|citic|crown|shell|lease|green|legal|lexus|ninja|tatar|gripe|nikon|group|video|wales|autos|gucci|party|nexus|guide|linde|adult|parts|amica|lixil|boats|azure|loans|locus|cymru|lotte|lotto|stada|click|poker|quest|dabur|lupin|nadex|paris|faith|dance|canon|place|gives|trade|skype|rocks|mango|cloud|boots|smile|final|swiss|homes|honda|media|horse|cards|deals|watch|bosch|house|pizza|miami|osaka|tours|total|xerox|coach|sucks|style|delta|toray|iinet|tools|money|codes|beats|tokyo|salon|archi|movie|baidu|study|actor|yahoo|store|apple|world|forex|today|bible|tmall|tirol|irish|tires|forum|reise|vegas|vodka|sharp|omega|weber|jetzt|audio|promo|build|bingo|chase|gallo|drive|dubai|rehab|press|solar|sale|beer|bbva|bank|band|auto|sapo|sarl|saxo|audi|asia|arte|arpa|army|yoga|ally|zara|scor|scot|sexy|seat|zero|seek|aero|adac|zone|aarp|maif|meet|meme|menu|surf|mini|mobi|mtpc|porn|desi|star|ltda|name|talk|navy|love|loan|live|link|news|limo|like|spot|life|nico|lidl|lgbt|land|taxi|team|tech|kred|kpmg|sony|song|kiwi|kddi|jprs|jobs|sohu|java|itau|tips|info|immo|icbc|hsbc|town|host|page|toys|here|help|pars|haus|guru|guge|tube|goog|golf|gold|sncf|gmbh|gift|ggee|gent|gbiz|game|vana|pics|fund|ford|ping|pink|fish|film|fast|farm|play|fans|fail|plus|skin|pohl|fage|moda|post|erni|dvag|prod|doha|prof|docs|viva|diet|luxe|site|dell|sina|dclk|show|qpon|date|vote|cyou|voto|read|coop|cool|wang|club|city|chat|cern|cash|reit|rent|casa|cars|care|camp|rest|call|cafe|weir|wien|rich|wiki|buzz|wine|book|bond|room|work|rsvp|shia|ruhr|blue|bing|shaw|bike|safe|xbox|best|pwc|mtn|lds|aig|boo|fyi|nra|nrw|ntt|car|gal|obi|zip|aeg|vin|how|one|ong|onl|dad|ooo|bet|esq|org|htc|bar|uol|ibm|ovh|gdn|ice|icu|uno|gea|ifm|bot|top|wtf|lol|day|pet|eus|wtc|ubs|tvs|aco|ing|ltd|ink|tab|abb|afl|cat|int|pid|pin|bid|cba|gle|com|cbn|ads|man|wed|ceb|gmo|sky|ist|gmx|tui|mba|fan|ski|iwc|app|pro|med|ceo|jcb|jcp|goo|dev|men|aaa|meo|pub|jlc|bom|jll|gop|jmp|mil|got|gov|win|jot|mma|joy|trv|red|cfa|cfd|bio|moe|moi|mom|ren|biz|aws|xin|bbc|dnp|buy|kfh|mov|thd|xyz|fit|kia|rio|rip|kim|dog|vet|nyc|bcg|mtr|bcn|bms|bmw|run|bzh|rwe|tel|stc|axa|kpn|fly|krd|cab|bnl|foo|crs|eat|tci|sap|srl|nec|sas|net|cal|sbs|sfr|sca|scb|csc|edu|new|xxx|hiv|fox|wme|ngo|nhk|vip|sex|frl|lat|yun|law|you|tax|soy|sew|om|ac|hu|se|sc|sg|sh|sb|sa|rw|ru|rs|ro|re|qa|py|si|pw|pt|ps|sj|sk|pr|pn|pm|pl|sl|sm|pk|sn|ph|so|pg|pf|pe|pa|zw|nz|nu|nr|np|no|nl|ni|ng|nf|sr|ne|st|nc|na|mz|my|mx|mw|mv|mu|mt|ms|mr|mq|mp|mo|su|mn|mm|ml|mk|mh|mg|me|sv|md|mc|sx|sy|ma|ly|lv|sz|lu|lt|ls|lr|lk|li|lc|lb|la|tc|kz|td|ky|kw|kr|kp|kn|km|ki|kh|tf|tg|th|kg|ke|jp|jo|jm|je|it|is|ir|tj|tk|tl|tm|iq|tn|to|io|in|im|il|ie|ad|sd|ht|hr|hn|hm|tr|hk|gy|gw|gu|gt|gs|gr|gq|tt|gp|gn|gm|gl|tv|gi|tw|tz|ua|gh|ug|uk|gg|gf|ge|gd|us|uy|uz|va|gb|ga|vc|ve|fr|fo|fm|fk|fj|vg|vi|fi|eu|et|es|er|eg|ee|ec|dz|do|dm|dk|vn|dj|de|cz|cy|cx|cw|vu|cv|cu|cr|co|cn|cm|cl|ck|ci|ch|cg|cf|cd|cc|ca|wf|bz|by|bw|bv|bt|bs|br|bo|bn|bm|bj|bi|ws|bh|bg|bf|be|bd|bb|ba|az|ax|aw|au|at|as|ye|ar|aq|ao|am|al|yt|ai|za|ag|af|ae|zm|id)\\b/;\n\n\n\treturn {\n\n\t\t/**\n\t\t * The string form of a regular expression that would match all of the\n\t\t * letters and decimal number chars in the unicode character set when placed\n\t\t * in a RegExp character class (`[]`).\n\t\t *\n\t\t * These would be the characters matched by unicode regex engines `[\\p{L}\\p{Nd}]`\n\t\t * escape (\"all letters and decimal numbers\")\n\t\t *\n\t\t * @property {String} alphaNumericCharsStr\n\t\t */\n\t\talphaNumericCharsStr : alphaNumericCharsStr,\n\n\t\t/**\n\t\t * A regular expression to match domain names of a URL or email address.\n\t\t * Ex: 'google', 'yahoo', 'some-other-company', etc.\n\t\t *\n\t\t * @property {RegExp} domainNameRegex\n\t\t */\n\t\tdomainNameRegex : domainNameRegex,\n\n\t\t/**\n\t\t * A regular expression to match top level domains (TLDs) for a URL or\n\t\t * email address. Ex: 'com', 'org', 'net', etc.\n\t\t *\n\t\t * @property {RegExp} tldRegex\n\t\t */\n\t\ttldRegex : tldRegex\n\n\t};\n\n\n}() );\n/*global Autolinker */\n/*jshint sub:true */\n/**\n * @protected\n * @class Autolinker.AnchorTagBuilder\n * @extends Object\n *\n * Builds anchor (&lt;a&gt;) tags for the Autolinker utility when a match is\n * found.\n *\n * Normally this class is instantiated, configured, and used internally by an\n * {@link Autolinker} instance, but may actually be retrieved in a {@link Autolinker#replaceFn replaceFn}\n * to create {@link Autolinker.HtmlTag HtmlTag} instances which may be modified\n * before returning from the {@link Autolinker#replaceFn replaceFn}. For\n * example:\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( autolinker, match ) {\n *             var tag = autolinker.getTagBuilder().build( match );  // returns an {@link Autolinker.HtmlTag} instance\n *             tag.setAttr( 'rel', 'nofollow' );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n */\nAutolinker.AnchorTagBuilder = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {Boolean} newWindow\n\t * @inheritdoc Autolinker#newWindow\n\t */\n\n\t/**\n\t * @cfg {Object} truncate\n\t * @inheritdoc Autolinker#truncate\n\t */\n\n\t/**\n\t * @cfg {String} className\n\t * @inheritdoc Autolinker#className\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.Util.assign( this, cfg );\n\t},\n\n\n\t/**\n\t * Generates the actual anchor (&lt;a&gt;) tag to use in place of the\n\t * matched text, via its `match` object.\n\t *\n\t * @param {Autolinker.match.Match} match The Match instance to generate an\n\t *   anchor tag from.\n\t * @return {Autolinker.HtmlTag} The HtmlTag instance for the anchor tag.\n\t */\n\tbuild : function( match ) {\n\t\treturn new Autolinker.HtmlTag( {\n\t\t\ttagName   : 'a',\n\t\t\tattrs     : this.createAttrs( match.getType(), match.getAnchorHref() ),\n\t\t\tinnerHtml : this.processAnchorText( match.getAnchorText() )\n\t\t} );\n\t},\n\n\n\t/**\n\t * Creates the Object (map) of the HTML attributes for the anchor (&lt;a&gt;)\n\t *   tag being generated.\n\t *\n\t * @protected\n\t * @param {\"url\"/\"email\"/\"phone\"/\"twitter\"/\"hashtag\"} matchType The type of\n\t *   match that an anchor tag is being generated for.\n\t * @param {String} anchorHref The href for the anchor tag.\n\t * @return {Object} A key/value Object (map) of the anchor tag's attributes.\n\t */\n\tcreateAttrs : function( matchType, anchorHref ) {\n\t\tvar attrs = {\n\t\t\t'href' : anchorHref  // we'll always have the `href` attribute\n\t\t};\n\n\t\tvar cssClass = this.createCssClass( matchType );\n\t\tif( cssClass ) {\n\t\t\tattrs[ 'class' ] = cssClass;\n\t\t}\n\t\tif( this.newWindow ) {\n\t\t\tattrs[ 'target' ] = \"_blank\";\n\t\t\tattrs[ 'rel' ] = \"noopener noreferrer\";\n\t\t}\n\n\t\treturn attrs;\n\t},\n\n\n\t/**\n\t * Creates the CSS class that will be used for a given anchor tag, based on\n\t * the `matchType` and the {@link #className} config.\n\t *\n\t * @private\n\t * @param {\"url\"/\"email\"/\"phone\"/\"twitter\"/\"hashtag\"} matchType The type of\n\t *   match that an anchor tag is being generated for.\n\t * @return {String} The CSS class string for the link. Example return:\n\t *   \"myLink myLink-url\". If no {@link #className} was configured, returns\n\t *   an empty string.\n\t */\n\tcreateCssClass : function( matchType ) {\n\t\tvar className = this.className;\n\n\t\tif( !className )\n\t\t\treturn \"\";\n\t\telse\n\t\t\treturn className + \" \" + className + \"-\" + matchType;  // ex: \"myLink myLink-url\", \"myLink myLink-email\", \"myLink myLink-phone\", \"myLink myLink-twitter\", or \"myLink myLink-hashtag\"\n\t},\n\n\n\t/**\n\t * Processes the `anchorText` by truncating the text according to the\n\t * {@link #truncate} config.\n\t *\n\t * @private\n\t * @param {String} anchorText The anchor tag's text (i.e. what will be\n\t *   displayed).\n\t * @return {String} The processed `anchorText`.\n\t */\n\tprocessAnchorText : function( anchorText ) {\n\t\tanchorText = this.doTruncate( anchorText );\n\n\t\treturn anchorText;\n\t},\n\n\n\t/**\n\t * Performs the truncation of the `anchorText` based on the {@link #truncate}\n\t * option. If the `anchorText` is longer than the length specified by the\n\t * {@link #truncate} option, the truncation is performed based on the\n\t * `location` property. See {@link #truncate} for details.\n\t *\n\t * @private\n\t * @param {String} anchorText The anchor tag's text (i.e. what will be\n\t *   displayed).\n\t * @return {String} The truncated anchor text.\n\t */\n\tdoTruncate : function( anchorText ) {\n\t\tvar truncate = this.truncate;\n\t\tif( !truncate || !truncate.length ) return anchorText;\n\n\t\tvar truncateLength = truncate.length,\n\t\t\ttruncateLocation = truncate.location;\n\n\t\tif( truncateLocation === 'smart' ) {\n\t\t\treturn Autolinker.truncate.TruncateSmart( anchorText, truncateLength, '..' );\n\n\t\t} else if( truncateLocation === 'middle' ) {\n\t\t\treturn Autolinker.truncate.TruncateMiddle( anchorText, truncateLength, '..' );\n\n\t\t} else {\n\t\t\treturn Autolinker.truncate.TruncateEnd( anchorText, truncateLength, '..' );\n\t\t}\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.HtmlParser\n * @extends Object\n *\n * An HTML parser implementation which simply walks an HTML string and returns an array of\n * {@link Autolinker.htmlParser.HtmlNode HtmlNodes} that represent the basic HTML structure of the input string.\n *\n * Autolinker uses this to only link URLs/emails/Twitter handles within text nodes, effectively ignoring / \"walking\n * around\" HTML tags.\n */\nAutolinker.htmlParser.HtmlParser = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @private\n\t * @property {RegExp} htmlRegex\n\t *\n\t * The regular expression used to pull out HTML tags from a string. Handles namespaced HTML tags and\n\t * attribute names, as specified by http://www.w3.org/TR/html-markup/syntax.html.\n\t *\n\t * Capturing groups:\n\t *\n\t * 1. The \"!DOCTYPE\" tag name, if a tag is a &lt;!DOCTYPE&gt; tag.\n\t * 2. If it is an end tag, this group will have the '/'.\n\t * 3. If it is a comment tag, this group will hold the comment text (i.e.\n\t *    the text inside the `&lt;!--` and `--&gt;`.\n\t * 4. The tag name for all tags (other than the &lt;!DOCTYPE&gt; tag)\n\t */\n\thtmlRegex : (function() {\n\t\tvar commentTagRegex = /!--([\\s\\S]+?)--/,\n\t\t    tagNameRegex = /[0-9a-zA-Z][0-9a-zA-Z:]*/,\n\t\t    attrNameRegex = /[^\\s\"'>\\/=\\x00-\\x1F\\x7F]+/,   // the unicode range accounts for excluding control chars, and the delete char\n\t\t    attrValueRegex = /(?:\"[^\"]*?\"|'[^']*?'|[^'\"=<>`\\s]+)/, // double quoted, single quoted, or unquoted attribute values\n\t\t    nameEqualsValueRegex = attrNameRegex.source + '(?:\\\\s*=\\\\s*' + attrValueRegex.source + ')?';  // optional '=[value]'\n\n\t\treturn new RegExp( [\n\t\t\t// for <!DOCTYPE> tag. Ex: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">)\n\t\t\t'(?:',\n\t\t\t\t'<(!DOCTYPE)',  // *** Capturing Group 1 - If it's a doctype tag\n\n\t\t\t\t\t// Zero or more attributes following the tag name\n\t\t\t\t\t'(?:',\n\t\t\t\t\t\t'\\\\s+',  // one or more whitespace chars before an attribute\n\n\t\t\t\t\t\t// Either:\n\t\t\t\t\t\t// A. attr=\"value\", or\n\t\t\t\t\t\t// B. \"value\" alone (To cover example doctype tag: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">)\n\t\t\t\t\t\t'(?:', nameEqualsValueRegex, '|', attrValueRegex.source + ')',\n\t\t\t\t\t')*',\n\t\t\t\t'>',\n\t\t\t')',\n\n\t\t\t'|',\n\n\t\t\t// All other HTML tags (i.e. tags that are not <!DOCTYPE>)\n\t\t\t'(?:',\n\t\t\t\t'<(/)?',  // Beginning of a tag or comment. Either '<' for a start tag, or '</' for an end tag.\n\t\t\t\t          // *** Capturing Group 2: The slash or an empty string. Slash ('/') for end tag, empty string for start or self-closing tag.\n\n\t\t\t\t\t'(?:',\n\t\t\t\t\t\tcommentTagRegex.source,  // *** Capturing Group 3 - A Comment Tag's Text\n\n\t\t\t\t\t\t'|',\n\n\t\t\t\t\t\t'(?:',\n\n\t\t\t\t\t\t\t// *** Capturing Group 4 - The tag name\n\t\t\t\t\t\t\t'(' + tagNameRegex.source + ')',\n\n\t\t\t\t\t\t\t// Zero or more attributes following the tag name\n\t\t\t\t\t\t\t'(?:',\n\t\t\t\t\t\t\t\t'(?:\\\\s+|\\\\b)',        // any number of whitespace chars before an attribute. NOTE: Using \\s* here throws Chrome into an infinite loop for some reason, so using \\s+|\\b instead\n\t\t\t\t\t\t\t\tnameEqualsValueRegex,  // attr=\"value\" (with optional =\"value\" part)\n\t\t\t\t\t\t\t')*',\n\n\t\t\t\t\t\t\t'\\\\s*/?',  // any trailing spaces and optional '/' before the closing '>'\n\n\t\t\t\t\t\t')',\n\t\t\t\t\t')',\n\t\t\t\t'>',\n\t\t\t')'\n\t\t].join( \"\" ), 'gi' );\n\t} )(),\n\n\t/**\n\t * @private\n\t * @property {RegExp} htmlCharacterEntitiesRegex\n\t *\n\t * The regular expression that matches common HTML character entities.\n\t *\n\t * Ignoring &amp; as it could be part of a query string -- handling it separately.\n\t */\n\thtmlCharacterEntitiesRegex: /(&nbsp;|&#160;|&lt;|&#60;|&gt;|&#62;|&quot;|&#34;|&#39;)/gi,\n\n\n\t/**\n\t * Parses an HTML string and returns a simple array of {@link Autolinker.htmlParser.HtmlNode HtmlNodes}\n\t * to represent the HTML structure of the input string.\n\t *\n\t * @param {String} html The HTML to parse.\n\t * @return {Autolinker.htmlParser.HtmlNode[]}\n\t */\n\tparse : function( html ) {\n\t\tvar htmlRegex = this.htmlRegex,\n\t\t    currentResult,\n\t\t    lastIndex = 0,\n\t\t    textAndEntityNodes,\n\t\t    nodes = [];  // will be the result of the method\n\n\t\twhile( ( currentResult = htmlRegex.exec( html ) ) !== null ) {\n\t\t\tvar tagText = currentResult[ 0 ],\n\t\t\t    commentText = currentResult[ 3 ], // if we've matched a comment\n\t\t\t    tagName = currentResult[ 1 ] || currentResult[ 4 ],  // The <!DOCTYPE> tag (ex: \"!DOCTYPE\"), or another tag (ex: \"a\" or \"img\")\n\t\t\t    isClosingTag = !!currentResult[ 2 ],\n\t\t\t    offset = currentResult.index,\n\t\t\t    inBetweenTagsText = html.substring( lastIndex, offset );\n\n\t\t\t// Push TextNodes and EntityNodes for any text found between tags\n\t\t\tif( inBetweenTagsText ) {\n\t\t\t\ttextAndEntityNodes = this.parseTextAndEntityNodes( lastIndex, inBetweenTagsText );\n\t\t\t\tnodes.push.apply( nodes, textAndEntityNodes );\n\t\t\t}\n\n\t\t\t// Push the CommentNode or ElementNode\n\t\t\tif( commentText ) {\n\t\t\t\tnodes.push( this.createCommentNode( offset, tagText, commentText ) );\n\t\t\t} else {\n\t\t\t\tnodes.push( this.createElementNode( offset, tagText, tagName, isClosingTag ) );\n\t\t\t}\n\n\t\t\tlastIndex = offset + tagText.length;\n\t\t}\n\n\t\t// Process any remaining text after the last HTML element. Will process all of the text if there were no HTML elements.\n\t\tif( lastIndex < html.length ) {\n\t\t\tvar text = html.substring( lastIndex );\n\n\t\t\t// Push TextNodes and EntityNodes for any text found between tags\n\t\t\tif( text ) {\n\t\t\t\ttextAndEntityNodes = this.parseTextAndEntityNodes( lastIndex, text );\n\t\t\t\tnodes.push.apply( nodes, textAndEntityNodes );\n\t\t\t}\n\t\t}\n\n\t\treturn nodes;\n\t},\n\n\n\t/**\n\t * Parses text and HTML entity nodes from a given string. The input string\n\t * should not have any HTML tags (elements) within it.\n\t *\n\t * @private\n\t * @param {Number} offset The offset of the text node match within the\n\t *   original HTML string.\n\t * @param {String} text The string of text to parse. This is from an HTML\n\t *   text node.\n\t * @return {Autolinker.htmlParser.HtmlNode[]} An array of HtmlNodes to\n\t *   represent the {@link Autolinker.htmlParser.TextNode TextNodes} and\n\t *   {@link Autolinker.htmlParser.EntityNode EntityNodes} found.\n\t */\n\tparseTextAndEntityNodes : function( offset, text ) {\n\t\tvar nodes = [],\n\t\t    textAndEntityTokens = Autolinker.Util.splitAndCapture( text, this.htmlCharacterEntitiesRegex );  // split at HTML entities, but include the HTML entities in the results array\n\n\t\t// Every even numbered token is a TextNode, and every odd numbered token is an EntityNode\n\t\t// For example: an input `text` of \"Test &quot;this&quot; today\" would turn into the\n\t\t//   `textAndEntityTokens`: [ 'Test ', '&quot;', 'this', '&quot;', ' today' ]\n\t\tfor( var i = 0, len = textAndEntityTokens.length; i < len; i += 2 ) {\n\t\t\tvar textToken = textAndEntityTokens[ i ],\n\t\t\t    entityToken = textAndEntityTokens[ i + 1 ];\n\n\t\t\tif( textToken ) {\n\t\t\t\tnodes.push( this.createTextNode( offset, textToken ) );\n\t\t\t\toffset += textToken.length;\n\t\t\t}\n\t\t\tif( entityToken ) {\n\t\t\t\tnodes.push( this.createEntityNode( offset, entityToken ) );\n\t\t\t\toffset += entityToken.length;\n\t\t\t}\n\t\t}\n\t\treturn nodes;\n\t},\n\n\n\t/**\n\t * Factory method to create an {@link Autolinker.htmlParser.CommentNode CommentNode}.\n\t *\n\t * @private\n\t * @param {Number} offset The offset of the match within the original HTML\n\t *   string.\n\t * @param {String} tagText The full text of the tag (comment) that was\n\t *   matched, including its &lt;!-- and --&gt;.\n\t * @param {String} commentText The full text of the comment that was matched.\n\t */\n\tcreateCommentNode : function( offset, tagText, commentText ) {\n\t\treturn new Autolinker.htmlParser.CommentNode( {\n\t\t\toffset : offset,\n\t\t\ttext   : tagText,\n\t\t\tcomment: Autolinker.Util.trim( commentText )\n\t\t} );\n\t},\n\n\n\t/**\n\t * Factory method to create an {@link Autolinker.htmlParser.ElementNode ElementNode}.\n\t *\n\t * @private\n\t * @param {Number} offset The offset of the match within the original HTML\n\t *   string.\n\t * @param {String} tagText The full text of the tag (element) that was\n\t *   matched, including its attributes.\n\t * @param {String} tagName The name of the tag. Ex: An &lt;img&gt; tag would\n\t *   be passed to this method as \"img\".\n\t * @param {Boolean} isClosingTag `true` if it's a closing tag, false\n\t *   otherwise.\n\t * @return {Autolinker.htmlParser.ElementNode}\n\t */\n\tcreateElementNode : function( offset, tagText, tagName, isClosingTag ) {\n\t\treturn new Autolinker.htmlParser.ElementNode( {\n\t\t\toffset  : offset,\n\t\t\ttext    : tagText,\n\t\t\ttagName : tagName.toLowerCase(),\n\t\t\tclosing : isClosingTag\n\t\t} );\n\t},\n\n\n\t/**\n\t * Factory method to create a {@link Autolinker.htmlParser.EntityNode EntityNode}.\n\t *\n\t * @private\n\t * @param {Number} offset The offset of the match within the original HTML\n\t *   string.\n\t * @param {String} text The text that was matched for the HTML entity (such\n\t *   as '&amp;nbsp;').\n\t * @return {Autolinker.htmlParser.EntityNode}\n\t */\n\tcreateEntityNode : function( offset, text ) {\n\t\treturn new Autolinker.htmlParser.EntityNode( { offset: offset, text: text } );\n\t},\n\n\n\t/**\n\t * Factory method to create a {@link Autolinker.htmlParser.TextNode TextNode}.\n\t *\n\t * @private\n\t * @param {Number} offset The offset of the match within the original HTML\n\t *   string.\n\t * @param {String} text The text that was matched.\n\t * @return {Autolinker.htmlParser.TextNode}\n\t */\n\tcreateTextNode : function( offset, text ) {\n\t\treturn new Autolinker.htmlParser.TextNode( { offset: offset, text: text } );\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @abstract\n * @class Autolinker.htmlParser.HtmlNode\n *\n * Represents an HTML node found in an input string. An HTML node is one of the\n * following:\n *\n * 1. An {@link Autolinker.htmlParser.ElementNode ElementNode}, which represents\n *    HTML tags.\n * 2. A {@link Autolinker.htmlParser.CommentNode CommentNode}, which represents\n *    HTML comments.\n * 3. A {@link Autolinker.htmlParser.TextNode TextNode}, which represents text\n *    outside or within HTML tags.\n * 4. A {@link Autolinker.htmlParser.EntityNode EntityNode}, which represents\n *    one of the known HTML entities that Autolinker looks for. This includes\n *    common ones such as &amp;quot; and &amp;nbsp;\n */\nAutolinker.htmlParser.HtmlNode = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {Number} offset (required)\n\t *\n\t * The offset of the HTML node in the original text that was parsed.\n\t */\n\toffset : undefined,\n\n\t/**\n\t * @cfg {String} text (required)\n\t *\n\t * The text that was matched for the HtmlNode.\n\t *\n\t * - In the case of an {@link Autolinker.htmlParser.ElementNode ElementNode},\n\t *   this will be the tag's text.\n\t * - In the case of an {@link Autolinker.htmlParser.CommentNode CommentNode},\n\t *   this will be the comment's text.\n\t * - In the case of a {@link Autolinker.htmlParser.TextNode TextNode}, this\n\t *   will be the text itself.\n\t * - In the case of a {@link Autolinker.htmlParser.EntityNode EntityNode},\n\t *   this will be the text of the HTML entity.\n\t */\n\ttext : undefined,\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match instance,\n\t * specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.Util.assign( this, cfg );\n\n\t\tif( this.offset == null ) throw new Error( '`offset` cfg required' );\n\t\tif( this.text == null ) throw new Error( '`text` cfg required' );\n\t},\n\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @abstract\n\t * @return {String}\n\t */\n\tgetType : Autolinker.Util.abstractMethod,\n\n\n\t/**\n\t * Retrieves the {@link #offset} of the HtmlNode. This is the offset of the\n\t * HTML node in the original string that was parsed.\n\t *\n\t * @return {Number}\n\t */\n\tgetOffset : function() {\n\t\treturn this.offset;\n\t},\n\n\n\t/**\n\t * Retrieves the {@link #text} for the HtmlNode.\n\t *\n\t * @return {String}\n\t */\n\tgetText : function() {\n\t\treturn this.text;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.CommentNode\n * @extends Autolinker.htmlParser.HtmlNode\n *\n * Represents an HTML comment node that has been parsed by the\n * {@link Autolinker.htmlParser.HtmlParser}.\n *\n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n * details.\n */\nAutolinker.htmlParser.CommentNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\n\t/**\n\t * @cfg {String} comment (required)\n\t *\n\t * The text inside the comment tag. This text is stripped of any leading or\n\t * trailing whitespace.\n\t */\n\tcomment : '',\n\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'comment';\n\t},\n\n\n\t/**\n\t * Returns the comment inside the comment tag.\n\t *\n\t * @return {String}\n\t */\n\tgetComment : function() {\n\t\treturn this.comment;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.ElementNode\n * @extends Autolinker.htmlParser.HtmlNode\n *\n * Represents an HTML element node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n *\n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n * details.\n */\nAutolinker.htmlParser.ElementNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\n\t/**\n\t * @cfg {String} tagName (required)\n\t *\n\t * The name of the tag that was matched.\n\t */\n\ttagName : '',\n\n\t/**\n\t * @cfg {Boolean} closing (required)\n\t *\n\t * `true` if the element (tag) is a closing tag, `false` if its an opening\n\t * tag.\n\t */\n\tclosing : false,\n\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'element';\n\t},\n\n\n\t/**\n\t * Returns the HTML element's (tag's) name. Ex: for an &lt;img&gt; tag,\n\t * returns \"img\".\n\t *\n\t * @return {String}\n\t */\n\tgetTagName : function() {\n\t\treturn this.tagName;\n\t},\n\n\n\t/**\n\t * Determines if the HTML element (tag) is a closing tag. Ex: &lt;div&gt;\n\t * returns `false`, while &lt;/div&gt; returns `true`.\n\t *\n\t * @return {Boolean}\n\t */\n\tisClosing : function() {\n\t\treturn this.closing;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.EntityNode\n * @extends Autolinker.htmlParser.HtmlNode\n *\n * Represents a known HTML entity node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n * Ex: '&amp;nbsp;', or '&amp#160;' (which will be retrievable from the {@link #getText}\n * method.\n *\n * Note that this class will only be returned from the HtmlParser for the set of\n * checked HTML entity nodes  defined by the {@link Autolinker.htmlParser.HtmlParser#htmlCharacterEntitiesRegex}.\n *\n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n * details.\n */\nAutolinker.htmlParser.EntityNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'entity';\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.TextNode\n * @extends Autolinker.htmlParser.HtmlNode\n *\n * Represents a text node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n *\n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n * details.\n */\nAutolinker.htmlParser.TextNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'text';\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @abstract\n * @class Autolinker.match.Match\n *\n * Represents a match found in an input string which should be Autolinked. A Match object is what is provided in a\n * {@link Autolinker#replaceFn replaceFn}, and may be used to query for details about the match.\n *\n * For example:\n *\n *     var input = \"...\";  // string with URLs, Email Addresses, and Twitter Handles\n *\n *     var linkedText = Autolinker.link( input, {\n *         replaceFn : function( autolinker, match ) {\n *             console.log( \"href = \", match.getAnchorHref() );\n *             console.log( \"text = \", match.getAnchorText() );\n *\n *             switch( match.getType() ) {\n *                 case 'url' :\n *                     console.log( \"url: \", match.getUrl() );\n *\n *                 case 'email' :\n *                     console.log( \"email: \", match.getEmail() );\n *\n *                 case 'twitter' :\n *                     console.log( \"twitter: \", match.getTwitterHandle() );\n *             }\n *         }\n *     } );\n *\n * See the {@link Autolinker} class for more details on using the {@link Autolinker#replaceFn replaceFn}.\n */\nAutolinker.match.Match = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n\t *\n\t * Reference to the AnchorTagBuilder instance to use to generate an anchor\n\t * tag for the Match.\n\t */\n\n\t/**\n\t * @cfg {String} matchedText (required)\n\t *\n\t * The original text that was matched by the {@link Autolinker.matcher.Matcher}.\n\t */\n\n\t/**\n\t * @cfg {Number} offset (required)\n\t *\n\t * The offset of where the match was made in the input string.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tif( cfg.tagBuilder == null ) throw new Error( '`tagBuilder` cfg required' );\n\t\tif( cfg.matchedText == null ) throw new Error( '`matchedText` cfg required' );\n\t\tif( cfg.offset == null ) throw new Error( '`offset` cfg required' );\n\n\t\tthis.tagBuilder = cfg.tagBuilder;\n\t\tthis.matchedText = cfg.matchedText;\n\t\tthis.offset = cfg.offset;\n\t},\n\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t *\n\t * @abstract\n\t * @return {String}\n\t */\n\tgetType : Autolinker.Util.abstractMethod,\n\n\n\t/**\n\t * Returns the original text that was matched.\n\t *\n\t * @return {String}\n\t */\n\tgetMatchedText : function() {\n\t\treturn this.matchedText;\n\t},\n\n\n\t/**\n\t * Sets the {@link #offset} of where the match was made in the input string.\n\t *\n\t * A {@link Autolinker.matcher.Matcher} will be fed only HTML text nodes,\n\t * and will therefore set an original offset that is relative to the HTML\n\t * text node itself. However, we want this offset to be relative to the full\n\t * HTML input string, and thus if using {@link Autolinker#parse} (rather\n\t * than calling a {@link Autolinker.matcher.Matcher} directly), then this\n\t * offset is corrected after the Matcher itself has done its job.\n\t *\n\t * @param {Number} offset\n\t */\n\tsetOffset : function( offset ) {\n\t\tthis.offset = offset;\n\t},\n\n\n\t/**\n\t * Returns the offset of where the match was made in the input string. This\n\t * is the 0-based index of the match.\n\t *\n\t * @return {Number}\n\t */\n\tgetOffset : function() {\n\t\treturn this.offset;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @abstract\n\t * @return {String}\n\t */\n\tgetAnchorHref : Autolinker.Util.abstractMethod,\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @abstract\n\t * @return {String}\n\t */\n\tgetAnchorText : Autolinker.Util.abstractMethod,\n\n\n\t/**\n\t * Builds and returns an {@link Autolinker.HtmlTag} instance based on the\n\t * Match.\n\t *\n\t * This can be used to easily generate anchor tags from matches, and either\n\t * return their HTML string, or modify them before doing so.\n\t *\n\t * Example Usage:\n\t *\n\t *     var tag = match.buildTag();\n\t *     tag.addClass( 'cordova-link' );\n\t *     tag.setAttr( 'target', '_system' );\n\t *\n\t *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"cordova-link\" target=\"_system\">Google</a>\n\t */\n\tbuildTag : function() {\n\t\treturn this.tagBuilder.build( this );\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.match.Email\n * @extends Autolinker.match.Match\n *\n * Represents a Email match found in an input string which should be Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nAutolinker.match.Email = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @cfg {String} email (required)\n\t *\n\t * The email address that was matched.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );\n\n\t\tif( !cfg.email ) throw new Error( '`email` cfg required' );\n\n\t\tthis.email = cfg.email;\n\t},\n\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'email';\n\t},\n\n\n\t/**\n\t * Returns the email address that was matched.\n\t *\n\t * @return {String}\n\t */\n\tgetEmail : function() {\n\t\treturn this.email;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\treturn 'mailto:' + this.email;\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn this.email;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.match.Hashtag\n * @extends Autolinker.match.Match\n *\n * Represents a Hashtag match found in an input string which should be\n * Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more\n * details.\n */\nAutolinker.match.Hashtag = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @cfg {String} serviceName\n\t *\n\t * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n\t * for available values.\n\t */\n\n\t/**\n\t * @cfg {String} hashtag (required)\n\t *\n\t * The Hashtag that was matched, without the '#'.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );\n\n\t\t// TODO: if( !serviceName ) throw new Error( '`serviceName` cfg required' );\n\t\tif( !cfg.hashtag ) throw new Error( '`hashtag` cfg required' );\n\n\t\tthis.serviceName = cfg.serviceName;\n\t\tthis.hashtag = cfg.hashtag;\n\t},\n\n\n\t/**\n\t * Returns the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'hashtag';\n\t},\n\n\n\t/**\n\t * Returns the configured {@link #serviceName} to point the Hashtag to.\n\t * Ex: 'facebook', 'twitter'.\n\t *\n\t * @return {String}\n\t */\n\tgetServiceName : function() {\n\t\treturn this.serviceName;\n\t},\n\n\n\t/**\n\t * Returns the matched hashtag, without the '#' character.\n\t *\n\t * @return {String}\n\t */\n\tgetHashtag : function() {\n\t\treturn this.hashtag;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\tvar serviceName = this.serviceName,\n\t\t    hashtag = this.hashtag;\n\n\t\tswitch( serviceName ) {\n\t\t\tcase 'twitter' :\n\t\t\t\treturn 'https://twitter.com/hashtag/' + hashtag;\n\t\t\tcase 'facebook' :\n\t\t\t\treturn 'https://www.facebook.com/hashtag/' + hashtag;\n\t\t\tcase 'instagram' :\n\t\t\t\treturn 'https://instagram.com/explore/tags/' + hashtag;\n\n\t\t\tdefault :  // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.\n\t\t\t\tthrow new Error( 'Unknown service name to point hashtag to: ', serviceName );\n\t\t}\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn '#' + this.hashtag;\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.match.Phone\n * @extends Autolinker.match.Match\n *\n * Represents a Phone number match found in an input string which should be\n * Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more\n * details.\n */\nAutolinker.match.Phone = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @protected\n\t * @property {String} number (required)\n\t *\n\t * The phone number that was matched, without any delimiter characters.\n\t *\n\t * Note: This is a string to allow for prefixed 0's.\n\t */\n\n\t/**\n\t * @protected\n\t * @property  {Boolean} plusSign (required)\n\t *\n\t * `true` if the matched phone number started with a '+' sign. We'll include\n\t * it in the `tel:` URL if so, as this is needed for international numbers.\n\t *\n\t * Ex: '+1 (123) 456 7879'\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );\n\n\t\tif( !cfg.number ) throw new Error( '`number` cfg required' );\n\t\tif( cfg.plusSign == null ) throw new Error( '`plusSign` cfg required' );\n\n\t\tthis.number = cfg.number;\n\t\tthis.plusSign = cfg.plusSign;\n\t},\n\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'phone';\n\t},\n\n\n\t/**\n\t * Returns the phone number that was matched as a string, without any\n\t * delimiter characters.\n\t *\n\t * Note: This is a string to allow for prefixed 0's.\n\t *\n\t * @return {String}\n\t */\n\tgetNumber: function() {\n\t\treturn this.number;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\treturn 'tel:' + ( this.plusSign ? '+' : '' ) + this.number;\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn this.matchedText;\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.match.Twitter\n * @extends Autolinker.match.Match\n *\n * Represents a Twitter match found in an input string which should be Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nAutolinker.match.Twitter = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @cfg {String} twitterHandle (required)\n\t *\n\t * The Twitter handle that was matched, without the '@' character.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg) {\n\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );\n\n\t\tif( !cfg.twitterHandle ) throw new Error( '`twitterHandle` cfg required' );\n\n\t\tthis.twitterHandle = cfg.twitterHandle;\n\t},\n\n\n\t/**\n\t * Returns the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'twitter';\n\t},\n\n\n\t/**\n\t * Returns the twitter handle, without the '@' character.\n\t *\n\t * @return {String}\n\t */\n\tgetTwitterHandle : function() {\n\t\treturn this.twitterHandle;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\treturn 'https://twitter.com/' + this.twitterHandle;\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn '@' + this.twitterHandle;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.match.Url\n * @extends Autolinker.match.Match\n *\n * Represents a Url match found in an input string which should be Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nAutolinker.match.Url = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @cfg {String} url (required)\n\t *\n\t * The url that was matched.\n\t */\n\n\t/**\n\t * @cfg {\"scheme\"/\"www\"/\"tld\"} urlMatchType (required)\n\t *\n\t * The type of URL match that this class represents. This helps to determine\n\t * if the match was made in the original text with a prefixed scheme (ex:\n\t * 'http://www.google.com'), a prefixed 'www' (ex: 'www.google.com'), or\n\t * was matched by a known top-level domain (ex: 'google.com').\n\t */\n\n\t/**\n\t * @cfg {Boolean} protocolUrlMatch (required)\n\t *\n\t * `true` if the URL is a match which already has a protocol (i.e.\n\t * 'http://'), `false` if the match was from a 'www' or known TLD match.\n\t */\n\n\t/**\n\t * @cfg {Boolean} protocolRelativeMatch (required)\n\t *\n\t * `true` if the URL is a protocol-relative match. A protocol-relative match\n\t * is a URL that starts with '//', and will be either http:// or https://\n\t * based on the protocol that the site is loaded under.\n\t */\n\n\t/**\n\t * @cfg {Boolean} stripPrefix (required)\n\t * @inheritdoc Autolinker#cfg-stripPrefix\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );\n\n\t\tif( cfg.urlMatchType !== 'scheme' && cfg.urlMatchType !== 'www' && cfg.urlMatchType !== 'tld' ) throw new Error( '`urlMatchType` cfg must be one of: \"scheme\", \"www\", or \"tld\"' );\n\t\tif( !cfg.url ) throw new Error( '`url` cfg required' );\n\t\tif( cfg.protocolUrlMatch == null ) throw new Error( '`protocolUrlMatch` cfg required' );\n\t\tif( cfg.protocolRelativeMatch == null ) throw new Error( '`protocolRelativeMatch` cfg required' );\n\t\tif( cfg.stripPrefix == null ) throw new Error( '`stripPrefix` cfg required' );\n\n\t\tthis.urlMatchType = cfg.urlMatchType;\n\t\tthis.url = cfg.url;\n\t\tthis.protocolUrlMatch = cfg.protocolUrlMatch;\n\t\tthis.protocolRelativeMatch = cfg.protocolRelativeMatch;\n\t\tthis.stripPrefix = cfg.stripPrefix;\n\t},\n\n\n\t/**\n\t * @private\n\t * @property {RegExp} urlPrefixRegex\n\t *\n\t * A regular expression used to remove the 'http://' or 'https://' and/or the 'www.' from URLs.\n\t */\n\turlPrefixRegex: /^(https?:\\/\\/)?(www\\.)?/i,\n\n\t/**\n\t * @private\n\t * @property {RegExp} protocolRelativeRegex\n\t *\n\t * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes\n\t * of {@link #getAnchorText}. A protocol-relative URL is, for example, \"//yahoo.com\"\n\t */\n\tprotocolRelativeRegex : /^\\/\\//,\n\n\t/**\n\t * @private\n\t * @property {Boolean} protocolPrepended\n\t *\n\t * Will be set to `true` if the 'http://' protocol has been prepended to the {@link #url} (because the\n\t * {@link #url} did not have a protocol)\n\t */\n\tprotocolPrepended : false,\n\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'url';\n\t},\n\n\n\t/**\n\t * Returns a string name for the type of URL match that this class\n\t * represents.\n\t *\n\t * This helps to determine if the match was made in the original text with a\n\t * prefixed scheme (ex: 'http://www.google.com'), a prefixed 'www' (ex:\n\t * 'www.google.com'), or was matched by a known top-level domain (ex:\n\t * 'google.com').\n\t *\n\t * @return {\"scheme\"/\"www\"/\"tld\"}\n\t */\n\tgetUrlMatchType : function() {\n\t\treturn this.urlMatchType;\n\t},\n\n\n\t/**\n\t * Returns the url that was matched, assuming the protocol to be 'http://' if the original\n\t * match was missing a protocol.\n\t *\n\t * @return {String}\n\t */\n\tgetUrl : function() {\n\t\tvar url = this.url;\n\n\t\t// if the url string doesn't begin with a protocol, assume 'http://'\n\t\tif( !this.protocolRelativeMatch && !this.protocolUrlMatch && !this.protocolPrepended ) {\n\t\t\turl = this.url = 'http://' + url;\n\n\t\t\tthis.protocolPrepended = true;\n\t\t}\n\n\t\treturn url;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\tvar url = this.getUrl();\n\n\t\treturn url.replace( /&amp;/g, '&' );  // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\tvar anchorText = this.getMatchedText();\n\n\t\tif( this.protocolRelativeMatch ) {\n\t\t\t// Strip off any protocol-relative '//' from the anchor text\n\t\t\tanchorText = this.stripProtocolRelativePrefix( anchorText );\n\t\t}\n\t\tif( this.stripPrefix ) {\n\t\t\tanchorText = this.stripUrlPrefix( anchorText );\n\t\t}\n\t\tanchorText = this.removeTrailingSlash( anchorText );  // remove trailing slash, if there is one\n\n\t\treturn anchorText;\n\t},\n\n\n\t// ---------------------------------------\n\n\t// Utility Functionality\n\n\t/**\n\t * Strips the URL prefix (such as \"http://\" or \"https://\") from the given text.\n\t *\n\t * @private\n\t * @param {String} text The text of the anchor that is being generated, for which to strip off the\n\t *   url prefix (such as stripping off \"http://\")\n\t * @return {String} The `anchorText`, with the prefix stripped.\n\t */\n\tstripUrlPrefix : function( text ) {\n\t\treturn text.replace( this.urlPrefixRegex, '' );\n\t},\n\n\n\t/**\n\t * Strips any protocol-relative '//' from the anchor text.\n\t *\n\t * @private\n\t * @param {String} text The text of the anchor that is being generated, for which to strip off the\n\t *   protocol-relative prefix (such as stripping off \"//\")\n\t * @return {String} The `anchorText`, with the protocol-relative prefix stripped.\n\t */\n\tstripProtocolRelativePrefix : function( text ) {\n\t\treturn text.replace( this.protocolRelativeRegex, '' );\n\t},\n\n\n\t/**\n\t * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.\n\t *\n\t * @private\n\t * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing\n\t *   slash ('/') that may exist.\n\t * @return {String} The `anchorText`, with the trailing slash removed.\n\t */\n\tremoveTrailingSlash : function( anchorText ) {\n\t\tif( anchorText.charAt( anchorText.length - 1 ) === '/' ) {\n\t\t\tanchorText = anchorText.slice( 0, -1 );\n\t\t}\n\t\treturn anchorText;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @abstract\n * @class Autolinker.matcher.Matcher\n *\n * An abstract class and interface for individual matchers to find matches in\n * an input string with linkified versions of them.\n *\n * Note that Matchers do not take HTML into account - they must be fed the text\n * nodes of any HTML string, which is handled by {@link Autolinker#parse}.\n */\nAutolinker.matcher.Matcher = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n\t *\n\t * Reference to the AnchorTagBuilder instance to use to generate HTML tags\n\t * for {@link Autolinker.match.Match Matches}.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Matcher\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tif( !cfg.tagBuilder ) throw new Error( '`tagBuilder` cfg required' );\n\n\t\tthis.tagBuilder = cfg.tagBuilder;\n\t},\n\n\n\t/**\n\t * Parses the input `text` and returns the array of {@link Autolinker.match.Match Matches}\n\t * for the matcher.\n\t *\n\t * @abstract\n\t * @param {String} text The text to scan and replace matches in.\n\t * @return {Autolinker.match.Match[]}\n\t */\n\tparseMatches : Autolinker.Util.abstractMethod\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.matcher.Email\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find email matches in an input string.\n *\n * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.\n */\nAutolinker.matcher.Email = Autolinker.Util.extend( Autolinker.matcher.Matcher, {\n\n\t/**\n\t * The regular expression to match email addresses. Example match:\n\t *\n\t *     person@place.com\n\t *\n\t * @private\n\t * @property {RegExp} matcherRegex\n\t */\n\tmatcherRegex : (function() {\n\t\tvar alphaNumericChars = Autolinker.RegexLib.alphaNumericCharsStr,\n\t\t    emailRegex = new RegExp( '[' + alphaNumericChars + '\\\\-_\\';:&=+$.,]+@' ),  // something@ for email addresses (a.k.a. local-part)\n\t\t\tdomainNameRegex = Autolinker.RegexLib.domainNameRegex,\n\t\t\ttldRegex = Autolinker.RegexLib.tldRegex;  // match our known top level domains (TLDs)\n\n\t\treturn new RegExp( [\n\t\t\temailRegex.source,\n\t\t\tdomainNameRegex.source,\n\t\t\t'\\\\.', tldRegex.source   // '.com', '.net', etc\n\t\t].join( \"\" ), 'gi' );\n\t} )(),\n\n\n\t/**\n\t * @inheritdoc\n\t */\n\tparseMatches : function( text ) {\n\t\tvar matcherRegex = this.matcherRegex,\n\t\t    tagBuilder = this.tagBuilder,\n\t\t    matches = [],\n\t\t    match;\n\n\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {\n\t\t\tvar matchedText = match[ 0 ];\n\n\t\t\tmatches.push( new Autolinker.match.Email( {\n\t\t\t\ttagBuilder  : tagBuilder,\n\t\t\t\tmatchedText : matchedText,\n\t\t\t\toffset      : match.index,\n\t\t\t\temail       : matchedText\n\t\t\t} ) );\n\t\t}\n\n\t\treturn matches;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.matcher.Hashtag\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find Hashtag matches in an input string.\n */\nAutolinker.matcher.Hashtag = Autolinker.Util.extend( Autolinker.matcher.Matcher, {\n\n\t/**\n\t * @cfg {String} serviceName\n\t *\n\t * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n\t * for available values.\n\t */\n\n\n\t/**\n\t * The regular expression to match Hashtags. Example match:\n\t *\n\t *     #asdf\n\t *\n\t * @private\n\t * @property {RegExp} matcherRegex\n\t */\n\tmatcherRegex : new RegExp( '#[_' + Autolinker.RegexLib.alphaNumericCharsStr + ']{1,139}', 'g' ),\n\n\t/**\n\t * The regular expression to use to check the character before a username match to\n\t * make sure we didn't accidentally match an email address.\n\t *\n\t * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.\n\t *\n\t * @private\n\t * @property {RegExp} nonWordCharRegex\n\t */\n\tnonWordCharRegex : new RegExp( '[^' + Autolinker.RegexLib.alphaNumericCharsStr + ']' ),\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match instance,\n\t *   specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.matcher.Matcher.prototype.constructor.call( this, cfg );\n\n\t\tthis.serviceName = cfg.serviceName;\n\t},\n\n\n\t/**\n\t * @inheritdoc\n\t */\n\tparseMatches : function( text ) {\n\t\tvar matcherRegex = this.matcherRegex,\n\t\t    nonWordCharRegex = this.nonWordCharRegex,\n\t\t    serviceName = this.serviceName,\n\t\t    tagBuilder = this.tagBuilder,\n\t\t    matches = [],\n\t\t    match;\n\n\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {\n\t\t\tvar offset = match.index,\n\t\t\t    prevChar = text.charAt( offset - 1 );\n\n\t\t\t// If we found the match at the beginning of the string, or we found the match\n\t\t\t// and there is a whitespace char in front of it (meaning it is not a '#' char\n\t\t\t// in the middle of a word), then it is a hashtag match.\n\t\t\tif( offset === 0 || nonWordCharRegex.test( prevChar ) ) {\n\t\t\t\tvar matchedText = match[ 0 ],\n\t\t\t\t    hashtag = match[ 0 ].slice( 1 );  // strip off the '#' character at the beginning\n\n\t\t\t\tmatches.push( new Autolinker.match.Hashtag( {\n\t\t\t\t\ttagBuilder  : tagBuilder,\n\t\t\t\t\tmatchedText : matchedText,\n\t\t\t\t\toffset      : offset,\n\t\t\t\t\tserviceName : serviceName,\n\t\t\t\t\thashtag     : hashtag\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.matcher.Phone\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find Phone number matches in an input string.\n *\n * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more\n * details.\n */\nAutolinker.matcher.Phone = Autolinker.Util.extend( Autolinker.matcher.Matcher, {\n\n\t/**\n\t * The regular expression to match Phone numbers. Example match:\n\t *\n\t *     (123) 456-7890\n\t *\n\t * This regular expression has the following capturing groups:\n\t *\n\t * 1. The prefixed '+' sign, if there is one.\n\t *\n\t * @private\n\t * @property {RegExp} matcherRegex\n\t */\n\tmatcherRegex : /(?:(\\+)?\\d{1,3}[-\\040.])?\\(?\\d{3}\\)?[-\\040.]?\\d{3}[-\\040.]\\d{4}/g,  // ex: (123) 456-7890, 123 456 7890, 123-456-7890, etc.\n\n\t/**\n\t * @inheritdoc\n\t */\n\tparseMatches : function( text ) {\n\t\tvar matcherRegex = this.matcherRegex,\n\t\t    tagBuilder = this.tagBuilder,\n\t\t    matches = [],\n\t\t    match;\n\n\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {\n\t\t\t// Remove non-numeric values from phone number string\n\t\t\tvar matchedText = match[ 0 ],\n\t\t\t    cleanNumber = matchedText.replace( /\\D/g, '' ),  // strip out non-digit characters\n\t\t\t    plusSign = !!match[ 1 ];  // match[ 1 ] is the prefixed plus sign, if there is one\n\n\t\t\tmatches.push( new Autolinker.match.Phone( {\n\t\t\t\ttagBuilder  : tagBuilder,\n\t\t\t\tmatchedText : matchedText,\n\t\t\t\toffset      : match.index,\n\t\t\t\tnumber      : cleanNumber,\n\t\t\t\tplusSign    : plusSign\n\t\t\t} ) );\n\t\t}\n\n\t\treturn matches;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.matcher.Twitter\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find/replace username matches in an input string.\n */\nAutolinker.matcher.Twitter = Autolinker.Util.extend( Autolinker.matcher.Matcher, {\n\n\t/**\n\t * The regular expression to match username handles. Example match:\n\t *\n\t *     @asdf\n\t *\n\t * @private\n\t * @property {RegExp} matcherRegex\n\t */\n\tmatcherRegex : new RegExp( '@[_' + Autolinker.RegexLib.alphaNumericCharsStr + ']{1,20}', 'g' ),\n\n\t/**\n\t * The regular expression to use to check the character before a username match to\n\t * make sure we didn't accidentally match an email address.\n\t *\n\t * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.\n\t *\n\t * @private\n\t * @property {RegExp} nonWordCharRegex\n\t */\n\tnonWordCharRegex : new RegExp( '[^' + Autolinker.RegexLib.alphaNumericCharsStr + ']' ),\n\n\n\t/**\n\t * @inheritdoc\n\t */\n\tparseMatches : function( text ) {\n\t\tvar matcherRegex = this.matcherRegex,\n\t\t    nonWordCharRegex = this.nonWordCharRegex,\n\t\t    tagBuilder = this.tagBuilder,\n\t\t    matches = [],\n\t\t    match;\n\n\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {\n\t\t\tvar offset = match.index,\n\t\t\t    prevChar = text.charAt( offset - 1 );\n\n\t\t\t// If we found the match at the beginning of the string, or we found the match\n\t\t\t// and there is a whitespace char in front of it (meaning it is not an email\n\t\t\t// address), then it is a username match.\n\t\t\tif( offset === 0 || nonWordCharRegex.test( prevChar ) ) {\n\t\t\t\tvar matchedText = match[ 0 ],\n\t\t\t\t    twitterHandle = match[ 0 ].slice( 1 );  // strip off the '@' character at the beginning\n\n\t\t\t\tmatches.push( new Autolinker.match.Twitter( {\n\t\t\t\t\ttagBuilder    : tagBuilder,\n\t\t\t\t\tmatchedText   : matchedText,\n\t\t\t\t\toffset        : offset,\n\t\t\t\t\ttwitterHandle : twitterHandle\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.matcher.Url\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find URL matches in an input string.\n *\n * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.\n */\nAutolinker.matcher.Url = Autolinker.Util.extend( Autolinker.matcher.Matcher, {\n\n\t/**\n\t * @cfg {Boolean} stripPrefix (required)\n\t * @inheritdoc Autolinker#stripPrefix\n\t */\n\n\n\t/**\n\t * @private\n\t * @property {RegExp} matcherRegex\n\t *\n\t * The regular expression to match URLs with an optional scheme, port\n\t * number, path, query string, and hash anchor.\n\t *\n\t * Example matches:\n\t *\n\t *     http://google.com\n\t *     www.google.com\n\t *     google.com/path/to/file?q1=1&q2=2#myAnchor\n\t *\n\t *\n\t * This regular expression will have the following capturing groups:\n\t *\n\t * 1.  Group that matches a scheme-prefixed URL (i.e. 'http://google.com').\n\t *     This is used to match scheme URLs with just a single word, such as\n\t *     'http://localhost', where we won't double check that the domain name\n\t *     has at least one dot ('.') in it.\n\t * 2.  Group that matches a 'www.' prefixed URL. This is only matched if the\n\t *     'www.' text was not prefixed by a scheme (i.e.: not prefixed by\n\t *     'http://', 'ftp:', etc.)\n\t * 3.  A protocol-relative ('//') match for the case of a 'www.' prefixed\n\t *     URL. Will be an empty string if it is not a protocol-relative match.\n\t *     We need to know the character before the '//' in order to determine\n\t *     if it is a valid match or the // was in a string we don't want to\n\t *     auto-link.\n\t * 4.  Group that matches a known TLD (top level domain), when a scheme\n\t *     or 'www.'-prefixed domain is not matched.\n\t * 5.  A protocol-relative ('//') match for the case of a known TLD prefixed\n\t *     URL. Will be an empty string if it is not a protocol-relative match.\n\t *     See #3 for more info.\n\t */\n\tmatcherRegex : (function() {\n\t\tvar schemeRegex = /(?:[A-Za-z][-.+A-Za-z0-9]*:(?![A-Za-z][-.+A-Za-z0-9]*:\\/\\/)(?!\\d+\\/?)(?:\\/\\/)?)/,  // match protocol, allow in format \"http://\" or \"mailto:\". However, do not match the first part of something like 'link:http://www.google.com' (i.e. don't match \"link:\"). Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a protocol here (i.e. ignore a trailing port number in this regex)\n\t\t    wwwRegex = /(?:www\\.)/,                  // starting with 'www.'\n\t\t    domainNameRegex = Autolinker.RegexLib.domainNameRegex,\n\t\t    tldRegex = Autolinker.RegexLib.tldRegex,  // match our known top level domains (TLDs)\n\t\t    alphaNumericCharsStr = Autolinker.RegexLib.alphaNumericCharsStr,\n\n\t\t    // Allow optional path, query string, and hash anchor, not ending in the following characters: \"?!:,.;\"\n\t\t    // http://blog.codinghorror.com/the-problem-with-urls/\n\t\t    urlSuffixRegex = new RegExp( '[' + alphaNumericCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]?!:,.;]*[' + alphaNumericCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]]' );\n\n\t\treturn new RegExp( [\n\t\t\t'(?:', // parens to cover match for scheme (optional), and domain\n\t\t\t\t'(',  // *** Capturing group $1, for a scheme-prefixed url (ex: http://google.com)\n\t\t\t\t\tschemeRegex.source,\n\t\t\t\t\tdomainNameRegex.source,\n\t\t\t\t')',\n\n\t\t\t\t'|',\n\n\t\t\t\t'(',  // *** Capturing group $2, for a 'www.' prefixed url (ex: www.google.com)\n\t\t\t\t\t'(//)?',  // *** Capturing group $3 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character (handled later)\n\t\t\t\t\twwwRegex.source,\n\t\t\t\t\tdomainNameRegex.source,\n\t\t\t\t')',\n\n\t\t\t\t'|',\n\n\t\t\t\t'(',  // *** Capturing group $4, for known a TLD url (ex: google.com)\n\t\t\t\t\t'(//)?',  // *** Capturing group $5 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character (handled later)\n\t\t\t\t\tdomainNameRegex.source + '\\\\.',\n\t\t\t\t\ttldRegex.source,\n\t\t\t\t')',\n\t\t\t')',\n\n\t\t\t'(?:' + urlSuffixRegex.source + ')?'  // match for path, query string, and/or hash anchor - optional\n\t\t].join( \"\" ), 'gi' );\n\t} )(),\n\n\n\t/**\n\t * A regular expression to use to check the character before a protocol-relative\n\t * URL match. We don't want to match a protocol-relative URL if it is part\n\t * of another word.\n\t *\n\t * For example, we want to match something like \"Go to: //google.com\",\n\t * but we don't want to match something like \"abc//google.com\"\n\t *\n\t * This regular expression is used to test the character before the '//'.\n\t *\n\t * @private\n\t * @type {RegExp} wordCharRegExp\n\t */\n\twordCharRegExp : /\\w/,\n\n\n\t/**\n\t * The regular expression to match opening parenthesis in a URL match.\n\t *\n\t * This is to determine if we have unbalanced parenthesis in the URL, and to\n\t * drop the final parenthesis that was matched if so.\n\t *\n\t * Ex: The text \"(check out: wikipedia.com/something_(disambiguation))\"\n\t * should only autolink the inner \"wikipedia.com/something_(disambiguation)\"\n\t * part, so if we find that we have unbalanced parenthesis, we will drop the\n\t * last one for the match.\n\t *\n\t * @private\n\t * @property {RegExp}\n\t */\n\topenParensRe : /\\(/g,\n\n\t/**\n\t * The regular expression to match closing parenthesis in a URL match. See\n\t * {@link #openParensRe} for more information.\n\t *\n\t * @private\n\t * @property {RegExp}\n\t */\n\tcloseParensRe : /\\)/g,\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match instance,\n\t *   specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.matcher.Matcher.prototype.constructor.call( this, cfg );\n\n\t\tthis.stripPrefix = cfg.stripPrefix;\n\n\t\tif( this.stripPrefix == null ) throw new Error( '`stripPrefix` cfg required' );\n\t},\n\n\n\t/**\n\t * @inheritdoc\n\t */\n\tparseMatches : function( text ) {\n\t\tvar matcherRegex = this.matcherRegex,\n\t\t    stripPrefix = this.stripPrefix,\n\t\t    tagBuilder = this.tagBuilder,\n\t\t    matches = [],\n\t\t    match;\n\n\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {\n\t\t\tvar matchStr = match[ 0 ],\n\t\t\t    schemeUrlMatch = match[ 1 ],\n\t\t\t    wwwUrlMatch = match[ 2 ],\n\t\t\t    wwwProtocolRelativeMatch = match[ 3 ],\n\t\t\t    //tldUrlMatch = match[ 4 ],  -- not needed at the moment\n\t\t\t    tldProtocolRelativeMatch = match[ 5 ],\n\t\t\t    offset = match.index,\n\t\t\t    protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch,\n\t\t\t\tprevChar = text.charAt( offset - 1 );\n\n\t\t\tif( !Autolinker.matcher.UrlMatchValidator.isValid( matchStr, schemeUrlMatch ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the match is preceded by an '@' character, then it is either\n\t\t\t// an email address or a username. Skip these types of matches.\n\t\t\tif( offset > 0 && prevChar === '@' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If it's a protocol-relative '//' match, but the character before the '//'\n\t\t\t// was a word character (i.e. a letter/number), then we found the '//' in the\n\t\t\t// middle of another word (such as \"asdf//asdf.com\"). In this case, skip the\n\t\t\t// match.\n\t\t\tif( offset > 0 && protocolRelativeMatch && this.wordCharRegExp.test( prevChar ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Handle a closing parenthesis at the end of the match, and exclude\n\t\t\t// it if there is not a matching open parenthesis in the match\n\t\t\t// itself.\n\t\t\tif( this.matchHasUnbalancedClosingParen( matchStr ) ) {\n\t\t\t\tmatchStr = matchStr.substr( 0, matchStr.length - 1 );  // remove the trailing \")\"\n\t\t\t} else {\n\t\t\t\t// Handle an invalid character after the TLD\n\t\t\t\tvar pos = this.matchHasInvalidCharAfterTld( matchStr, schemeUrlMatch );\n\t\t\t\tif( pos > -1 ) {\n\t\t\t\t\tmatchStr = matchStr.substr( 0, pos ); // remove the trailing invalid chars\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar urlMatchType = schemeUrlMatch ? 'scheme' : ( wwwUrlMatch ? 'www' : 'tld' ),\n\t\t\t    protocolUrlMatch = !!schemeUrlMatch;\n\n\t\t\tmatches.push( new Autolinker.match.Url( {\n\t\t\t\ttagBuilder            : tagBuilder,\n\t\t\t\tmatchedText           : matchStr,\n\t\t\t\toffset                : offset,\n\t\t\t\turlMatchType          : urlMatchType,\n\t\t\t\turl                   : matchStr,\n\t\t\t\tprotocolUrlMatch      : protocolUrlMatch,\n\t\t\t\tprotocolRelativeMatch : !!protocolRelativeMatch,\n\t\t\t\tstripPrefix           : stripPrefix\n\t\t\t} ) );\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\n\t/**\n\t * Determines if a match found has an unmatched closing parenthesis. If so,\n\t * this parenthesis will be removed from the match itself, and appended\n\t * after the generated anchor tag.\n\t *\n\t * A match may have an extra closing parenthesis at the end of the match\n\t * because the regular expression must include parenthesis for URLs such as\n\t * \"wikipedia.com/something_(disambiguation)\", which should be auto-linked.\n\t *\n\t * However, an extra parenthesis *will* be included when the URL itself is\n\t * wrapped in parenthesis, such as in the case of \"(wikipedia.com/something_(disambiguation))\".\n\t * In this case, the last closing parenthesis should *not* be part of the\n\t * URL itself, and this method will return `true`.\n\t *\n\t * @private\n\t * @param {String} matchStr The full match string from the {@link #matcherRegex}.\n\t * @return {Boolean} `true` if there is an unbalanced closing parenthesis at\n\t *   the end of the `matchStr`, `false` otherwise.\n\t */\n\tmatchHasUnbalancedClosingParen : function( matchStr ) {\n\t\tvar lastChar = matchStr.charAt( matchStr.length - 1 );\n\n\t\tif( lastChar === ')' ) {\n\t\t\tvar openParensMatch = matchStr.match( this.openParensRe ),\n\t\t\t    closeParensMatch = matchStr.match( this.closeParensRe ),\n\t\t\t    numOpenParens = ( openParensMatch && openParensMatch.length ) || 0,\n\t\t\t    numCloseParens = ( closeParensMatch && closeParensMatch.length ) || 0;\n\n\t\t\tif( numOpenParens < numCloseParens ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\n\t/**\n\t * Determine if there's an invalid character after the TLD in a URL. Valid\n\t * characters after TLD are ':/?#'. Exclude scheme matched URLs from this\n\t * check.\n\t *\n\t * @private\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} schemeUrlMatch The match URL string for a scheme\n\t *   match. Ex: 'http://yahoo.com'. This is used to match something like\n\t *   'http://localhost', where we won't double check that the domain name\n\t *   has at least one '.' in it.\n\t * @return {Number} the position where the invalid character was found. If\n\t *   no such character was found, returns -1\n\t */\n\tmatchHasInvalidCharAfterTld : function( urlMatch, schemeUrlMatch ) {\n\t\tif( !urlMatch ) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tvar offset = 0;\n\t\tif ( schemeUrlMatch ) {\n\t\t\toffset = urlMatch.indexOf(':');\n\t\t\turlMatch = urlMatch.slice(offset);\n\t\t}\n\n\t\tvar re = /^((.?\\/\\/)?[A-Za-z0-9\\u00C0-\\u017F\\.\\-]*[A-Za-z0-9\\u00C0-\\u017F\\-]\\.[A-Za-z]+)/;\n\t\tvar res = re.exec( urlMatch );\n\t\tif ( res === null ) {\n\t\t\treturn -1;\n\t\t}\n\n\t\toffset += res[1].length;\n\t\turlMatch = urlMatch.slice(res[1].length);\n\t\tif (/^[^.A-Za-z:\\/?#]/.test(urlMatch)) {\n\t\t\treturn offset;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n} );\n/*global Autolinker */\n/*jshint scripturl:true */\n/**\n * @private\n * @class Autolinker.matcher.UrlMatchValidator\n * @singleton\n *\n * Used by Autolinker to filter out false URL positives from the\n * {@link Autolinker.matcher.Url UrlMatcher}.\n *\n * Due to the limitations of regular expressions (including the missing feature\n * of look-behinds in JS regular expressions), we cannot always determine the\n * validity of a given match. This class applies a bit of additional logic to\n * filter out any false positives that have been matched by the\n * {@link Autolinker.matcher.Url UrlMatcher}.\n */\nAutolinker.matcher.UrlMatchValidator = {\n\n\t/**\n\t * Regex to test for a full protocol, with the two trailing slashes. Ex: 'http://'\n\t *\n\t * @private\n\t * @property {RegExp} hasFullProtocolRegex\n\t */\n\thasFullProtocolRegex : /^[A-Za-z][-.+A-Za-z0-9]*:\\/\\//,\n\n\t/**\n\t * Regex to find the URI scheme, such as 'mailto:'.\n\t *\n\t * This is used to filter out 'javascript:' and 'vbscript:' schemes.\n\t *\n\t * @private\n\t * @property {RegExp} uriSchemeRegex\n\t */\n\turiSchemeRegex : /^[A-Za-z][-.+A-Za-z0-9]*:/,\n\n\t/**\n\t * Regex to determine if at least one word char exists after the protocol (i.e. after the ':')\n\t *\n\t * @private\n\t * @property {RegExp} hasWordCharAfterProtocolRegex\n\t */\n\thasWordCharAfterProtocolRegex : /:[^\\s]*?[A-Za-z\\u00C0-\\u017F]/,\n\n\t/**\n\t * Regex to determine if the string is a valid IP address\n\t *\n\t * @private\n\t * @property {RegExp} ipRegex\n\t */\n\tipRegex: /[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?(:[0-9]*)?\\/?$/,\n\n\t/**\n\t * Determines if a given URL match found by the {@link Autolinker.matcher.Url UrlMatcher}\n\t * is valid. Will return `false` for:\n\t *\n\t * 1) URL matches which do not have at least have one period ('.') in the\n\t *    domain name (effectively skipping over matches like \"abc:def\").\n\t *    However, URL matches with a protocol will be allowed (ex: 'http://localhost')\n\t * 2) URL matches which do not have at least one word character in the\n\t *    domain name (effectively skipping over matches like \"git:1.0\").\n\t * 3) A protocol-relative url match (a URL beginning with '//') whose\n\t *    previous character is a word character (effectively skipping over\n\t *    strings like \"abc//google.com\")\n\t *\n\t * Otherwise, returns `true`.\n\t *\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} protocolUrlMatch The match URL string for a protocol\n\t *   match. Ex: 'http://yahoo.com'. This is used to match something like\n\t *   'http://localhost', where we won't double check that the domain name\n\t *   has at least one '.' in it.\n\t * @return {Boolean} `true` if the match given is valid and should be\n\t *   processed, or `false` if the match is invalid and/or should just not be\n\t *   processed.\n\t */\n\tisValid : function( urlMatch, protocolUrlMatch ) {\n\t\tif(\n\t\t\t( protocolUrlMatch && !this.isValidUriScheme( protocolUrlMatch ) ) ||\n\t\t\tthis.urlMatchDoesNotHaveProtocolOrDot( urlMatch, protocolUrlMatch ) ||    // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')\n\t\t\t(this.urlMatchDoesNotHaveAtLeastOneWordChar( urlMatch, protocolUrlMatch ) && // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like \"git:1.0\"\n\t\t\t !this.isValidIpAddress( urlMatch ) // Except if it's an IP address\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\n\tisValidIpAddress : function ( uriSchemeMatch ) {\n\t\tvar newRegex = new RegExp(this.hasFullProtocolRegex.source + this.ipRegex.source);\n\t\tvar uriScheme = uriSchemeMatch.match( newRegex );\n\n\t\treturn uriScheme !== null;\n\t},\n\n\t/**\n\t * Determines if the URI scheme is a valid scheme to be autolinked. Returns\n\t * `false` if the scheme is 'javascript:' or 'vbscript:'\n\t *\n\t * @private\n\t * @param {String} uriSchemeMatch The match URL string for a full URI scheme\n\t *   match. Ex: 'http://yahoo.com' or 'mailto:a@a.com'.\n\t * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.\n\t */\n\tisValidUriScheme : function( uriSchemeMatch ) {\n\t\tvar uriScheme = uriSchemeMatch.match( this.uriSchemeRegex )[ 0 ].toLowerCase();\n\n\t\treturn ( uriScheme !== 'javascript:' && uriScheme !== 'vbscript:' );\n\t},\n\n\n\t/**\n\t * Determines if a URL match does not have either:\n\t *\n\t * a) a full protocol (i.e. 'http://'), or\n\t * b) at least one dot ('.') in the domain name (for a non-full-protocol\n\t *    match).\n\t *\n\t * Either situation is considered an invalid URL (ex: 'git:d' does not have\n\t * either the '://' part, or at least one dot in the domain name. If the\n\t * match was 'git:abc.com', we would consider this valid.)\n\t *\n\t * @private\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} protocolUrlMatch The match URL string for a protocol\n\t *   match. Ex: 'http://yahoo.com'. This is used to match something like\n\t *   'http://localhost', where we won't double check that the domain name\n\t *   has at least one '.' in it.\n\t * @return {Boolean} `true` if the URL match does not have a full protocol,\n\t *   or at least one dot ('.') in a non-full-protocol match.\n\t */\n\turlMatchDoesNotHaveProtocolOrDot : function( urlMatch, protocolUrlMatch ) {\n\t\treturn ( !!urlMatch && ( !protocolUrlMatch || !this.hasFullProtocolRegex.test( protocolUrlMatch ) ) && urlMatch.indexOf( '.' ) === -1 );\n\t},\n\n\n\t/**\n\t * Determines if a URL match does not have at least one word character after\n\t * the protocol (i.e. in the domain name).\n\t *\n\t * At least one letter character must exist in the domain name after a\n\t * protocol match. Ex: skip over something like \"git:1.0\"\n\t *\n\t * @private\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} protocolUrlMatch The match URL string for a protocol\n\t *   match. Ex: 'http://yahoo.com'. This is used to know whether or not we\n\t *   have a protocol in the URL string, in order to check for a word\n\t *   character after the protocol separator (':').\n\t * @return {Boolean} `true` if the URL match does not have at least one word\n\t *   character in it after the protocol, `false` otherwise.\n\t */\n\turlMatchDoesNotHaveAtLeastOneWordChar : function( urlMatch, protocolUrlMatch ) {\n\t\tif( urlMatch && protocolUrlMatch ) {\n\t\t\treturn !this.hasWordCharAfterProtocolRegex.test( urlMatch );\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n};\n/*global Autolinker */\n/**\n * A truncation feature where the ellipsis will be placed at the end of the URL.\n *\n * @param {String} anchorText\n * @param {Number} truncateLen The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars The characters to place within the url, e.g. \"..\".\n * @return {String} The truncated URL.\n */\nAutolinker.truncate.TruncateEnd = function(anchorText, truncateLen, ellipsisChars){\n\treturn Autolinker.Util.ellipsis( anchorText, truncateLen, ellipsisChars );\n};\n\n/*global Autolinker */\n/**\n * Date: 2015-10-05\n * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)\n *\n * A truncation feature, where the ellipsis will be placed in the dead-center of the URL.\n *\n * @param {String} url             A URL.\n * @param {Number} truncateLen     The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars   The characters to place within the url, e.g. \"..\".\n * @return {String} The truncated URL.\n */\nAutolinker.truncate.TruncateMiddle = function(url, truncateLen, ellipsisChars){\n  if (url.length <= truncateLen) {\n    return url;\n  }\n  var availableLength = truncateLen - ellipsisChars.length;\n  var end = \"\";\n  if (availableLength > 0) {\n    end = url.substr((-1)*Math.floor(availableLength/2));\n  }\n  return (url.substr(0, Math.ceil(availableLength/2)) + ellipsisChars + end).substr(0, truncateLen);\n};\n\n/*global Autolinker */\n/**\n * Date: 2015-10-05\n * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)\n *\n * A truncation feature, where the ellipsis will be placed at a section within\n * the URL making it still somewhat human readable.\n *\n * @param {String} url\t\t\t\t\t\t A URL.\n * @param {Number} truncateLen\t\t The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars\t The characters to place within the url, e.g. \"..\".\n * @return {String} The truncated URL.\n */\nAutolinker.truncate.TruncateSmart = function(url, truncateLen, ellipsisChars){\n\tvar parse_url = function(url){ // Functionality inspired by PHP function of same name\n\t\tvar urlObj = {};\n\t\tvar urlSub = url;\n\t\tvar match = urlSub.match(/^([a-z]+):\\/\\//i);\n\t\tif (match) {\n\t\t\turlObj.scheme = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^(.*?)(?=(\\?|#|\\/|$))/i);\n\t\tif (match) {\n\t\t\turlObj.host = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^\\/(.*?)(?=(\\?|#|$))/i);\n\t\tif (match) {\n\t\t\turlObj.path = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^\\?(.*?)(?=(#|$))/i);\n\t\tif (match) {\n\t\t\turlObj.query = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^#(.*?)$/i);\n\t\tif (match) {\n\t\t\turlObj.fragment = match[1];\n\t\t\t//urlSub = urlSub.substr(match[0].length);  -- not used. Uncomment if adding another block.\n\t\t}\n\t\treturn urlObj;\n\t};\n\n\tvar buildUrl = function(urlObj){\n\t\tvar url = \"\";\n\t\tif (urlObj.scheme && urlObj.host) {\n\t\t\turl += urlObj.scheme + \"://\";\n\t\t}\n\t\tif (urlObj.host) {\n\t\t\turl += urlObj.host;\n\t\t}\n\t\tif (urlObj.path) {\n\t\t\turl += \"/\" + urlObj.path;\n\t\t}\n\t\tif (urlObj.query) {\n\t\t\turl += \"?\" + urlObj.query;\n\t\t}\n\t\tif (urlObj.fragment) {\n\t\t\turl += \"#\" + urlObj.fragment;\n\t\t}\n\t\treturn url;\n\t};\n\n\tvar buildSegment = function(segment, remainingAvailableLength){\n\t\tvar remainingAvailableLengthHalf = remainingAvailableLength/ 2,\n\t\t\t\tstartOffset = Math.ceil(remainingAvailableLengthHalf),\n\t\t\t\tendOffset = (-1)*Math.floor(remainingAvailableLengthHalf),\n\t\t\t\tend = \"\";\n\t\tif (endOffset < 0) {\n\t\t\tend = segment.substr(endOffset);\n\t\t}\n\t\treturn segment.substr(0, startOffset) + ellipsisChars + end;\n\t};\n\tif (url.length <= truncateLen) {\n\t\treturn url;\n\t}\n\tvar availableLength = truncateLen - ellipsisChars.length;\n\tvar urlObj = parse_url(url);\n\t// Clean up the URL\n\tif (urlObj.query) {\n\t\tvar matchQuery = urlObj.query.match(/^(.*?)(?=(\\?|\\#))(.*?)$/i);\n\t\tif (matchQuery) {\n\t\t\t// Malformed URL; two or more \"?\". Removed any content behind the 2nd.\n\t\t\turlObj.query = urlObj.query.substr(0, matchQuery[1].length);\n\t\t\turl = buildUrl(urlObj);\n\t\t}\n\t}\n\tif (url.length <= truncateLen) {\n\t\treturn url;\n\t}\n\tif (urlObj.host) {\n\t\turlObj.host = urlObj.host.replace(/^www\\./, \"\");\n\t\turl = buildUrl(urlObj);\n\t}\n\tif (url.length <= truncateLen) {\n\t\treturn url;\n\t}\n\t// Process and build the URL\n\tvar str = \"\";\n\tif (urlObj.host) {\n\t\tstr += urlObj.host;\n\t}\n\tif (str.length >= availableLength) {\n\t\tif (urlObj.host.length == truncateLen) {\n\t\t\treturn (urlObj.host.substr(0, (truncateLen - ellipsisChars.length)) + ellipsisChars).substr(0, truncateLen);\n\t\t}\n\t\treturn buildSegment(str, availableLength).substr(0, truncateLen);\n\t}\n\tvar pathAndQuery = \"\";\n\tif (urlObj.path) {\n\t\tpathAndQuery += \"/\" + urlObj.path;\n\t}\n\tif (urlObj.query) {\n\t\tpathAndQuery += \"?\" + urlObj.query;\n\t}\n\tif (pathAndQuery) {\n\t\tif ((str+pathAndQuery).length >= availableLength) {\n\t\t\tif ((str+pathAndQuery).length == truncateLen) {\n\t\t\t\treturn (str + pathAndQuery).substr(0, truncateLen);\n\t\t\t}\n\t\t\tvar remainingAvailableLength = availableLength - str.length;\n\t\t\treturn (str + buildSegment(pathAndQuery, remainingAvailableLength)).substr(0, truncateLen);\n\t\t} else {\n\t\t\tstr += pathAndQuery;\n\t\t}\n\t}\n\tif (urlObj.fragment) {\n\t\tvar fragment = \"#\"+urlObj.fragment;\n\t\tif ((str+fragment).length >= availableLength) {\n\t\t\tif ((str+fragment).length == truncateLen) {\n\t\t\t\treturn (str + fragment).substr(0, truncateLen);\n\t\t\t}\n\t\t\tvar remainingAvailableLength2 = availableLength - str.length;\n\t\t\treturn (str + buildSegment(fragment, remainingAvailableLength2)).substr(0, truncateLen);\n\t\t} else {\n\t\t\tstr += fragment;\n\t\t}\n\t}\n\tif (urlObj.scheme && urlObj.host) {\n\t\tvar scheme = urlObj.scheme + \"://\";\n\t\tif ((str+scheme).length < availableLength) {\n\t\t\treturn (scheme + str).substr(0, truncateLen);\n\t\t}\n\t}\n\tif (str.length <= truncateLen) {\n\t\treturn str;\n\t}\n\tvar end = \"\";\n\tif (availableLength > 0) {\n\t\tend = str.substr((-1)*Math.floor(availableLength/2));\n\t}\n\treturn (str.substr(0, Math.ceil(availableLength/2)) + ellipsisChars + end).substr(0, truncateLen);\n};\n\nreturn Autolinker;\n}));\n","'use strict';\n\n/**\n * Local dependencies\n */\n\nvar Ruler      = require('./ruler');\nvar StateBlock = require('./rules_block/state_block');\n\n/**\n * Parser rules\n */\n\nvar _rules = [\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fences',     require('./rules_block/fences'),     [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'blockquote' ] ],\n  [ 'footnote',   require('./rules_block/footnote'),   [ 'paragraph' ] ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'htmlblock',  require('./rules_block/htmlblock'),  [ 'paragraph', 'blockquote' ] ],\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph' ] ],\n  [ 'deflist',    require('./rules_block/deflist'),    [ 'paragraph' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n/**\n * Block Parser class\n *\n * @api private\n */\n\nfunction ParserBlock() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], {\n      alt: (_rules[i][2] || []).slice()\n    });\n  }\n}\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state` Has properties like `src`, `parser`, `options` etc\n * @param  {Number} `startLine`\n * @param  {Number} `endLine`\n * @api private\n */\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var line = startLine;\n  var hasEmptyLines = false;\n  var ok, i;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) {\n      break;\n    }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.tShift[line] < state.blkIndent) {\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) {\n        break;\n      }\n    }\n\n    // set state.tight iff we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n\n      // two empty lines should stop the parser in list mode\n      if (line < endLine && state.parentType === 'list' && state.isEmpty(line)) { break; }\n      state.line = line;\n    }\n  }\n};\n\nvar TABS_SCAN_RE = /[\\n\\t]/g;\nvar NEWLINES_RE  = /\\r[\\n\\u0085]|[\\u2424\\u2028\\u0085]/g;\nvar SPACES_RE    = /\\u00a0/g;\n\n/**\n * Tokenize the given `str`.\n *\n * @param  {String} `str` Source string\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserBlock.prototype.parse = function (str, options, env, outTokens) {\n  var state, lineStart = 0, lastTabPos = 0;\n  if (!str) { return []; }\n\n  // Normalize spaces\n  str = str.replace(SPACES_RE, ' ');\n\n  // Normalize newlines\n  str = str.replace(NEWLINES_RE, '\\n');\n\n  // Replace tabs with proper number of spaces (1..4)\n  if (str.indexOf('\\t') >= 0) {\n    str = str.replace(TABS_SCAN_RE, function (match, offset) {\n      var result;\n      if (str.charCodeAt(offset) === 0x0A) {\n        lineStart = offset + 1;\n        lastTabPos = 0;\n        return match;\n      }\n      result = '    '.slice((offset - lineStart - lastTabPos) % 4);\n      lastTabPos = offset - lineStart + 1;\n      return result;\n    });\n  }\n\n  state = new StateBlock(str, this, options, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n/**\n * Expose `ParserBlock`\n */\n\nmodule.exports = ParserBlock;\n","// Parser state class\n\n'use strict';\n\n\nfunction StateBlock(src, parser, options, env, tokens) {\n  var ch, s, start, pos, len, indent, indent_found;\n\n  this.src = src;\n\n  // Shortcuts to simplify nested calls\n  this.parser = parser;\n\n  this.options = options;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // indent for each line\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent\n                       // (for example, if we are in list)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.parentType = 'root'; // if `list`, block parser stops on two newlines\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent = 0;\n  indent_found = false;\n\n  for (start = pos = indent = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (ch === 0x20/* space */) {\n        indent++;\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n\n      indent_found = false;\n      indent = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== 0x20/* space */) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, first, last, queue, shift,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  // Opt: don't use push queue for single line;\n  if (line + 1 === end) {\n    first = this.bMarks[line] + Math.min(this.tShift[line], indent);\n    last = keepLastLF ? this.eMarks[line] + 1 : this.eMarks[line];\n    return this.src.slice(first, last);\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    shift = this.tShift[line];\n    if (shift > indent) { shift = indent; }\n    if (shift < 0) { shift = 0; }\n\n    first = this.bMarks[line] + shift;\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    queue[i] = this.src.slice(first, last);\n  }\n\n  return queue.join('');\n};\n\n\nmodule.exports = StateBlock;\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last;\n\n  if (state.tShift[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'code',\n    content: state.getLines(startLine, last, 4 + state.blkIndent, true),\n    block: true,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n};\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fences(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  params = state.src.slice(pos, max).trim();\n\n  if (params.indexOf('`') >= 0) { return false; }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.tShift[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.tShift[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.tShift[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  state.tokens.push({\n    type: 'fence',\n    params: params,\n    content: state.getLines(startLine + 1, nextLine, len, true),\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n};\n","// Block quotes\n\n'use strict';\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var nextLine, lastLineEmpty, oldTShift, oldBMarks, oldIndent, oldParentType, lines,\n      terminatorRules,\n      i, l, terminate,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos > max) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  // check if we have an empty blockquote\n  pos = pos < max ? state.skipSpaces(pos) : pos;\n  lastLineEmpty = pos >= max;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.parser.ruler.getRules('blockquote');\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */) {\n      // This line is inside the blockquote.\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      pos = pos < max ? state.skipSpaces(pos) : pos;\n      lastLineEmpty = pos >= max;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n\n    // A negative number means that this is a paragraph continuation;\n    //\n    // Any negative number will do the job here, but it's better for it\n    // to be large enough to make any bugs obvious.\n    state.tShift[nextLine] = -1337;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  state.tokens.push({\n    type: 'blockquote_open',\n    lines: lines = [ startLine, 0 ],\n    level: state.level++\n  });\n  state.parser.tokenize(state, startLine, nextLine);\n  state.tokens.push({\n    type: 'blockquote_close',\n    level: --state.level\n  });\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Horizontal rule\n\n'use strict';\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine];\n\n  pos += state.tShift[startLine];\n\n  if (pos > max) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 one\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && ch !== 0x20/* space */) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n  state.tokens.push({\n    type: 'hr',\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  return true;\n};\n","// Lists\n\n'use strict';\n\n\n// Search `[-+*][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  if (pos >= max) { return -1; }\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos arter marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max && state.src.charCodeAt(pos) !== 0x20/* space */) {\n    // \" 1.test \" - is not a list item\n    return -1;\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var nextLine,\n      indent,\n      oldTShift,\n      oldIndent,\n      oldTight,\n      oldParentType,\n      start,\n      posAfterMarker,\n      max,\n      indentAfterMarker,\n      markerValue,\n      markerCharCode,\n      isOrdered,\n      contentStart,\n      listTokIdx,\n      prevEmptyEnd,\n      listLines,\n      itemLines,\n      tight = true,\n      terminatorRules,\n      i, l, terminate;\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    state.tokens.push({\n      type: 'ordered_list_open',\n      order: markerValue,\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n  } else {\n    state.tokens.push({\n      type: 'bullet_list_open',\n      lines: listLines = [ startLine, 0 ],\n      level: state.level++\n    });\n  }\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.parser.ruler.getRules('list');\n\n  while (nextLine < endLine) {\n    contentStart = state.skipSpaces(posAfterMarker);\n    max = state.eMarks[nextLine];\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = contentStart - posAfterMarker;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // If indent is less than 1, assume that it's one, example:\n    //  \"-\\n  test\"\n    if (indentAfterMarker < 1) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = (posAfterMarker - state.bMarks[nextLine]) + indentAfterMarker;\n\n    // Run subparser & write tokens\n    state.tokens.push({\n      type: 'list_item_open',\n      lines: itemLines = [ startLine, 0 ],\n      level: state.level++\n    });\n\n    oldIndent = state.blkIndent;\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldParentType = state.parentType;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.blkIndent = indent;\n    state.tight = true;\n    state.parentType = 'list';\n\n    state.parser.tokenize(state, startLine, endLine, true);\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = oldIndent;\n    state.tShift[startLine] = oldTShift;\n    state.tight = oldTight;\n    state.parentType = oldParentType;\n\n    state.tokens.push({\n      type: 'list_item_close',\n      level: --state.level\n    });\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    if (state.isEmpty(nextLine)) {\n      break;\n    }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: isOrdered ? 'ordered_list_close' : 'bullet_list_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Process footnote reference list\n\n'use strict';\n\n\nmodule.exports = function footnote(state, startLine, endLine, silent) {\n  var oldBMark, oldTShift, oldParentType, pos, label,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // line should be at least 5 chars - \"[^x]:\"\n  if (start + 4 > max) { return false; }\n\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n  if (silent) { return true; }\n  pos++;\n\n  if (!state.env.footnotes) { state.env.footnotes = {}; }\n  if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n  label = state.src.slice(start + 2, pos - 2);\n  state.env.footnotes.refs[':' + label] = -1;\n\n  state.tokens.push({\n    type: 'footnote_reference_open',\n    label: label,\n    level: state.level++\n  });\n\n  oldBMark = state.bMarks[startLine];\n  oldTShift = state.tShift[startLine];\n  oldParentType = state.parentType;\n  state.tShift[startLine] = state.skipSpaces(pos) - pos;\n  state.bMarks[startLine] = pos;\n  state.blkIndent += 4;\n  state.parentType = 'footnote';\n\n  if (state.tShift[startLine] < state.blkIndent) {\n    state.tShift[startLine] += state.blkIndent;\n    state.bMarks[startLine] -= state.blkIndent;\n  }\n\n  state.parser.tokenize(state, startLine, endLine, true);\n\n  state.parentType = oldParentType;\n  state.blkIndent -= 4;\n  state.tShift[startLine] = oldTShift;\n  state.bMarks[startLine] = oldBMark;\n\n  state.tokens.push({\n    type: 'footnote_reference_close',\n    level: --state.level\n  });\n\n  return true;\n};\n","// heading (#, ##, ...)\n\n'use strict';\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  if (pos >= max) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && ch !== 0x20/* space */)) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipCharsBack(max, 0x20, pos); // space\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && state.src.charCodeAt(tmp - 1) === 0x20/* space */) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  state.tokens.push({ type: 'heading_open',\n    hLevel: level,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n\n  // only if header is not empty\n  if (pos < max) {\n    state.tokens.push({\n      type: 'inline',\n      content: state.src.slice(pos, max).trim(),\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n  }\n  state.tokens.push({ type: 'heading_close', hLevel: level, level: state.level });\n\n  return true;\n};\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var marker, pos, max,\n      next = startLine + 1;\n\n  if (next >= endLine) { return false; }\n  if (state.tShift[next] < state.blkIndent) { return false; }\n\n  // Scan next line\n\n  if (state.tShift[next] - state.blkIndent > 3) { return false; }\n\n  pos = state.bMarks[next] + state.tShift[next];\n  max = state.eMarks[next];\n\n  if (pos >= max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x2D/* - */ && marker !== 0x3D/* = */) { return false; }\n\n  pos = state.skipChars(pos, marker);\n\n  pos = state.skipSpaces(pos);\n\n  if (pos < max) { return false; }\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n\n  state.line = next + 1;\n  state.tokens.push({\n    type: 'heading_open',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    lines: [ startLine, state.line ],\n    level: state.level\n  });\n  state.tokens.push({\n    type: 'inline',\n    content: state.src.slice(pos, state.eMarks[startLine]).trim(),\n    level: state.level + 1,\n    lines: [ startLine, state.line - 1 ],\n    children: []\n  });\n  state.tokens.push({\n    type: 'heading_close',\n    hLevel: marker === 0x3D/* = */ ? 1 : 2,\n    level: state.level\n  });\n\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\n\n\nvar HTML_TAG_OPEN_RE = /^<([a-zA-Z]{1,15})[\\s\\/>]/;\nvar HTML_TAG_CLOSE_RE = /^<\\/([a-zA-Z]{1,15})[\\s>]/;\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\nmodule.exports = function htmlblock(state, startLine, endLine, silent) {\n  var ch, match, nextLine,\n      pos = state.bMarks[startLine],\n      max = state.eMarks[startLine],\n      shift = state.tShift[startLine];\n\n  pos += shift;\n\n  if (!state.options.html) { return false; }\n\n  if (shift > 3 || pos + 2 >= max) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x21/* ! */ || ch === 0x3F/* ? */) {\n    // Directive start / comment start / processing instruction start\n    if (silent) { return true; }\n\n  } else if (ch === 0x2F/* / */ || isLetter(ch)) {\n\n    // Probably start or end of tag\n    if (ch === 0x2F/* \\ */) {\n      // closing tag\n      match = state.src.slice(pos, max).match(HTML_TAG_CLOSE_RE);\n      if (!match) { return false; }\n    } else {\n      // opening tag\n      match = state.src.slice(pos, max).match(HTML_TAG_OPEN_RE);\n      if (!match) { return false; }\n    }\n    // Make sure tag name is valid\n    if (block_names[match[1].toLowerCase()] !== true) { return false; }\n    if (silent) { return true; }\n\n  } else {\n    return false;\n  }\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till empty line (block end).\n  nextLine = startLine + 1;\n  while (nextLine < state.lineMax && !state.isEmpty(nextLine)) {\n    nextLine++;\n  }\n\n  state.line = nextLine;\n  state.tokens.push({\n    type: 'htmlblock',\n    level: state.level,\n    lines: [ startLine, state.line ],\n    content: state.getLines(startLine, nextLine, 0, true)\n  });\n\n  return true;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\nvar html_blocks = {};\n\n[\n  'article',\n  'aside',\n  'button',\n  'blockquote',\n  'body',\n  'canvas',\n  'caption',\n  'col',\n  'colgroup',\n  'dd',\n  'div',\n  'dl',\n  'dt',\n  'embed',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'header',\n  'hgroup',\n  'hr',\n  'iframe',\n  'li',\n  'map',\n  'object',\n  'ol',\n  'output',\n  'p',\n  'pre',\n  'progress',\n  'script',\n  'section',\n  'style',\n  'table',\n  'tbody',\n  'td',\n  'textarea',\n  'tfoot',\n  'th',\n  'tr',\n  'thead',\n  'ul',\n  'video'\n].forEach(function (name) { html_blocks[name] = true; });\n\n\nmodule.exports = html_blocks;\n","// GFM table, non-standard\n\n'use strict';\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, rows, cell,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least three lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\n\n  // first character of the second line should be '|' or '-'\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  lineText = getLine(state, startLine + 1);\n  if (!/^[-:| ]+$/.test(lineText)) { return false; }\n\n  rows = lineText.split('|');\n  if (rows <= 2) { return false; }\n  aligns = [];\n  for (i = 0; i < rows.length; i++) {\n    t = rows[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === rows.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n  if (aligns.length !== rows.length) { return false; }\n  if (silent) { return true; }\n\n  state.tokens.push({\n    type: 'table_open',\n    lines: tableLines = [ startLine, 0 ],\n    level: state.level++\n  });\n  state.tokens.push({\n    type: 'thead_open',\n    lines: [ startLine, startLine + 1 ],\n    level: state.level++\n  });\n\n  state.tokens.push({\n    type: 'tr_open',\n    lines: [ startLine, startLine + 1 ],\n    level: state.level++\n  });\n  for (i = 0; i < rows.length; i++) {\n    state.tokens.push({\n      type: 'th_open',\n      align: aligns[i],\n      lines: [ startLine, startLine + 1 ],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: rows[i].trim(),\n      lines: [ startLine, startLine + 1 ],\n      level: state.level,\n      children: []\n    });\n    state.tokens.push({ type: 'th_close', level: --state.level });\n  }\n  state.tokens.push({ type: 'tr_close', level: --state.level });\n  state.tokens.push({ type: 'thead_close', level: --state.level });\n\n  state.tokens.push({\n    type: 'tbody_open',\n    lines: tbodyLines = [ startLine + 2, 0 ],\n    level: state.level++\n  });\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.tShift[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    rows = lineText.replace(/^\\||\\|$/g, '').split('|');\n\n    state.tokens.push({ type: 'tr_open', level: state.level++ });\n    for (i = 0; i < rows.length; i++) {\n      state.tokens.push({ type: 'td_open', align: aligns[i], level: state.level++ });\n      // 0x7c === '|'\n      cell = rows[i].substring(\n          rows[i].charCodeAt(0) === 0x7c ? 1 : 0,\n          rows[i].charCodeAt(rows[i].length - 1) === 0x7c ? rows[i].length - 1 : rows[i].length\n      ).trim();\n      state.tokens.push({\n        type: 'inline',\n        content: cell,\n        level: state.level,\n        children: []\n      });\n      state.tokens.push({ type: 'td_close', level: --state.level });\n    }\n    state.tokens.push({ type: 'tr_close', level: --state.level });\n  }\n  state.tokens.push({ type: 'tbody_close', level: --state.level });\n  state.tokens.push({ type: 'table_close', level: --state.level });\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n","// Definition lists\n\n'use strict';\n\n\n// Search `[:~][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipMarker(state, line) {\n  var pos, marker,\n      start = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n\n  if (start >= max) { return -1; }\n\n  // Check bullet\n  marker = state.src.charCodeAt(start++);\n  if (marker !== 0x7E/* ~ */ && marker !== 0x3A/* : */) { return -1; }\n\n  pos = state.skipSpaces(start);\n\n  // require space after \":\"\n  if (start === pos) { return -1; }\n\n  // no empty definitions, e.g. \"  : \"\n  if (pos >= max) { return -1; }\n\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].tight = true;\n      state.tokens[i].tight = true;\n      i += 2;\n    }\n  }\n}\n\nmodule.exports = function deflist(state, startLine, endLine, silent) {\n  var contentStart,\n      ddLine,\n      dtLine,\n      itemLines,\n      listLines,\n      listTokIdx,\n      nextLine,\n      oldIndent,\n      oldDDIndent,\n      oldParentType,\n      oldTShift,\n      oldTight,\n      prevEmptyEnd,\n      tight;\n\n  if (silent) {\n    // quirk: validation mode validates a dd block only, not a whole deflist\n    if (state.ddIndent < 0) { return false; }\n    return skipMarker(state, startLine) >= 0;\n  }\n\n  nextLine = startLine + 1;\n  if (state.isEmpty(nextLine)) {\n    if (++nextLine > endLine) { return false; }\n  }\n\n  if (state.tShift[nextLine] < state.blkIndent) { return false; }\n  contentStart = skipMarker(state, nextLine);\n  if (contentStart < 0) { return false; }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  state.tokens.push({\n    type: 'dl_open',\n    lines: listLines = [ startLine, 0 ],\n    level: state.level++\n  });\n\n  //\n  // Iterate list items\n  //\n\n  dtLine = startLine;\n  ddLine = nextLine;\n\n  // One definition list can contain multiple DTs,\n  // and one DT can be followed by multiple DDs.\n  //\n  // Thus, there is two loops here, and label is\n  // needed to break out of the second one\n  //\n  /*eslint no-labels:0,block-scoped-var:0*/\n  OUTER:\n  for (;;) {\n    tight = true;\n    prevEmptyEnd = false;\n\n    state.tokens.push({\n      type: 'dt_open',\n      lines: [ dtLine, dtLine ],\n      level: state.level++\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: state.getLines(dtLine, dtLine + 1, state.blkIndent, false).trim(),\n      level: state.level + 1,\n      lines: [ dtLine, dtLine ],\n      children: []\n    });\n    state.tokens.push({\n      type: 'dt_close',\n      level: --state.level\n    });\n\n    for (;;) {\n      state.tokens.push({\n        type: 'dd_open',\n        lines: itemLines = [ nextLine, 0 ],\n        level: state.level++\n      });\n\n      oldTight = state.tight;\n      oldDDIndent = state.ddIndent;\n      oldIndent = state.blkIndent;\n      oldTShift = state.tShift[ddLine];\n      oldParentType = state.parentType;\n      state.blkIndent = state.ddIndent = state.tShift[ddLine] + 2;\n      state.tShift[ddLine] = contentStart - state.bMarks[ddLine];\n      state.tight = true;\n      state.parentType = 'deflist';\n\n      state.parser.tokenize(state, ddLine, endLine, true);\n\n      // If any of list item is tight, mark list as tight\n      if (!state.tight || prevEmptyEnd) {\n        tight = false;\n      }\n      // Item become loose if finish with empty line,\n      // but we should filter last element, because it means list finish\n      prevEmptyEnd = (state.line - ddLine) > 1 && state.isEmpty(state.line - 1);\n\n      state.tShift[ddLine] = oldTShift;\n      state.tight = oldTight;\n      state.parentType = oldParentType;\n      state.blkIndent = oldIndent;\n      state.ddIndent = oldDDIndent;\n\n      state.tokens.push({\n        type: 'dd_close',\n        level: --state.level\n      });\n\n      itemLines[1] = nextLine = state.line;\n\n      if (nextLine >= endLine) { break OUTER; }\n\n      if (state.tShift[nextLine] < state.blkIndent) { break OUTER; }\n      contentStart = skipMarker(state, nextLine);\n      if (contentStart < 0) { break; }\n\n      ddLine = nextLine;\n\n      // go to the next loop iteration:\n      // insert DD tag and repeat checking\n    }\n\n    if (nextLine >= endLine) { break; }\n    dtLine = nextLine;\n\n    if (state.isEmpty(dtLine)) { break; }\n    if (state.tShift[dtLine] < state.blkIndent) { break; }\n\n    ddLine = dtLine + 1;\n    if (ddLine >= endLine) { break; }\n    if (state.isEmpty(ddLine)) { ddLine++; }\n    if (ddLine >= endLine) { break; }\n\n    if (state.tShift[ddLine] < state.blkIndent) { break; }\n    contentStart = skipMarker(state, ddLine);\n    if (contentStart < 0) { break; }\n\n    // go to the next loop iteration:\n    // insert DT and DD tags and repeat checking\n  }\n\n  // Finilize list\n  state.tokens.push({\n    type: 'dl_close',\n    level: --state.level\n  });\n  listLines[1] = nextLine;\n\n  state.line = nextLine;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var endLine, content, terminate, i, l,\n      nextLine = startLine + 1,\n      terminatorRules;\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  if (nextLine < endLine && !state.isEmpty(nextLine)) {\n    terminatorRules = state.parser.ruler.getRules('paragraph');\n\n    for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n      // this would be a code block normally, but after paragraph\n      // it's considered a lazy continuation regardless of what's there\n      if (state.tShift[nextLine] - state.blkIndent > 3) { continue; }\n\n      // Some tags can terminate paragraph without empty line.\n      terminate = false;\n      for (i = 0, l = terminatorRules.length; i < l; i++) {\n        if (terminatorRules[i](state, nextLine, endLine, true)) {\n          terminate = true;\n          break;\n        }\n      }\n      if (terminate) { break; }\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n  if (content.length) {\n    state.tokens.push({\n      type: 'paragraph_open',\n      tight: false,\n      lines: [ startLine, state.line ],\n      level: state.level\n    });\n    state.tokens.push({\n      type: 'inline',\n      content: content,\n      level: state.level + 1,\n      lines: [ startLine, state.line ],\n      children: []\n    });\n    state.tokens.push({\n      type: 'paragraph_close',\n      tight: false,\n      level: state.level\n    });\n  }\n\n  return true;\n};\n","'use strict';\n\n/**\n * Local dependencies\n */\n\nvar Ruler       = require('./ruler');\nvar StateInline = require('./rules_inline/state_inline');\nvar utils       = require('./common/utils');\n\n/**\n * Inline Parser `rules`\n */\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'del',             require('./rules_inline/del') ],\n  [ 'ins',             require('./rules_inline/ins') ],\n  [ 'mark',            require('./rules_inline/mark') ],\n  [ 'emphasis',        require('./rules_inline/emphasis') ],\n  [ 'sub',             require('./rules_inline/sub') ],\n  [ 'sup',             require('./rules_inline/sup') ],\n  [ 'links',           require('./rules_inline/links') ],\n  [ 'footnote_inline', require('./rules_inline/footnote_inline') ],\n  [ 'footnote_ref',    require('./rules_inline/footnote_ref') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'htmltag',         require('./rules_inline/htmltag') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\n/**\n * Inline Parser class. Note that link validation is stricter\n * in Remarkable than what is specified by CommonMark. If you\n * want to change this you can use a custom validator.\n *\n * @api private\n */\n\nfunction ParserInline() {\n  this.ruler = new Ruler();\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  // Can be overridden with a custom validator\n  this.validateLink = validateLink;\n}\n\n/**\n * Skip a single token by running all rules in validation mode.\n * Returns `true` if any rule reports success.\n *\n * @param  {Object} `state`\n * @api privage\n */\n\nParserInline.prototype.skipToken = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var pos = state.pos;\n  var i, cached_pos;\n\n  if ((cached_pos = state.cacheGet(pos)) > 0) {\n    state.pos = cached_pos;\n    return;\n  }\n\n  for (i = 0; i < len; i++) {\n    if (rules[i](state, true)) {\n      state.cacheSet(pos, state.pos);\n      return;\n    }\n  }\n\n  state.pos++;\n  state.cacheSet(pos, state.pos);\n};\n\n/**\n * Generate tokens for the given input range.\n *\n * @param  {Object} `state`\n * @api private\n */\n\nParserInline.prototype.tokenize = function (state) {\n  var rules = this.ruler.getRules('');\n  var len = rules.length;\n  var end = state.posMax;\n  var ok, i;\n\n  while (state.pos < end) {\n\n    // Try all possible rules.\n    // On success, the rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, false);\n\n      if (ok) {\n        break;\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n/**\n * Parse the given input string.\n *\n * @param  {String} `str`\n * @param  {Object} `options`\n * @param  {Object} `env`\n * @param  {Array} `outTokens`\n * @api private\n */\n\nParserInline.prototype.parse = function (str, options, env, outTokens) {\n  var state = new StateInline(str, this, options, env, outTokens);\n  this.tokenize(state);\n};\n\n/**\n * Validate the given `url` by checking for bad protocols.\n *\n * @param  {String} `url`\n * @return {Boolean}\n */\n\nfunction validateLink(url) {\n  var BAD_PROTOCOLS = [ 'vbscript', 'javascript', 'file', 'data' ];\n  var str = url.trim().toLowerCase();\n  // Care about digital entities \"javascript&#x3A;alert(1)\"\n  str = utils.replaceEntities(str);\n  if (str.indexOf(':') !== -1 && BAD_PROTOCOLS.indexOf(str.split(':')[0]) !== -1) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Expose `ParserInline`\n */\n\nmodule.exports = ParserInline;\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x5C/* \\ */:\n    case 0x60/* ` */:\n    case 0x2A/* * */:\n    case 0x5F/* _ */:\n    case 0x5E/* ^ */:\n    case 0x5B/* [ */:\n    case 0x5D/* ] */:\n    case 0x21/* ! */:\n    case 0x26/* & */:\n    case 0x3C/* < */:\n    case 0x3E/* > */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x40/* @ */:\n    case 0x7E/* ~ */:\n    case 0x2B/* + */:\n    case 0x3D/* = */:\n    case 0x3A/* : */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Strip out all trailing spaces on this line.\n        for (var i = pmax - 2; i >= 0; i--) {\n          if (state.pending.charCodeAt(i) !== 0x20) {\n            state.pending = state.pending.substring(0, i + 1);\n            break;\n          }\n        }\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push({\n          type: 'softbreak',\n          level: state.level\n        });\n      }\n\n    } else {\n      state.push({\n        type: 'softbreak',\n        level: state.level\n      });\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Proceess escaped chars and hardbreaks\n\n'use strict';\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function(ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push({\n          type: 'hardbreak',\n          level: state.level\n        });\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max && state.src.charCodeAt(pos) === 0x20) { pos++; }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backticks(state, silent) {\n  var start, max, marker, matchStart, matchEnd,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        state.push({\n          type: 'code',\n          content: state.src.slice(pos, matchStart)\n                              .replace(/[ \\n]+/g, ' ')\n                              .trim(),\n          block: false,\n          level: state.level\n        });\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// Process ~~deleted text~~\n\n'use strict';\n\nmodule.exports = function del(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x7E/* ~ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x7E/* ~ */) { return false; }\n  if (nextChar === 0x7E/* ~ */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x7E/* ~ */) { pos++; }\n  if (pos > start + 3) {\n    // sequence of 4+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x7E/* ~ */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x7E/* ~ */ && lastChar !== 0x7E/* ~ */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '~~'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '~~'\n            stack++;\n          } // else {\n            //  // standalone ' ~~ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'del_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'del_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n};\n","// Process ++inserted text++\n\n'use strict';\n\nmodule.exports = function ins(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x2B/* + */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x2B/* + */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x2B/* + */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x2B/* + */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x2B/* + */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x2B/* + */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x2B/* + */ && lastChar !== 0x2B/* + */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '++'\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '++'\n            stack++;\n          } // else {\n            //  // standalone ' ++ ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'ins_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'ins_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n};\n","// Process ==highlighted text==\n\n'use strict';\n\nmodule.exports = function del(state, silent) {\n  var found,\n      pos,\n      stack,\n      max = state.posMax,\n      start = state.pos,\n      lastChar,\n      nextChar;\n\n  if (state.src.charCodeAt(start) !== 0x3D/* = */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 4 >= max) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x3D/* = */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n  nextChar = state.src.charCodeAt(start + 2);\n\n  if (lastChar === 0x3D/* = */) { return false; }\n  if (nextChar === 0x3D/* = */) { return false; }\n  if (nextChar === 0x20 || nextChar === 0x0A) { return false; }\n\n  pos = start + 2;\n  while (pos < max && state.src.charCodeAt(pos) === 0x3D/* = */) { pos++; }\n  if (pos !== start + 2) {\n    // sequence of 3+ markers taking as literal, same as in a emphasis\n    state.pos += pos - start;\n    if (!silent) { state.pending += state.src.slice(start, pos); }\n    return true;\n  }\n\n  state.pos = start + 2;\n  stack = 1;\n\n  while (state.pos + 1 < max) {\n    if (state.src.charCodeAt(state.pos) === 0x3D/* = */) {\n      if (state.src.charCodeAt(state.pos + 1) === 0x3D/* = */) {\n        lastChar = state.src.charCodeAt(state.pos - 1);\n        nextChar = state.pos + 2 < max ? state.src.charCodeAt(state.pos + 2) : -1;\n        if (nextChar !== 0x3D/* = */ && lastChar !== 0x3D/* = */) {\n          if (lastChar !== 0x20 && lastChar !== 0x0A) {\n            // closing '=='\n            stack--;\n          } else if (nextChar !== 0x20 && nextChar !== 0x0A) {\n            // opening '=='\n            stack++;\n          } // else {\n            //  // standalone ' == ' indented with spaces\n            // }\n          if (stack <= 0) {\n            found = true;\n            break;\n          }\n        }\n      }\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 2;\n\n  if (!silent) {\n    state.push({ type: 'mark_open', level: state.level++ });\n    state.parser.tokenize(state);\n    state.push({ type: 'mark_close', level: --state.level });\n  }\n\n  state.pos = state.posMax + 2;\n  state.posMax = max;\n  return true;\n};\n","// Process *this* and _that_\n\n'use strict';\n\n\nfunction isAlphaNum(code) {\n  return (code >= 0x30 /* 0 */ && code <= 0x39 /* 9 */) ||\n         (code >= 0x41 /* A */ && code <= 0x5A /* Z */) ||\n         (code >= 0x61 /* a */ && code <= 0x7A /* z */);\n}\n\n// parse sequence of emphasis markers,\n// \"start\" should point at a valid marker\nfunction scanDelims(state, start) {\n  var pos = start, lastChar, nextChar, count,\n      can_open = true,\n      can_close = true,\n      max = state.posMax,\n      marker = state.src.charCodeAt(start);\n\n  lastChar = start > 0 ? state.src.charCodeAt(start - 1) : -1;\n\n  while (pos < max && state.src.charCodeAt(pos) === marker) { pos++; }\n  if (pos >= max) { can_open = false; }\n  count = pos - start;\n\n  if (count >= 4) {\n    // sequence of four or more unescaped markers can't start/end an emphasis\n    can_open = can_close = false;\n  } else {\n    nextChar = pos < max ? state.src.charCodeAt(pos) : -1;\n\n    // check whitespace conditions\n    if (nextChar === 0x20 || nextChar === 0x0A) { can_open = false; }\n    if (lastChar === 0x20 || lastChar === 0x0A) { can_close = false; }\n\n    if (marker === 0x5F /* _ */) {\n      // check if we aren't inside the word\n      if (isAlphaNum(lastChar)) { can_open = false; }\n      if (isAlphaNum(nextChar)) { can_close = false; }\n    }\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    delims: count\n  };\n}\n\nmodule.exports = function emphasis(state, silent) {\n  var startCount,\n      count,\n      found,\n      oldCount,\n      newCount,\n      stack,\n      res,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker !== 0x5F/* _ */ && marker !== 0x2A /* * */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n\n  res = scanDelims(state, start);\n  startCount = res.delims;\n  if (!res.can_open) {\n    state.pos += startCount;\n    if (!silent) { state.pending += state.src.slice(start, state.pos); }\n    return true;\n  }\n\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + startCount;\n  stack = [ startCount ];\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === marker) {\n      res = scanDelims(state, state.pos);\n      count = res.delims;\n      if (res.can_close) {\n        oldCount = stack.pop();\n        newCount = count;\n\n        while (oldCount !== newCount) {\n          if (newCount < oldCount) {\n            stack.push(oldCount - newCount);\n            break;\n          }\n\n          // assert(newCount > oldCount)\n          newCount -= oldCount;\n\n          if (stack.length === 0) { break; }\n          state.pos += oldCount;\n          oldCount = stack.pop();\n        }\n\n        if (stack.length === 0) {\n          startCount = oldCount;\n          found = true;\n          break;\n        }\n        state.pos += count;\n        continue;\n      }\n\n      if (res.can_open) { stack.push(count); }\n      state.pos += count;\n      continue;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found) {\n    // parser failed to find ending tag, so it's not valid emphasis\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + startCount;\n\n  if (!silent) {\n    if (startCount === 2 || startCount === 3) {\n      state.push({ type: 'strong_open', level: state.level++ });\n    }\n    if (startCount === 1 || startCount === 3) {\n      state.push({ type: 'em_open', level: state.level++ });\n    }\n\n    state.parser.tokenize(state);\n\n    if (startCount === 1 || startCount === 3) {\n      state.push({ type: 'em_close', level: --state.level });\n    }\n    if (startCount === 2 || startCount === 3) {\n      state.push({ type: 'strong_close', level: --state.level });\n    }\n  }\n\n  state.pos = state.posMax + startCount;\n  state.posMax = max;\n  return true;\n};\n","// Process ~subscript~\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nmodule.exports = function sub(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x7E/* ~ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x7E/* ~ */) {\n      found = true;\n      break;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sub',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n};\n","// Process ^superscript^\n\n'use strict';\n\n// same as UNESCAPE_MD_RE plus a space\nvar UNESCAPE_RE = /\\\\([ \\\\!\"#$%&'()*+,.\\/:;<=>?@[\\]^_`{|}~-])/g;\n\nmodule.exports = function sup(state, silent) {\n  var found,\n      content,\n      max = state.posMax,\n      start = state.pos;\n\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (silent) { return false; } // don't run any pairs in validation mode\n  if (start + 2 >= max) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  state.pos = start + 1;\n\n  while (state.pos < max) {\n    if (state.src.charCodeAt(state.pos) === 0x5E/* ^ */) {\n      found = true;\n      break;\n    }\n\n    state.parser.skipToken(state);\n  }\n\n  if (!found || start + 1 === state.pos) {\n    state.pos = start;\n    return false;\n  }\n\n  content = state.src.slice(start + 1, state.pos);\n\n  // don't allow unescaped spaces/newlines inside\n  if (content.match(/(^|[^\\\\])(\\\\\\\\)*\\s/)) {\n    state.pos = start;\n    return false;\n  }\n\n  // found!\n  state.posMax = state.pos;\n  state.pos = start + 1;\n\n  if (!silent) {\n    state.push({\n      type: 'sup',\n      level: state.level,\n      content: content.replace(UNESCAPE_RE, '$1')\n    });\n  }\n\n  state.pos = state.posMax + 1;\n  state.posMax = max;\n  return true;\n};\n","// Process [links](<to> \"stuff\")\n\n'use strict';\n\nvar parseLinkLabel       = require('../helpers/parse_link_label');\nvar parseLinkDestination = require('../helpers/parse_link_destination');\nvar parseLinkTitle       = require('../helpers/parse_link_title');\nvar normalizeReference   = require('../helpers/normalize_reference');\n\n\nmodule.exports = function links(state, silent) {\n  var labelStart,\n      labelEnd,\n      label,\n      href,\n      title,\n      pos,\n      ref,\n      code,\n      isImage = false,\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (marker === 0x21/* ! */) {\n    isImage = true;\n    marker = state.src.charCodeAt(++start);\n  }\n\n  if (marker !== 0x5B/* [ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  labelStart = start + 1;\n  labelEnd = parseLinkLabel(state, start);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    if (parseLinkDestination(state, pos)) {\n      href = state.linkContent;\n      pos = state.pos;\n    } else {\n      href = '';\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    if (pos < max && start !== pos && parseLinkTitle(state, pos)) {\n      title = state.linkContent;\n      pos = state.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (code !== 0x20 && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n\n    // do not allow nested reference links\n    if (state.linkLevel > 0) { return false; }\n\n    // [foo]  [bar]\n    //      ^^ optional whitespace (can include newlines)\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (code !== 0x20 && code !== 0x0A) { break; }\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = start - 1;\n      }\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) {\n      if (typeof label === 'undefined') {\n        pos = labelEnd + 1;\n      }\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    if (isImage) {\n      state.push({\n        type: 'image',\n        src: href,\n        title: title,\n        alt: state.src.substr(labelStart, labelEnd - labelStart),\n        level: state.level\n      });\n    } else {\n      state.push({\n        type: 'link_open',\n        href: href,\n        title: title,\n        level: state.level++\n      });\n      state.linkLevel++;\n      state.parser.tokenize(state);\n      state.linkLevel--;\n      state.push({ type: 'link_close', level: --state.level });\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process inline footnotes (^[...])\n\n'use strict';\n\nvar parseLinkLabel = require('../helpers/parse_link_label');\n\n\nmodule.exports = function footnote_inline(state, silent) {\n  var labelStart,\n      labelEnd,\n      footnoteId,\n      oldLength,\n      max = state.posMax,\n      start = state.pos;\n\n  if (start + 2 >= max) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  labelStart = start + 2;\n  labelEnd = parseLinkLabel(state, start + 1);\n\n  // parser failed to find ']', so it's not a valid note\n  if (labelEnd < 0) { return false; }\n\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n    footnoteId = state.env.footnotes.list.length;\n\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      level: state.level\n    });\n    state.linkLevel++;\n    oldLength = state.tokens.length;\n    state.parser.tokenize(state);\n    state.env.footnotes.list[footnoteId] = { tokens: state.tokens.splice(oldLength) };\n    state.linkLevel--;\n  }\n\n  state.pos = labelEnd + 1;\n  state.posMax = max;\n  return true;\n};\n","// Process footnote references ([^...])\n\n'use strict';\n\n\nmodule.exports = function footnote_ref(state, silent) {\n  var label,\n      pos,\n      footnoteId,\n      footnoteSubId,\n      max = state.posMax,\n      start = state.pos;\n\n  // should be at least 4 chars - \"[^x]\"\n  if (start + 3 > max) { return false; }\n\n  if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n  if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n  if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n  if (state.level >= state.options.maxNesting) { return false; }\n\n  for (pos = start + 2; pos < max; pos++) {\n    if (state.src.charCodeAt(pos) === 0x20) { return false; }\n    if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n      break;\n    }\n  }\n\n  if (pos === start + 2) { return false; } // no empty footnote labels\n  if (pos >= max) { return false; }\n  pos++;\n\n  label = state.src.slice(start + 2, pos - 1);\n  if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n  if (!silent) {\n    if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n    if (state.env.footnotes.refs[':' + label] < 0) {\n      footnoteId = state.env.footnotes.list.length;\n      state.env.footnotes.list[footnoteId] = { label: label, count: 0 };\n      state.env.footnotes.refs[':' + label] = footnoteId;\n    } else {\n      footnoteId = state.env.footnotes.refs[':' + label];\n    }\n\n    footnoteSubId = state.env.footnotes.list[footnoteId].count;\n    state.env.footnotes.list[footnoteId].count++;\n\n    state.push({\n      type: 'footnote_ref',\n      id: footnoteId,\n      subId: footnoteSubId,\n      level: state.level\n    });\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\nvar url_schemas   = require('../common/url_schemas');\nvar normalizeLink = require('../helpers/normalize_link');\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z.\\-]{1,25}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  linkMatch = tail.match(AUTOLINK_RE);\n\n  if (linkMatch) {\n    if (url_schemas.indexOf(linkMatch[1].toLowerCase()) < 0) { return false; }\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = normalizeLink(url);\n    if (!state.parser.validateLink(url)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  emailMatch = tail.match(EMAIL_RE);\n\n  if (emailMatch) {\n\n    url = emailMatch[0].slice(1, -1);\n\n    fullUrl = normalizeLink('mailto:' + url);\n    if (!state.parser.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      state.push({\n        type: 'link_open',\n        href: fullUrl,\n        level: state.level\n      });\n      state.push({\n        type: 'text',\n        content: url,\n        level: state.level + 1\n      });\n      state.push({ type: 'link_close', level: state.level });\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","// List of valid url schemas, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#autolinks\n\n'use strict';\n\n\nmodule.exports = [\n  'coap',\n  'doi',\n  'javascript',\n  'aaa',\n  'aaas',\n  'about',\n  'acap',\n  'cap',\n  'cid',\n  'crid',\n  'data',\n  'dav',\n  'dict',\n  'dns',\n  'file',\n  'ftp',\n  'geo',\n  'go',\n  'gopher',\n  'h323',\n  'http',\n  'https',\n  'iax',\n  'icap',\n  'im',\n  'imap',\n  'info',\n  'ipp',\n  'iris',\n  'iris.beep',\n  'iris.xpc',\n  'iris.xpcs',\n  'iris.lwz',\n  'ldap',\n  'mailto',\n  'mid',\n  'msrp',\n  'msrps',\n  'mtqp',\n  'mupdate',\n  'news',\n  'nfs',\n  'ni',\n  'nih',\n  'nntp',\n  'opaquelocktoken',\n  'pop',\n  'pres',\n  'rtsp',\n  'service',\n  'session',\n  'shttp',\n  'sieve',\n  'sip',\n  'sips',\n  'sms',\n  'snmp',\n  'soap.beep',\n  'soap.beeps',\n  'tag',\n  'tel',\n  'telnet',\n  'tftp',\n  'thismessage',\n  'tn3270',\n  'tip',\n  'tv',\n  'urn',\n  'vemmi',\n  'ws',\n  'wss',\n  'xcon',\n  'xcon-userid',\n  'xmlrpc.beep',\n  'xmlrpc.beeps',\n  'xmpp',\n  'z39.50r',\n  'z39.50s',\n  'adiumxtra',\n  'afp',\n  'afs',\n  'aim',\n  'apt',\n  'attachment',\n  'aw',\n  'beshare',\n  'bitcoin',\n  'bolo',\n  'callto',\n  'chrome',\n  'chrome-extension',\n  'com-eventbrite-attendee',\n  'content',\n  'cvs',\n  'dlna-playsingle',\n  'dlna-playcontainer',\n  'dtn',\n  'dvb',\n  'ed2k',\n  'facetime',\n  'feed',\n  'finger',\n  'fish',\n  'gg',\n  'git',\n  'gizmoproject',\n  'gtalk',\n  'hcp',\n  'icon',\n  'ipn',\n  'irc',\n  'irc6',\n  'ircs',\n  'itms',\n  'jar',\n  'jms',\n  'keyparc',\n  'lastfm',\n  'ldaps',\n  'magnet',\n  'maps',\n  'market',\n  'message',\n  'mms',\n  'ms-help',\n  'msnim',\n  'mumble',\n  'mvn',\n  'notes',\n  'oid',\n  'palm',\n  'paparazzi',\n  'platform',\n  'proxy',\n  'psyc',\n  'query',\n  'res',\n  'resource',\n  'rmi',\n  'rsync',\n  'rtmp',\n  'secondlife',\n  'sftp',\n  'sgn',\n  'skype',\n  'smb',\n  'soldat',\n  'spotify',\n  'ssh',\n  'steam',\n  'svn',\n  'teamspeak',\n  'things',\n  'udp',\n  'unreal',\n  'ut2004',\n  'ventrilo',\n  'view-source',\n  'webcal',\n  'wtai',\n  'wyciwyg',\n  'xfire',\n  'xri',\n  'ymsgr'\n];\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function htmltag(state, silent) {\n  var ch, match, max, pos = state.pos;\n\n  if (!state.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    state.push({\n      type: 'htmltag',\n      content: state.src.slice(pos, pos + match[0].length),\n      level: state.level\n    });\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","// Regexps to match html elements\n\n'use strict';\n\n\nfunction replace(regex, options) {\n  regex = regex.source;\n  options = options || '';\n\n  return function self(name, val) {\n    if (!name) {\n      return new RegExp(regex, options);\n    }\n    val = val.source || val;\n    regex = regex.replace(name, val);\n    return self;\n  };\n}\n\n\nvar attr_name     = /[a-zA-Z_:][a-zA-Z0-9:._-]*/;\n\nvar unquoted      = /[^\"'=<>`\\x00-\\x20]+/;\nvar single_quoted = /'[^']*'/;\nvar double_quoted = /\"[^\"]*\"/;\n\n/*eslint no-spaced-func:0*/\nvar attr_value  = replace(/(?:unquoted|single_quoted|double_quoted)/)\n                    ('unquoted', unquoted)\n                    ('single_quoted', single_quoted)\n                    ('double_quoted', double_quoted)\n                    ();\n\nvar attribute   = replace(/(?:\\s+attr_name(?:\\s*=\\s*attr_value)?)/)\n                    ('attr_name', attr_name)\n                    ('attr_value', attr_value)\n                    ();\n\nvar open_tag    = replace(/<[A-Za-z][A-Za-z0-9]*attribute*\\s*\\/?>/)\n                    ('attribute', attribute)\n                    ();\n\nvar close_tag   = /<\\/[A-Za-z][A-Za-z0-9]*\\s*>/;\nvar comment     = /<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->/;\nvar processing  = /<[?].*?[?]>/;\nvar declaration = /<![A-Z]+\\s+[^>]*>/;\nvar cdata       = /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/;\n\nvar HTML_TAG_RE = replace(/^(?:open_tag|close_tag|comment|processing|declaration|cdata)/)\n  ('open_tag', open_tag)\n  ('close_tag', close_tag)\n  ('comment', comment)\n  ('processing', processing)\n  ('declaration', declaration)\n  ('cdata', cdata)\n  ();\n\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,8}|[0-9]{1,8}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// Remarkable default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'block',\n        'inline',\n        'references',\n        'replacements',\n        'linkify',\n        'smartquotes',\n        'references',\n        'abbr2',\n        'footnote_tail'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fences',\n        'footnote',\n        'heading',\n        'hr',\n        'htmlblock',\n        'lheading',\n        'list',\n        'paragraph',\n        'table'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'del',\n        'emphasis',\n        'entity',\n        'escape',\n        'footnote_ref',\n        'htmltag',\n        'links',\n        'newline',\n        'text'\n      ]\n    }\n  }\n};\n","// Remarkable default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes:       '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight:     null,\n\n    maxNesting:    20            // Internal protection, recursion limit\n  },\n\n  components: {\n    // Don't restrict core/block/inline rules\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n    linkTarget:   '',           // set target to open link in\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Set doubles to '«»' for Russian, '„“' for German.\n    quotes: '“”‘’',\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if input not changed\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'block',\n        'inline',\n        'references',\n        'abbr2'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fences',\n        'heading',\n        'hr',\n        'htmlblock',\n        'lheading',\n        'list',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'htmltag',\n        'links',\n        'newline',\n        'text'\n      ]\n    }\n  }\n};\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n"],"sourceRoot":""}